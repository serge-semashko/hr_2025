tab_reports_chart.cfg

[comments]
descr=Графики сводных отчетов
input=none
output=HTML таблица объектов
parents=
author:Семашко С.
[end]

[parameters]
request_name=U:Список документов
LOG=ON 
tableCfg=table_no
$INCLUDE dat/common.dat[rowLinks]
[end]
[report]
    $INCLUDE [report header]
    $INCLUDE [report footer]
[end]
[get total sotr stavka]
    select count(*) as persons_count,  round(sum(stavka),2) as stavka_count 
    from sotrudniki sotr
    $INCLUDE utils.cfg[criteria] 
[end]
[total sotr table]
    $GET_DATA [get total sotr stavka]
    <table border=1 cellpadding=5 cellspacing=0>
    </br>
    <tr>
        $GET_DATA [get Totals]
        <td class="label">
            Количество ставок:
        </td><td>
            #stavka_count#
        </td>
        <td class="label">
            Количество человек:
        </td><td>
            #persons_count#
        </td>

    </tr>
    </table>
[end]



[report header]
<style>
.container {
  display: flex;
}

.sidebar-left {
  padding:10px;
  flex: 0 0 600px;
}
.content {
  padding:10px;
  flex: content;
}


.sidebar-right {
  flex: 0 0 250px;
}    
</style>
    <div  class=container style="margin: 1px;width: 95%">
            <div  class=sidebar-left >
               <div style="padding:3px;width:800px;" id="otdelenie_chart" class="graphContaner"> </div>  
               <div style="padding:3px;width:800px;" id="stack_chart" class="graphContaner"> </div> 
               <div style="width:800px" id="otdelenie_ppls_chart"    class="graphContaner"> </div> ??
               <div style="width:800px" id="otdelenie_ppls_chart_serial"    class="graphContaner"> </div> ??
            </div>
            <div  class=content>
     $SET_PARAMETERS qMONTH=#SELMONTH#
     $INCLUDE [get 1c payment month]
            <table id=reptab border=1>
                <TR style="font-size:2em;font-weight:bold">
                   <td  >Всего
                   </td>
                    <td>#cur_usedfond#</td>
                  <TD> 
                </tr>  
                <TR style="font-size:2em;font-weight:bold">
                   <td  >ФЗП
                   </td>
                    <td>#fzp#</td>
                  <TD> 
                <details open>
                <summary></summary>
                <TABLE>
                    #fzp_detail#
                </TABLE>
                </details>
                </TD>
                </TR>
                <TR style="font-size:2em;font-weight:bold">
                   <td >Премия</td>
                   <td>#bonusfzp#</td>
                  <TD> 
                <details>
                <summary></summary>
                <TABLE>
                   #bonusfzp_detail#
                </TABLE>
                 </td>  
               <TR style="font-size:2em;font-weight:bold">
                   <td >Стипендии</td>
                   <td>#stip#</td>
                  <TD> 
                <details>
                <summary></summary>
                <TABLE>
                   #stip_detail#
                </TABLE>
                 </td>  


               <TR style="font-size:2em;font-weight:bold">
                   <td >Прочее</td>
                   <td>#prochee#</td>
                  <TD> 
                <details>
                <summary></summary>
                <TABLE>
                   #prochee_detail#
                </TABLE>
                 </td>  

               <TR style="font-size:2em;font-weight:bold">
                   <td >Стимулирование</td>
                   <td>#stimul#</td>
                  <TD> 
                <details>
                <summary></summary>
                <TABLE>
                   #stimul_detail#
                </TABLE>
                 </td>  

               <TR style="font-size:2em;font-weight:bold">
                   <td >Отпуск</td>
                   <td>#otpusk#</td>
                  <TD> 
                <details>
                <summary></summary>
                <TABLE>
                   #otpusk_detail#
                </TABLE>
                 </td>  

            </table>
        </div>
    </div>
    $INCLUDE [get 1c payment]

[end]

[total table]
    $GET_DATA [get full]
    $LOG2  mean_age_salary = #mean_age_salary# <br> ??
    <table border=0 cellpadding=5 cellspacing=0>
    <tr><td class="label" > 
    $JS var mean_age_salary=JSON.parse(prm("mean_age_salary")); ??
    $GET_DATA [get Totals] 
    Сумма по отделу:</td><td>#SUM_OTDEL#</td>
    <td class="label" > Сумма по отделению:</td> <td>#SUM_OTDELENIE#</td>
    <td class="label">Сумма по категории:</td><td>#SUM_CATEGORY#</td></tr> 
    </table><br> 
[end]


[get 1c payment month]
   $USE_DB 1C 
   $SET_PARAMETERS fzp=0;bonusfzp=0;stip=0;otpusk=0;prochee=0;stimul=0;quartbonus=0
   $GET_DATA [1csql]
   $GET_DATA SQL:select (#fzp#+#bonusfzp#+#stip#+#otpusk#+#prochee#+#stimul#) as usedfond#SELMONTH#
   $GET_DATA SQL:select (#fzp#+#bonusfzp#+#stip#+#otpusk#+#prochee#+#stimul#) as cur_usedfond
   $SET_PARAMETERS d_stack#SELMONTH#={"value1": "#fzp#","value2": "#bonusfzp#", "value3":"#quartbonus#" , "value4":"#stip#" ,"value5":"#prochee#", "value6":"#stimul#" , "value7":"#otpusk#", "category":#SELMONTH#}
   $USE_DB
[end]

[get 1c payment]
   
   $USE_DB 1C 
   $SET_PARAMETERS qMONTH=1 
   $SET_PARAMETERS fzp=0;bonusfzp=0;stip=0;otpusk=0;prochee=0;stimul=0;quartbonus=0
   $GET_DATA [1csql]
   $GET_DATA SQL:select (#fzp#+#bonusfzp#+#stip#+#otpusk#+#prochee#+#stimul#) as usedfond1
   $SET_PARAMETERS d_stack1={"value1": "#fzp#","value2": "#bonusfzp#", "value3":"#quartbonus#" , "value4":"#stip#" ,"value5":"#prochee#", "value6":"#stimul#" , "value7":"#otpusk#", "category":"#:monthKvartal(prm('qMONTH'))#"}

   $SET_PARAMETERS qMONTH=2 
   $SET_PARAMETERS fzp=0;bonusfzp=0;stip=0;otpusk=0;prochee=0;stimul=0
   $GET_DATA [1csql]
   $GET_DATA SQL:select (#fzp#+#bonusfzp#+#stip#+#otpusk#+#prochee#+#stimul#) as usedfond2
   $SET_PARAMETERS d_stack2={"value1": "#fzp#","value2": "#bonusfzp#", "value3":"#quartbonus#" , "value4":"#stip#" ,"value5":"#prochee#", "value6":"#stimul#" , "value7":"#otpusk#", "category":"#:monthKvartal(prm('qMONTH'))#"}



   $SET_PARAMETERS qMONTH=3 
   $SET_PARAMETERS fzp=0;bonusfzp=0;stip=0;otpusk=0;prochee=0;stimul=0
   $GET_DATA [1csql]
   $GET_DATA SQL:select (#fzp#+#bonusfzp#+#stip#+#otpusk#+#prochee#+#stimul#) as usedfond3
   $SET_PARAMETERS d_stack3={"value1": "#fzp#","value2": "#bonusfzp#", "value3":"#quartbonus#" , "value4":"#stip#" ,"value5":"#prochee#", "value6":"#stimul#" , "value7":"#otpusk#", "category":"#:monthKvartal(prm('qMONTH'))#"}

   $USE_DB 
   $SET_PARAMETERS d_stack= [#d_stack1#, #d_stack2#, #d_stack3#]
   $GET_DATA SQL:select 1139996 - #usedfond1# -#usedfond2# - #usedfond3# as leftfond
   $SET_PARAMETERS fond_pie=[{pname:"#:monthKvartal(1)#", value: "#usedfond1#"},{pname:"#:monthKvartal(2)#", value: "#usedfond2#"}, {pname : "#:monthKvartal(3)#", value:"#usedfond3#"}, {pname : "Ост.", value:"#leftfond#"}]

   $SET_PARAMETERS fond_all=[{pname:"ФЗП", value: "#fzp#"},{pname:"Премия", value: "#bonusfzp#"}, {pname : "Кварт.", value:"#quartbonus#"} , {pname : "Стип.", value:"#stip#"}
   $SET_PARAMETERS fond_all=#fond_all#,{pname : "Прочее", value:"#prochee#"},{pname : "Стимул", value:"#stimul#"},{pname : "Отпуск", value:"#otpusk#"}, {pname : "Ост.", value:"#leftfond#"}]



[end]
[FZP entries]
    (
    'Выходное пособие при увольнении',
    'Доплата за расширение зоны обслуживания ',
    'Доплата за руководство бригадой ',
    'Доплата за совмещение должностей (профессий)',
    'Доплата за увеличение объёма выполняемых работ в %',
    'Доплата за учёную степень доктора наук',
    'Доплата за учёную степень кандидата наук',
    'Доплата как члену дирекции ОИЯИ',
    'Компенсация за работу в ОРВУ труда',
    'Компенсация за работу в РВУ труда',
    'Компенсация за работу во вредных условиях труда',
    'Надбавка (по часам) за выполнение дополнительного объёма работ',
    'Надбавка (по часам) за выполнение дополнительного объёма работ из ФЗП резерва дирекции',
    'Надбавка (по часам) за высокую квалификацию',
    'Надбавка 1 (по часам) за выполнение дополнительного объёма работ',
    'Надбавка за выполнение дополнительного объёма работ',
    'Надбавка за выполнение дополнительного объёма работ из ФЗП резерва дирекции',
    'Надбавка за выполнение дополнительных обязанностей из ФЗП резерва дирекции в %',
    'Надбавка за выполнение дополнительных обязанностей из ФЗП резерва дирекции в руб.',
    'Надбавка за выполнение дополнительных обязанностей из ФЗП структурного подразделения в %',
    'Надбавка за выполнение дополнительных обязанностей из ФЗП структурного подразделения в руб.',
    'Надбавка за высокую квалификацию из ФЗП резерва дирекции',
    'Надбавка за высокую квалификацию из ФЗП структурного подразделения',
    'Надбавка за и.о. начальника штаба ГО из ФЗП структурного подразделения',
    'Надбавка1 за выполнение дополнительного объёма работ',
    'Надбавка1 за выполнение дополнительных обязанностей из ФЗП резерва дирекции',
    'Надбавка2 за выполнение дополнительного объёма работ',
    'Оклад по дням',
    'Оклад по часам',
    'Оплата больничных листов за счет работодателя',
    'Оплата донору',
    'Оплата по среднему заработку',
    'Отпуск учебный',
    'Пособие по уходу за ребёнком до 3 лет')
[end]
[BONUS entries]
    ('Премия из ФЗП ЛФВЭ')
[end]

[stipends entries]
 ('Стипендия им. А.М.Балдина', 'Стипендия им. В.И.Векслера', 'Стипендия имени академика М.А.Маркова из ФЗП ЛФВЭ')
[end]
[prochee entries]
   (
    'Выслуга лет',
    'Выслуга лет  за работу во вредных условиях',
    'Доплата за вечерние часы',
    'Доплата за выполнение обязанностей отсутствующего работника в руб.',
    'Доплата за ночные часы',
    'Доплата за работу в праздники и выходные',
    'Оплата праздничных и выходных дней',
    'Оплата сверхурочных часов'  )

[end]
[stimul entries]
    (
    'Выплаты из фонда дополнительного стимулирования ЛФВЭ',
    'Выплаты из фонда дополнительного стимулирования ЛФВЭ',
    'Надбавка из фонда стимулирования высококвалифицированного персонала ЛФВЭ',
    'Надбавка из фонда стимулирования высококвалифицированного персонала ЛФВЭ (по часам)'
    )
[end]

[otpusk entries]
    (
    'Дополнительный отпуск за работу в ОРВУ труда',
    'Дополнительный отпуск за работу с вредными и(или) опасными условиями труда',
    'Компенсация отпуска по календарным дням',
    'Компенсация отпуска при увольнении по календарным дням',
    'Компенсация отпуска при увольнении по шестидневке',
    'Необлагаемая компенсация отпуска ',
    'Оплата отпуска по календарным дням',
    'Удержание за неотработанные дни отпуска по календарным дням'
    )

[end]


[1csql]
    SELECT
    FLOOR(sum([Результат])/1000)  as fzp
    ,month([ПериодРегистрации]) as monthsel ??
    FROM [DB_1C_2].[1c8_2].[Начисления#SELYEAR#]
    where  [ВидРасчета] in 
        $INCLUDE [FZP entries]
    and month([ПериодРегистрации]) = #qMONTH#
    and FLOOR([КодПодразделениеОрганизации]/100000) =1
    ;

    SELECT
	concat( '<tr><td  width=600pt>', 
	[ВидРасчета],'</td><td>', 
    FLOOR(sum([Результат])/1000), '</td></tr>' ) as fzp_detail
    FROM [DB_1C_2].[1c8_2].[Начисления#SELYEAR#]
    where  [ВидРасчета] in 
        $INCLUDE [FZP entries]
    and month([ПериодРегистрации]) = #qMONTH#
    and FLOOR([КодПодразделениеОрганизации]/100000) =1
    group by [ВидРасчета]
    order by FLOOR(sum([Результат])/1000) desc;



    SELECT
    FLOOR(sum([Результат])/1000) as bonusfzp
    ,month([ПериодРегистрации]) as monthsel ??
    FROM [DB_1C_2].[1c8_2].[Начисления#SELYEAR#]
    where  [ВидРасчета] in 
        $INCLUDE [BONUS entries]   
    and month([ПериодРегистрации]) = #qMONTH#
    and FLOOR([КодПодразделениеОрганизации]/100000) =1
     group by month([ПериодРегистрации]) ??
    order by month([ПериодРегистрации]) ??
    ;
    SELECT
	concat( '<tr><td  width=600pt>', 
	[ВидРасчета],'</td><td>', 
    FLOOR(sum([Результат])/1000), '</td></tr>' ) as bonusfzp_detail
    FROM [DB_1C_2].[1c8_2].[Начисления#SELYEAR#]
    where  [ВидРасчета] in 
        $INCLUDE [BONUS entries]   
    and month([ПериодРегистрации]) = #qMONTH#
    and FLOOR([КодПодразделениеОрганизации]/100000) =1
    group by [ВидРасчета]
    order by FLOOR(sum([Результат])/1000) desc;

    SELECT
    FLOOR(sum([Результат])/1000) as quartbonus
    ,month([ПериодРегистрации]) as monthsel ??
    FROM [DB_1C_2].[1c8_2].[Начисления#SELYEAR#]
    where  [ВидРасчета] in 
            ('Квартальная премия ЛФВЭ')
    and month([ПериодРегистрации]) = #qMONTH#
    and FLOOR([КодПодразделениеОрганизации]/100000) =1
     group by month([ПериодРегистрации]) ??
    order by month([ПериодРегистрации]) ??
    ;

    SELECT
    FLOOR(sum([Результат])/1000) as stip
    ,month([ПериодРегистрации]) as monthsel ??
    FROM [DB_1C_2].[1c8_2].[Начисления#SELYEAR#]
    where  [ВидРасчета] in 
        $INCLUDE [stipends entries]
    and month([ПериодРегистрации]) = #qMONTH#
    and FLOOR([КодПодразделениеОрганизации]/100000) =1
     group by month([ПериодРегистрации]) ??
    order by month([ПериодРегистрации])??
    ;

    SELECT
	concat( '<tr><td  width=600pt>', 
	[ВидРасчета],'</td><td>', 
    FLOOR(sum([Результат])/1000), '</td></tr>' ) as stip_detail
    FROM [DB_1C_2].[1c8_2].[Начисления#SELYEAR#]
    where  [ВидРасчета] in 
        $INCLUDE [stipends entries]
    and month([ПериодРегистрации]) = #qMONTH#
    and FLOOR([КодПодразделениеОрганизации]/100000) =1
    group by [ВидРасчета]
    order by FLOOR(sum([Результат])/1000) desc;




    SELECT
      FLOOR(sum([Результат])/1000) as prochee
    ,month([ПериодРегистрации]) as monthsel ??
    FROM [DB_1C_2].[1c8_2].[Начисления#SELYEAR#]
    where  [ВидРасчета] in 
        $INCLUDE [prochee entries]
    and month([ПериодРегистрации]) = #qMONTH#
    and FLOOR([КодПодразделениеОрганизации]/100000) =1
     group by month([ПериодРегистрации]) ??
    order by month([ПериодРегистрации]) ??
    ;
    SELECT
	concat( '<tr><td width=600pt>', 
	[ВидРасчета],'</td><td>', 
    FLOOR(sum([Результат])/1000), '</td></tr>' ) as prochee_detail
    FROM [DB_1C_2].[1c8_2].[Начисления#SELYEAR#]
    where  [ВидРасчета] in 
        $INCLUDE [prochee entries]
    and month([ПериодРегистрации]) = #qMONTH#
    and FLOOR([КодПодразделениеОрганизации]/100000) =1
    group by [ВидРасчета]
    order by FLOOR(sum([Результат])/1000) desc;





    SELECT
      FLOOR(sum([Результат])/1000) as stimul
    ,month([ПериодРегистрации]) as monthsel ??
    FROM [DB_1C_2].[1c8_2].[Начисления#SELYEAR#]
    where  [ВидРасчета] in 

    $INCLUDE [stimul entries]
    and month([ПериодРегистрации]) = #qMONTH#
    and FLOOR([КодПодразделениеОрганизации]/100000) =1
     group by month([ПериодРегистрации]) ??
    order by month([ПериодРегистрации]) ??
    ;

    SELECT
	concat( '<tr><td  width=600pt>', 
	[ВидРасчета],'</td><td>', 
    FLOOR(sum([Результат])/1000), '</td></tr>' ) as stimul_detail
    FROM [DB_1C_2].[1c8_2].[Начисления#SELYEAR#]
    where  [ВидРасчета] in 
        $INCLUDE [stimul entries]
    and month([ПериодРегистрации]) = #qMONTH#
    and FLOOR([КодПодразделениеОрганизации]/100000) =1
    group by [ВидРасчета]
    order by FLOOR(sum([Результат])/1000) desc;



    SELECT
      FLOOR(sum([Результат])/1000) as otpusk
    ,month([ПериодРегистрации]) as monthsel ??
    FROM [DB_1C_2].[1c8_2].[Начисления#SELYEAR#]
    where  [ВидРасчета] in 
        $INCLUDE [otpusk entries]
    and month([ПериодРегистрации]) = #qMONTH#
    and FLOOR([КодПодразделениеОрганизации]/100000) =1
     group by month([ПериодРегистрации]) ??
    order by month([ПериодРегистрации]) ??
    ;

    SELECT
	concat( '<tr><td width=600pt>', 
	[ВидРасчета],'</td><td>', 
    FLOOR(sum([Результат])/1000), '</td></tr>' ) as otpusk_detail
    FROM [DB_1C_2].[1c8_2].[Начисления#SELYEAR#]
    where  [ВидРасчета] in 
        $INCLUDE [otpusk entries]
    and month([ПериодРегистрации]) = #qMONTH#
    and FLOOR([КодПодразделениеОрганизации]/100000) =1
    group by [ВидРасчета]
    order by FLOOR(sum([Результат])/1000) desc;



[end]


[get full]
   select sum(ifnull(oklad.oklad,0)+ifnull(oklad.kompens,0)+ifnull(oklad.dopl_stepen,0)
    +ifnull(oklad.personal_nadbav,0)+ifnull(oklad.personal_imen_nadbav,0)
    +ifnull(oklad.premija_rabochim+oklad.sovmeshenie,0)) as sum_otdelenie,
     sotr.TopParent_Name, count(sotr.TopParent_Name) as ppls,
    sum(ifnull(oklad.oklad,0)+ifnull(oklad.kompens,0)+ifnull(oklad.dopl_stepen,0)
    +ifnull(oklad.personal_nadbav,0)+ifnull(oklad.personal_imen_nadbav,0)
    +ifnull(oklad.premija_rabochim+oklad.sovmeshenie,0))/count(sotr.TopParent_Name) as mean
    from sotrudniki sotr
    left join oklad on sotr.tab_n=oklad.tab_n
    where lab_id = #LAB_ID#
    group by sotr.TopParent_Name;

   select sum(ifnull(oklad.oklad,0)+ifnull(oklad.kompens,0)+ifnull(oklad.dopl_stepen,0)
    +ifnull(oklad.personal_nadbav,0)+ifnull(oklad.personal_imen_nadbav,0)
    +ifnull(oklad.premija_rabochim+oklad.sovmeshenie,0)) as sum_otdelenie, sotr.TopParent_Name, count(sotr.TopParent_Name) as ppls,
    sum(ifnull(oklad.oklad,0)+ifnull(oklad.kompens,0)+ifnull(oklad.dopl_stepen,0)
    +ifnull(oklad.personal_nadbav,0)+ifnull(oklad.personal_imen_nadbav,0)
    +ifnull(oklad.premija_rabochim+oklad.sovmeshenie,0))/count(sotr.TopParent_Name) as mean
    from sotrudniki sotr
    left join oklad on sotr.tab_n=oklad.tab_n
    $INCLUDE utils.cfg[criteria] 
    group by sotr.TopParent_Name
 ;
   select concat("{ pname:'",sotr.TopParent_Name,"'",  
    Средняя зарплата ??
        ", v1:",sum(ifnull(oklad.oklad,0)+ifnull(oklad.kompens,0)+ifnull(oklad.dopl_stepen,0)) div (count(sotr.TopParent_Name)*1000),
    Средний возраст ??
        ", v2:",sum(((year(now())-year(sotr.dr)))) div count(sotr.TopParent_Name),
    Всего дюдей ??
        ", v3:",count(sotr.TopParent_Name),
        "},") 
        as d_otdelenie_age_salary
    from sotrudniki sotr
    left join oklad on sotr.tab_n=oklad.tab_n
    $INCLUDE utils.cfg[criteria] 
    group by sotr.TopParent_Name
 ;
   select concat("{ pname:'",
       (select short_name from struktura where id=subTopParent_code),
       subTopParent_code, ??
    "'",  
    Средняя зарплата ??
        ", v1:",sum(ifnull(oklad.oklad,0)+ifnull(oklad.kompens,0)+ifnull(oklad.dopl_stepen,0)) div (count(sotr.subTopParent_code)*1000),
    Средний возраст ??
        ", v2:",sum(((year(now())-year(sotr.dr)))) div count(sotr.subTopParent_code),
    Всего дюдей ??
        ", v3:",count(sotr.subTopParent_code),
        "},") 
        as d_otdel_age_salary
    from sotrudniki sotr
    left join oklad on sotr.tab_n=oklad.tab_n
    $INCLUDE utils.cfg[criteria] 
    group by sotr.subTopParent_code
 ;

   select concat("{ pname:'",sotr.TopParent_Name,  "', value:",sum(ifnull(oklad.oklad,0)+ifnull(oklad.kompens,0)+ifnull(oklad.dopl_stepen,0)) div 1000,"},")
         as d_otdelenie
    from sotrudniki sotr
    left join oklad on sotr.tab_n=oklad.tab_n
    $INCLUDE utils.cfg[criteria] 
    group by sotr.TopParent_Name
 ;
   select concat("{ pname:'",
    (select short_name from struktura where id=subTopParent_code),
     "', value:",sum(ifnull(oklad.oklad,0)+ifnull(oklad.kompens,0)+ifnull(oklad.dopl_stepen,0)) div 1000,"},\n") 
    as d_otdel
    from sotrudniki sotr
    left join oklad on sotr.tab_n=oklad.tab_n
    $INCLUDE utils.cfg[criteria] 
    group by sotr.subTopParent_code
 ;
   select concat("{ pname:'",sotr.category,"'",  
    Средняя зарплата ??
        ", v1:",sum(ifnull(oklad.oklad,0)+ifnull(oklad.kompens,0)+ifnull(oklad.dopl_stepen,0)) div (count(sotr.category)*1000),
    Средний возраст ??
        ", v2:",sum(((year(now())-year(sotr.dr)))) div count(sotr.category),
    Всего дюдей ??
        ", v3:",count(sotr.category),
        "},") 
        as d_category
    from sotrudniki sotr
    left join oklad on sotr.tab_n=oklad.tab_n
    $INCLUDE utils.cfg[criteria] 
    group by sotr.category
 ;
Распределение по возрасту ??
    delete from tmp_age;
    insert into tmp_age  (
    select ((year(now())-year(sotr.dr)) div  2) * 2 as yo,stavka, ifnull(itogo_n,0)
    from sotrudniki sotr
    left join oklad o on sotr.tab_n=o.tab_n
        $INCLUDE utils.cfg[criteria] 
        and itogo_n is not null ??LAB_ID=100000
    )
    ;
    select concat("{ pname:' ",yo,  "', value:",  1 div(count(yo)*100),  ", cnt:", sum(stavka),  ", salary:",round( sum(itogo_n)/(sum(stavka)),0),"},") as d_age
    from tmp_age
    group by yo
    ;
    select  round( sum(yo*stavka)/(sum(stavka)),2) as mean_age, 
	concat(round( sum(itogo_n)/(sum(stavka)),0),"т.р.") as mean_salary
    from tmp_age

[end]

[get otdels]
[end]

[get Totals]
   $LOG2 otdelenie #OTDELENIE# otdel #OTDEL#
    select sum(ifnull(oklad.oklad,0)+ifnull(oklad.kompens,0)+ifnull(oklad.dopl_stepen,0)
    +ifnull(oklad.personal_nadbav,0)+ifnull(oklad.personal_imen_nadbav,0)
    +ifnull(oklad.premija_rabochim+oklad.sovmeshenie,0)) as SUM_OTDEL
    from sotrudniki sotr
    left join oklad on sotr.tab_n=oklad.tab_n
    where lab_id = #LAB_ID#
    and sotr.subTopParent_code = #otdel#  ??otdel
    and sotr.topParent_code = #otdelenie# ??otdelenie
    order by #srt# #desc#
    ;

    select sum(ifnull(oklad.oklad,0)+ifnull(oklad.kompens,0)+ifnull(oklad.dopl_stepen,0)
    +ifnull(oklad.personal_nadbav,0)+ifnull(oklad.personal_imen_nadbav,0)
    +ifnull(oklad.premija_rabochim+oklad.sovmeshenie,0)) as SUM_OTDELENIE
    from sotrudniki sotr
    left join oklad on sotr.tab_n=oklad.tab_n
    where lab_id = #LAB_ID#
    and sotr.subTopParent_code = #otdel#  ??otdel
    and sotr.topParent_code = #otdelenie# ??otdelenie
    order by #srt# #desc#
    ;
    select sum(ifnull(oklad.oklad,0)+ifnull(oklad.kompens,0)+ifnull(oklad.dopl_stepen,0)
    +ifnull(oklad.personal_nadbav,0)+ifnull(oklad.personal_imen_nadbav,0)
    +ifnull(oklad.premija_rabochim+oklad.sovmeshenie,0)) as SUM_CATEGORY
    from sotrudniki sotr
    left join oklad on sotr.tab_n=oklad.tab_n
    where lab_id = #LAB_ID#
    and sotr.category like '#category#'  ??category
    and sotr.subTopParent_code = #otdel#  ??otdel
    and sotr.topParent_code = #otdelenie# ??otdelenie
    order by #srt# #desc#
[end]




                {
                    "type": "ColumnSeries",
                    "name": "ФЗП",
                    "columns": {
                        "template": {
                            "type": "Column",
                            "strokeOpacity": 0,
                            "tooltipText": "Series: {name}\n{categoryY}: {valueX}"
                        }
                    },
                    "stacked": true,
                    "dataFields": {
                        "valueX": "value1",
                        "categoryY": "category"
                    },
                    "sequencedInterpolation": true,
                    "sequencedInterpolationDelay": 100
                }, 

                {
                    "type": "ColumnSeries",
                    "name": "Премия",
                    "columns": {
                        "template": {
                            "type": "Column",
                            "strokeOpacity": 0,
                            "tooltipText": "Series: {name}\n{categoryY}: {valueX}"
                        }
                    },
                    "stacked": true,
                    "dataFields": {
                        "valueX": "value2",
                        "categoryY": "category"
                    },
                    "sequencedInterpolation": true,
                    "sequencedInterpolationDelay": 100
                }, 



[report footer]
    $SET_PARAMETERS NumTableCols=14;
    $SET_PARAMETERS d_otdelenie=[#d_otdelenie#]
    $SET_PARAMETERS d_category=[#d_category#]
    $SET_PARAMETERS d_otdel=[#d_otdel#]
    $SET_PARAMETERS d_age=[#d_age#]
    $SET_PARAMETERS d_otdelenie_age_salary=[#d_otdelenie_age_salary#]
    $SET_PARAMETERS d_otdel_age_salary=[#d_otdel_age_salary#]
    
$LOG2 !!!!!!!!!!!!!!!!!!!!    var a = "#d_otdel#"; !!!!!!!!!!!!!! <br>
    <script type="text/javascript">
        console.log("before create chart 1 ssssssss");
        var a = #d_otdel#;
        console.log("");
    </script>
======================================================
$LOG2 !!!!!!!!!!!!!!!!!!!!    Otdelenie !!!!!!!!!!!!!! <br>
$LOG2             "dataProvider" otdelenie:   #d_otdelenie# <br>  
$LOG2            "dataProvider": d_stack =  #d_stack# <br> 
  <script type="text/javascript">
        let chart = am4core.createFromConfig(
            {
                "type": "XYChart",
                "data": #d_stack#,
                "xAxes": [{
                    "type": "ValueAxis",
                    "renderer": {
                        "maxLabelPosition": 0.98
                    }
                }],
                "yAxes": [{
                    "type": "CategoryAxis",
                    "dataFields": {
                        "category": "category"
                    },
                    "renderer": {
                        "grid": {
                            "template": {
                                "type": "Grid",
                                "location": 0
                            }
                        },
                        "minGridDistance": 20
                    }
                }],
                "series": [
                {
                    "type": "ColumnSeries",
                    "name": "ФЗП",
                    "columns": {
                        "template": {
                            "type": "Column",
                            "strokeOpacity": 0,
                            "tooltipText": "Series: {name}\n{categoryY}: {valueX}"
                        }
                    },
                    "stacked": true,
                    "dataFields": {
                        "valueX": "value1",
                        "categoryY": "category"
                    },
                    "sequencedInterpolation": true,
                    "sequencedInterpolationDelay": 100
                }, 

                {
                    "type": "ColumnSeries",
                    "name": "Премия",
                    "columns": {
                        "template": {
                            "type": "Column",
                            "strokeOpacity": 0,
                            "tooltipText": "Series: {name}\n{categoryY}: {valueX}"
                        }
                    },
                    "stacked": true,
                    "dataFields": {
                        "valueX": "value2",
                        "categoryY": "category"
                    },
                    "sequencedInterpolation": true,
                    "sequencedInterpolationDelay": 100
                }, 

                {
                    "type": "ColumnSeries",
                    "name": "Кварт.",
                    "columns": {
                        "template": {
                            "type": "Column",
                            "strokeOpacity": 0,
                            "tooltipText": "Series: {name}\n{categoryY}: {valueX}"
                        }
                    },
                    "stacked": true,
                    "dataFields": {
                        "valueX": "value3",
                        "categoryY": "category"
                    },
                    "sequencedInterpolation": true,
                    "sequencedInterpolationDelay": 100
                }, 

                {
                    "type": "ColumnSeries",
                    "name": "Стип.",
                    "columns": {
                        "template": {
                            "type": "Column",
                            "strokeOpacity": 0,
                            "tooltipText": "Series: {name}\n{categoryY}: {valueX}"
                        }
                    },
                    "stacked": true,
                    "dataFields": {
                        "valueX": "value4",
                        "categoryY": "category"
                    },
                    "sequencedInterpolation": true,
                    "sequencedInterpolationDelay": 100
                }, 
                {
                    "type": "ColumnSeries",
                    "name": "Прочее",
                    "columns": {
                        "template": {
                            "type": "Column",
                            "strokeOpacity": 0,
                            "tooltipText": "Series: {name}\n{categoryY}: {valueX}"
                        }
                    },
                    "stacked": true,
                    "dataFields": {
                        "valueX": "value5",
                        "categoryY": "category"
                    },
                    "sequencedInterpolation": true,
                    "sequencedInterpolationDelay": 100
                }, 
                {
                    "type": "ColumnSeries",
                    "name": "Стимул.",
                    "columns": {
                        "template": {
                            "type": "Column",
                            "strokeOpacity": 0,
                            "tooltipText": "Series: {name}\n{categoryY}: {valueX}"
                        }
                    },
                    "stacked": true,
                    "dataFields": {
                        "valueX": "value6",
                        "categoryY": "category"
                    },
                    "sequencedInterpolation": true,
                    "sequencedInterpolationDelay": 100
                }, 
                {
                    "type": "ColumnSeries",
                    "name": "Отпуск",
                    "columns": {
                        "template": {
                            "type": "Column",
                            "strokeOpacity": 0,
                            "tooltipText": "Series: {name}\n{categoryY}: {valueX}"
                        }
                    },
                    "stacked": true,
                    "dataFields": {
                        "valueX": "value7",
                        "categoryY": "category"
                    },
                    "sequencedInterpolation": true,
                    "sequencedInterpolationDelay": 100
                } 



],
                "legend": {
                        "type": "Legend",
                        "id": "1"
    }
            },
            document.getElementById('stack_chart')
        );
    
  </script>

    <script type="text/javascript">
        console.log("create chart 1 sssssss");
        
        var chart1_0 = AmCharts.makeChart("otdelenie_chart", {
            "titles": [{
			"id": "1",
                        text: "Февраль. Распределение по ФОТ (1139996т.р.)"
        	}],
            "type": "pie",
            "theme": "light",
            "angle": 1.1,
            "dataProvider": #fond_pie#, 
            "thousandsSeparator": " ",
            "valueField": "value",
            "titleField": "pname",
            "depth3D": 1,
            "innerRadius": 3,
            "radius": 144,
            "labelRadius": 4,
            "percentPrecision": 1,
            "precision": 0,
            "fontSize": 12,
            "labelText": "[[title]] \n [[percents]]%  ([[value]]т.р.)",
            "balloon": {
                "fixedPosition": true
            },
            "export": {
                "enabled": true
            }
        });

        var chart1_1 = AmCharts.makeChart("1otdelenie_chart_serial", {
            "titles": [{
			"id": "1",
                        text: "Распределение по ФОТ"
        	}],

            "rotate": true,
            "type": "serial",
                "theme": "light",
            "legend": {
                "horizontalGap": 10,
                "maxColumns": 1,
                "position": "bottom",
                        "useGraphSettings": true,
                        "markerSize": 10
            },
            "dataProvider": #d_otdelenie#, ??!otdelenie
            "dataProvider": #d_otdel#, ??otdelenie
            "graphs": [
             {
                "balloonText": "<span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                "fillAlphas": 0.8,
                "labelText": "[[value]]т.р.",
                "lineAlpha": 0.3,
                "title": "ФОТ",
                "type": "column",
                        "color": "#000000",
                "valueField": "value"
            } ],
            "categoryField": "pname",
            "categoryAxis": {
                "gridPosition": "start",
                "axisAlpha": 0,
                "gridAlpha": 0,
                "position": "left"
            },
            "export": {
                "enabled": true
             }

        });



        var chart2_0 = AmCharts.makeChart("1otdelenie_ppls_chart", {
    "titles": [

		{
			"id": "1",
                        text: "Распределение по сотрудникам"
		}
	],

            "type": "pie",
            "theme": "light",
            "angle": 17.1,
            "dataProvider": #d_otdelenie_age_salary#, ??!otdelenie
            "dataProvider": #d_otdel_age_salary#, ??otdelenie
            "thousandsSeparator": " ",
            "valueField": "v3",
            "titleField": "pname",
            "depth3D": 1,
            "innerRadius": 3,
            "radius": 164,
            "labelRadius": 4,
            "percentPrecision": 1,
            "precision": 0,
            "fontSize": 12,
            "labelText": "[[title]] \n [[percents]]%  ([[value]])",
            "balloon": {
                "fixedPosition": true
            },
            "export": {
                "enabled": true
            }
        });

        var chart2_1 = AmCharts.makeChart("1otdelenie_ppls_chart_serial", {
            "titles": [{
			"id": "1",
                            text: "Распределение по сотрудникам"        	}],

            "rotate": true,
            "type": "serial",
                "theme": "light",
            "legend": {
                "horizontalGap": 10,
                "maxColumns": 1,
                "position": "bottom",
                        "useGraphSettings": true,
                        "markerSize": 10
            },
            "dataProvider": #d_otdelenie_age_salary#, ??!otdelenie
            "dataProvider": #d_otdel_age_salary#, ??otdelenie
            "graphs": [
             {
                "balloonText": "<span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
                "fillAlphas": 0.8,
                "labelText": "[[value]]чел.",
                "lineAlpha": 0.3,
                "title": "Сотрудники",
                "type": "column",
                        "color": "#000000",
                "valueField": "v3"
            } ],
            "categoryField": "pname",
            "categoryAxis": {
                "gridPosition": "start",
                "axisAlpha": 0,
                "gridAlpha": 0,
                "position": "left"
            },
            "export": {
                "enabled": true
             }

        });




 
    var chart3_0 = AmCharts.makeChart("1age_hist_ppls_chart", {
        width:1400,
            "titles": [{
			"id": "1",
                            text: "Распределение по возрастам. Кол-во ставок.Средний возраст=#mean_age#"   	}], 
    "rotate": false,
    "type": "serial",
	"theme": "light",
    "legend": {
        "horizontalGap": 1,
        "maxColumns": 1,
        "position": "bottom",
		"useGraphSettings": true,
		"markerSize": 5
    },
    "dataProvider": #d_age#,
    "graphs": [
     {
        "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
        "fillAlphas": 0.8,
        "labelText": "[[value]]т.р.",
        "lineAlpha": 0.3,
        "title": "Средняя зарплата",
        "type": "column",
	"lineColor": "#FF6600",
	"color": "#FF6600",
        "valueField": "value1"
    }, {
        "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
        "fillAlphas": 0.8,
        "labelText": "[[value]]",
        "lineAlpha": 0.3,
        "title": "Ставок",
        "type": "column",
	"lineColor": "#0000FF",
	"color": "#7777FF",
        "valueField": "cnt"
    }, 
],
    "categoryField": "pname",
    "export": {
    	"enabled": true
     }
});

    var chart3_1 = AmCharts.makeChart("age_hist_salary_chart", {
        width:1400,
            "titles": [{
			"id": "1",
                            text: "Распределение по возрастам. Зарплата. Средняя=#mean_salary#"   	}],
    "rotate": false,
    "type": "serial",
	"theme": "light",
    "legend": {
        "horizontalGap": 1,
        "maxColumns": 1,
        "position": "bottom",
		"useGraphSettings": true,
		"markerSize": 5
    },
    "dataProvider": #d_age#,
    "graphs": [
     {
        "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
        "fillAlphas": 0.8,
        "labelText": "[[value]]т.р.",
        "lineAlpha": 0.3,
        "title": "Средняя зарплата",
        "type": "column",
	"lineColor": "#FF6600",
	"color": "#FF6600",
        "valueField": "value"
    }, {
        "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
        "fillAlphas": 0.8,
        "labelText": "[[value]]",
        "lineAlpha": 0.3,
        "title": "Человек",
        "type": "column",
	"lineColor": "#0000FF",
	"color": "#7777FF",
        "valueField": "salary"
    }, 
],
    "categoryField": "pname",
    "export": {
    	"enabled": true
     }
});




var chart4_0 = AmCharts.makeChart("1age_chart", {
    "rotate": true,
    "type": "serial",
	"theme": "light",
    "legend": {
        "horizontalGap": 10,
        "maxColumns": 1,
        "position": "bottom",
		"useGraphSettings": true,
		"markerSize": 10
    },
    "dataProvider": #d_otdelenie_age_salary#, ??!otdelenie
    "dataProvider": #d_otdel_age_salary#, ??otdelenie

    "valueAxes": [
		{
			"id": "1",
			"title": ""
		}
        ],

    "graphs": [
     {
        "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
        "fillAlphas": 0.8,
        "labelText": "[[value]]",
        "lineAlpha": 0.3,
        "title": "Средняя зарплата",
        "type": "column",
		"color": "#000000",
        "valueField": "v1"
    }, {
        "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
        "fillAlphas": 0.8,
        "labelText": "[[value]]",
        "lineAlpha": 0.3,
        "title": "Средний возраст",
        "type": "column",
		"color": "#000000",
        "valueField": "v2"
    }, ],
    "categoryField": "pname",
    "categoryAxis": {
        "gridPosition": "start",
        "axisAlpha": 0,
        "gridAlpha": 0,
        "position": "left"
    },
    "export": {
    	"enabled": true
     }

});

var chart5_0 = AmCharts.makeChart("1category_chart", {
    "rotate": true,
    "type": "serial",
	"theme": "light",
    "legend": {
        "horizontalGap": 10,
        "maxColumns": 1,
        "position": "bottom",
		"useGraphSettings": true,
		"markerSize": 10
    },
    "dataProvider": #d_category#,
    "valueAxes": [{
            "id":"v1",
            "axisColor": "#FF6600",
            "axisThickness": 2,
            "axisAlpha": 1,
            "titleFontSize": 10,
            "position": "left"
        }, {
            "titleFontSize": 10,
            "id":"v2",
            "axisColor": "#1111cc",
            "axisThickness": 2,
            "axisAlpha": 1,
            "position": "right"
        }, {
            "id":"v3",
            "axisColor": "#B0DE09",
            "axisThickness": 2,
            "gridAlpha": 0,
            "offset": 50,
            "axisAlpha": 1,
            "position": "left"
        }],
    "graphs": [
     {
        "valueAxis": "v1",
        "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
        "fillAlphas": 0.8,
        "labelText": "[[value]]т.р.",
        "lineAlpha": 0.3,
        "title": "Средняя зарплата",
        "type": "column",
	"lineColor": "#FF6600",
	"color": "#FF6600",
        "valueField": "v1"
    }, {
        "valueAxis": "v2",
        "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
        "fillAlphas": 0.8,
        "labelText": "[[value]]лет",
        "lineAlpha": 0.3,
        "title": "Средний возраст",
        "type": "column",
	"lineColor": "#0000FF",
	"color": "#7777FF",
        "valueField": "v2"
    }, 
{
        "valueAxis": "v3",
        "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
        "fillAlphas": 0.8,
        "labelText": "[[value]]",
        "lineAlpha": 0.3,
        "title": "Сотрудников",
        "type": "column",
	"lineColor": "#B0DE09",
	"color": "#B0DE09",
        "valueField": "v3"
    }, 
],
    "categoryField": "pname",
    "categoryAxis": {
        "gridPosition": "start",
        "axisAlpha": 0,
        "gridAlpha": 0,
        "position": "left"
    },
    "export": {
    	"enabled": true
     }

});


    </script>



[end]
