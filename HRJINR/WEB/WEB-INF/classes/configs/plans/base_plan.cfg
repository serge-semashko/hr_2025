[comments]
[end]

[description]
[end]


[get divisions and staff]
select concat('["',REPLACE(REPLACE(en, '\r', ''), '\n', ''),'","',REPLACE(REPLACE(ru, '\r', ''), '\n', ''),'"],') as trans from lang;
SELECT  
   CONCAT(
		'{ pid:',s.pid, ',',
		'lvl:',3, ', ',
	   'id:',s.id , ', ',
		'name:"', s.short_name , '"}, '
		 ) as lhep_divs
 
 FROM struktura s WHERE  pid IN (SELECT id FROM struktura s WHERE  s.pid=100000) 
 UNION 
SELECT  
   CONCAT(
		'{ pid:',s1.pid, ',',
		'lvl:',2, ', ',
	   'id:',s1.id , ', ',
		'name:"', s1.short_name , '"}, '
		 ) 
 FROM struktura s1 WHERE  id IN (SELECT id FROM struktura s1 WHERE  s1.pid=100000) ;


SELECT 
CONCAT(
'{"rooms":"',
a.room , '",',
'"room_id":"',
a.room_id , '",',
'"buildings":"',
a.building    , '",',
(
SELECT
CONCAT(
'"lab_id":',   s.lab_id,',',
'"fl_id":',
s.person_id,',',
'"tabn":',
s.tab_n,',',
'"TopParent_code":',
s.TopParent_code,',',
'"SubTopParent_code":',
s.SubTopParent_code,',',
'"f":"',
s.F	,'",',
'"i":"',
s.i	,'",',
'"o":"',
s.o	,'",',
'"phone":""',
'},'
) 
FROM sotrudniki s
WHERE 
(s.datauvolen > current_date or s.datauvolen is NULL) AND  ??
(  s.lab_id=#lab_code#) and s.tab_n=a.tab_n )
) as staff_lhep
FROM accommodation_v2 a 
WHERE a.room_id>0 



[end]


SELECT 
CONCAT(
'{"rooms":"',
a.room , '",',
'"room_id":"',
a.room_id , '",',
'"buildings":"',
a.building    , '",',
(
SELECT
CONCAT(
'"lab_id":',   s.lab_id,',',
'"fl_id":',
s.person_id,',',
'"tabn":',
s.tab_n,',',
'"TopParent_code":',
s.TopParent_code,',',
'"SubTopParent_code":',
s.SubTopParent_code,',',
'"f":"',
s.F	,'",',
'"i":"',
s.i	,'",',
'"o":"',
s.o	,'",',
'"phone":""',
'},'
) 
FROM sotrudniki s
WHERE (s.datauvolen > current_date or s.datauvolen is NULL)
AND (  s.lab_id=#lab_code#) and s.tab_n=a.tab_n
)
) as staff_lhep
FROM accommodation_v2 a 
WHERE a.room_id>0 




[report]
$SET_PARAMETERS lab_dir=1;owner=LHEP ??lab_code=100000
$SET_PARAMETERS lab_dir=MLIT;owner=MLIT ??lab_code=600000
$SET_PARAMETERS lab_dir=LRB;owner=LRB ??lab_code=90000

  $INCLUDE dat/common.dat[head]
<script>
$INCLUDE /plans/labs_divs.js[lhep divs] ??lab_code=100000
$INCLUDE /plans/labs_divs.js[lit divs] ??lab_code=600000
</script>

$INCLUDE /plans/lhep/plan_alone.js[fill structura menu]    
$GET_DATA [get divisions and staff]

$LOG2 !!!!!!!!!!!!!!!!!!!!!!!!!!staff_lhep<br> #staff_lhep# <br>
$JS{
        var trans = '['+prm('trans')+']';
        setPrm('trans',trans);
        BT._$PRINT('      get staff');
        var staff_lhep = prm('staff_lhep');
        BT._$PRINT('      format staff_lhep');
        
        staff_lhep = staff_lhep.substring(0,staff_lhep.length-1);
//        _$LOG(2,'staff_lhep = '+staff_lhep+'<br>')
        BT._$PRINT('      format staff_lhep 1');
        var staff_lhep  = '['+staff_lhep+']';
        BT._$PRINT('      save staff_lhep 1');
        setPrm('staff_lhep',staff_lhep)

        staff_lhep = prm('lhep_divs');
        staff_lhep = staff_lhep.substring(0,staff_lhep.length-1);
        var staff_lhep  = '['+staff_lhep+']';
        setPrm('lit_divs',staff_lhep)



$JS}
$LOG2 #trans# <br>
<script>
$INCLUDE plans/lhep/buildings_info.js[buildings_info]
</script>
<script>
        var init_room='';
        if ('#floor#'.length>0 ) {
            init_room='#floor#' + '--'; 
        }
        if ('#room#'.length>0 ) {
            init_room='#room#'; 
        }

</script>


<script>
        var lhep_sotr=[];
        console.log('!!!!!!!!!!!!!!!!!!=============!!!!!!!!!!!!!!!!!!!!');
        console.log('0000000=============!!!!!!!!!!!!!!!!!!!!'+lhep_sotr);
        console.log('000000000000=============!!!!!!!!!!!!!!!!!!!!'+lhep_sotr.length);
</script>
<script>
      $INCLUDE plans/lhep/editor/plans_info.js[buildings_info] 
      var b_info = buildings_info["#b_name#"];
      var imscaleX = b_info.scales[1][0];
      var imscaleY = b_info.scales[1][1];
      var bounds;
      bounds = [
              [ b_info.bounds[0][0]*imscaleX, b_info.bounds[0][1]*imscaleY], 
              [ b_info.bounds[1][0]*imscaleX, b_info.bounds[1][1]*imscaleY], 
            ];
            
    
</script>

<script>
	//var aaa = staff_lhep;
	lhep_sotr = JSON.parse('#staff_lhep#');
        console.log('1=============!!!!!!!!!!!!!!!!!!!!'+lhep_sotr.length);
        $LOG2 !!!!!!staff_lhep! <br> #staff_lhep# <br>
</script>
<script>
        console.log('2=============!!!!!!!!!!!!!!!!!!!!'+lhep_sotr.length);
	var lit_divs = #lit_divs#;
</script>
<script>
        console.log('3=============!!!!!!!!!!!!!!!!!!!!'+lhep_sotr.length);
	$INCLUDE plans/lhep/plan_json[plan data]
</script>

<script>
	$INCLUDE plans/lhep/plan_alone.js[phones]
</script>

<script>
	$INCLUDE plans/lhep/plan_alone.js[load marks]

</script>


<script>
	$INCLUDE plans/lhep/plan_alone.js[divfunc]    
</script>

<script>
	$INCLUDE plans/lhep/plan_alone.js[draw rooms]    
</script>



<style>
    .plan_popup_td {
        font-family: Verdana,Arial,sans-serif !important; 
        font-size: 1.0em !important;

    }

.plan_room_ppls_table td th{
        padding: 5px 5px 5px 5px;
        
}


    .plan_popup_table{
        text-align: left;
        padding: 5px 5px 5px 5px;
        background-color: ##e0e0e0;
        color: ##000000;
        border: outset 2px ##000000;
        cursor: pointer;
        border-radius: 12px;
        font-family: Verdana,Arial,sans-serif;
        font-size: 1.1em !important;
        width:500px;


    }

    .plan_btn{
        1text-align: right;
        1padding: 3 3px 3 3px;
        1color: ##000000;
        border: outset 5px;
        cursor: pointer;
        border-radius: 12px;
        font-family: Verdana,Arial,sans-serif;
        font-size: 1em;
        1margin: 10px 20px 10px 0;
        1text-shadow: 1px 1px 1px black, 0 0 1em ; /* Параметры тени */
    }    
</style>

<style>
.lhep_obj_tooltip {
    position: absolute;
    pointer-events: none;
    background-color: none /* transparent*/;
    color: black; 
    font-size: 0.8em; /* Размер надписи */
    border: none;
    font-weight: bold;

}

.leaflet-tooltip {
    position: absolute;
    padding: 6px;
    background-color: transparent;
    border: 0px solid #fff;
    border-radius: 3px;
    color: #222;
    white-space: nowrap;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    pointer-events: none;
    box-shadow: 0 0px 0px rgba(0,0,0,0.4);
}


</style>

<style>

    .leaflet-popup-tip-container {
        display: none;
    } 
.leaflet-tooltip-top:before,
.leaflet-tooltip-bottom:before,
.leaflet-tooltip-left:before,
.leaflet-tooltip-right:before {
 
    }
.1lhep_popup {
        text-align: left;
        1padding: 0 5px 0 20px;
        background-color: ##e0e0e0;
        color: ##000000;
        border: outset 1px ##050505;
        cursor: pointer;
        border-radius: 12px;
        font-family: Verdana,Arial,sans-serif;
        font-size: 1.1em;
        margin: 10px 20px 10px 0;
        width:500px;
}
.leaflet-popup-content-wrapper, .leaflet-popup, .leaflet-popup-content{
        text-align: left; ??
        1padding: 0 5px 0 20px; ??
        background-color: ##f0f0f0; ??
        color: ##000000; ??
        border: outset 1px ##050505; ??
        cursor: pointer; ??
        border-radius: 12px; ??
        font-family: Verdana,Arial,sans-serif; ??
        font-size: 1.1em; ??
        margin: 10px 20px 10px 0; ??
        width:500px;??

}



.leaflet-tooltip-left.myCSSClass::before {
  border-left-color: cyan;
}
.leaflet-tooltip-right.myCSSClass::before {
  border-right-color: cyan;
}


</style>

<style>
.leaflet-popup-tip-container {
    display: none;
} 
.leaflet-tooltip-top:before,
.leaflet-tooltip-bottom:before,
.leaflet-tooltip-left:before,
.leaflet-tooltip-right:before {
 
    }
.leaflet-tooltip-left.myCSSClass::before {
  border-left-color: cyan;
}
.leaflet-tooltip-right.myCSSClass::before {
  border-right-color: cyan;
}

</style>


 <div>
    <div id="litmap" style="width: 80%; height: 100%;float:right"></div>
    <div id="listid_view" style="width:20%; height:90%; overflow:auto;">
        <div class="treeHTML" style1="position:absolute;top:120;left:10;z-index: 999;">
            <h3><LNG>Этаж</LNG>:</h3></div>
        <div class="kap_radio" id=floors_div style="padding:10px">
            <input class="custom-radio" type="radio" id="1" name="floornum" value="1" onclick="addRooms()">
            <label for="1">1</label>
            <input class="custom-radio" type="radio" id="2" CHECKED name="floornum" value="2" onclick="addRooms()">
            <label for="2">2</label>
            <input class="custom-radio" type="radio" id="3" name="floornum" value="3" onclick="addRooms()">
            <label for="3">3</label>
            <input class="custom-radio" type="radio" id="4" name="floornum" value="4" onclick="addRooms()">
            <label for="4">4</label>
        </div>
        <script>
            floors_radio = '';
            var checked =' checked ';
            for ( i in b_info.floors){
                
                floors_radio +='<input '+checked +' class="custom-radio" type="radio" id="'+b_info.floors[i]+'" name="floornum" value="'+b_info.floors[i]+'" onclick="addRooms()">';
                floors_radio +='<label for="'+b_info.floors[i]+'">'+b_info.floors[i]+'</label>';
                checked =' ';
            }
            var floors_div = document.getElementById('floors_div');
            console.log('floors_div'+floors_div);
            floors_div.innerHTML = floors_radio;
        </script>

        <div class=searchbox>
            <h3>
                    <LNG>Поиск людей</LNG>
                </h3>
            <input id=srcfio type=text>
            <div id=srcres>
                <table id=srctbl> </table>
            </div>
        </div>
        <div id=div_list style="margin-left:10px"  >
        </div>
<script>
         document.getElementById("div_list").innerHTML = create_div_list();
</script>


    </div>
</div>
<script>
var trans = #trans#;

function trans_lng(lang){
console.log("LANGUAGE "+lang+' '+lang.toUpperCase());
	
    if (lang.toUpperCase() == 'RU'){
        return;
    }
    if (lang.toUpperCase() == 'EN'){

    let lngElements = document.getElementsByTagName("lng");
    console.log('lngElements   '+lngElements);
    for (let i = 0; i < lngElements.length; i++){
        console.log('lng   '+lngElements[i].innerHTML);
//        if (lngElements[i].innerHTML.length>14){continue;}
        for (j in trans){
            console.log('lng   '+lngElements[i].innerHTML+' '+trans[j][1].toUpperCase().trim());
            if (trans[j][1].toUpperCase().trim() == lngElements[i].innerHTML.toUpperCase().trim()){
                lngElements[i].innerHTML = trans[j][0];
                break;
            }
        }
    }
    }

}

trans_lng("#lang#")
</script>
    $INCLUDE [init litmap]  
<script>
  function fillSearch(){
    //redmarker.remove();
    let stbl= $('##srctbl')[0];
    $('##srcres').html('');
    srcfio = $('##srcfio').val();
    if (srcfio.trim().length<2) {
        return
    };
    //console.log('src='+srcfio);
    
    AjaxCall('srcres', 'c=maps/get_lhep_sotrlist&srcfio='+srcfio, true);  
  }

$("##srcfio").on("keyup", function(event) {
    var i = event.keyCode;
    if ( i===13 ) {
        let stbl= $('##srctbl')[0];
        //debugger;
        if (typeof stbl  == "undefined" ) return;
        let row=stbl.rows[1]
        if (typeof row  == "undefined" )return;

        let theclick = new CustomEvent("click");
        row.dispatchEvent(theclick) ;
        row.click();
    } else
    {    fillSearch()
    }
});




    function onMapClick(e) {
        navigator.clipboard.writeText(e.latlng.lat+','+e.latlng.lng);
           $('##coord').html('Coord=['+e.latlng.lat+','+e.latlng.lng+']');
    }
    $('##zoomval').html('Zoom='+lit_map.getZoom());

    lit_map.on('click', onMapClick);
    var popup = L.popup();
    </script>
    $INCLUDE dat/common.dat[popup divs]

[end]





[init litmap]

    <script>
        var check_sel = 4;
        var minimX = 0;
        var minimY = 0;
        var maximX = 2970;
        var maximY = 4204;


        function processZoom(zoom){
//            $('##zoomval').html('Zoom='+lit_map.getZoom());
            console.log(zoom+' process mapZoom='+lit_map.getZoom());
            
        }




        var roomsGrp = L.layerGroup();
        var lit_map = L.map('litmap', {
            crs: L.CRS.Simple,
            maxZoom: 7,
        }).setView([1000,1000], #init_zoom#);
        console.log('zoom'+lit_map.getZoom());
        roomsGrp.addTo(lit_map);
        
        act_builing_name = '#b_name#';
        var imscaleX = buildings_info[act_builing_name].scales[1][0];
        var imscaleY = buildings_info[act_builing_name].scales[1][1];
        var bounds = [
              [ b_info.bounds[0][0]*imscaleX, b_info.bounds[0][1]*imscaleY], 
              [ b_info.bounds[1][0]*imscaleX, b_info.bounds[1][1]*imscaleY], 
            ];
	console.log('bounds' + bounds);
        var image = L.imageOverlay('plan_editor/images/#lab_dir#/#b_name#_1.png', bounds).addTo(lit_map);
        lit_map.fitBounds(bounds);
        lit_map.setZoom(3);
        lit_map.on('zoom', function() {
            processZoom(lit_map.getZoom());

        });
        
        var greenIcon = L.icon({
            iconUrl: 'images/leaf-green.png'
            , shadowUrl: 'images/leaf-shadow.png'
            , iconSize: [38, 95], // size of the icon
            shadowSize: [50, 64], // size of the shadow
            iconAnchor: [22, 94], // point of the icon which will correspond to marker's location
            shadowAnchor: [4, 62], // the same for the shadow
            popupAnchor: [-3, -76] // point from which the popup should open relative to the iconAnchor
        });
        var green_mark = L.marker([rescaleY(minimY), rescaleX(minimX)], {
            icon: greenIcon
        });
        var orangeIcon = L.icon({
            iconUrl: 'images/leaf-orange.png'
            , shadowUrl: 'images/leaf-shadow.png'
            , iconSize: [38, 95], // size of the icon
            shadowSize: [50, 64], // size of the shadow
            iconAnchor: [22, 94], // point of the icon which will correspond to marker's location
            shadowAnchor: [4, 62], // the same for the shadow
            popupAnchor: [-3, -76] // point from which the popup should open relative to the iconAnchor
        });
        var orange_mark = L.marker([rescaleY(minimY), rescaleX(minimX)], {
            icon: orangeIcon
        });


        var redIcon = L.icon({
            iconUrl: 'images/red_mark.png'
            , iconSize: [30, 30], // size of the icon
            iconAnchor: [0, 0], // point of the icon which will correspond to marker's location
        });
        var red_mark = L.marker([rescaleY(minimY), rescaleX(minimX)], {
            icon: redIcon
        });

        var polyline;;
        console.log('1111!!!!!!!!!!!!!!!!!!!!'+lhep_sotr.length)

        console.log(' addRooms '+minimY+' '+maximY);
        var lit_ctrl = L.control.scale({position:'topleft',metric:true}).addTo(lit_map);
	var   tmppan = [];
	 tmppan[0] = maximY /80;
	 tmppan[1] =maximX /40;
	lit_map.panTo(tmppan);
        console.log(' fin ');
        function selChanged(id) {
                    console.log('11!!!!!!!!!!!!!!!!!!!!'+lhep_sotr.length)

		let index = mass_topid.indexOf(id);
		if (index > -1) {
			mass_topid.splice(index, 1);
		} else {
			mass_topid.push(id);
		}
        	fillPplsTable();
        	fillRoomTable();
        };
    </script>
    <script>

        function loadBuildingPlan(building_id, func) {
            console.log('fectch');
            let url = 'https://LT-SVR230.jinr.ru:8082/get_building_inform_v2?' + "building_id=" + building_id.toString();
            fetch(url)
                .then((response) => {
                    if (response.ok) {
                        console.log('load connected ');
                        return response.text();
                    } else {
                        console.log('load failed');
                    }
                })
                .then((text) => {
                      console.log('1!!!!!!!!!!!!!!!!!!!!'+lhep_sotr.length)

                        console.log('call func '+text);
                    func(text);
                });
        }

        function callBackFunc(data) {
            console.log('callBackFunc ' );
            data = data.replace(/:\s*None/g,':\"\"');

              rooms_json = JSON.parse(data);
    for (i in rooms_json){
        console.log('lit indata = '+i);
          for (j in rooms_json[i]){
        console.log('lit entry = '+i +' '+j);
        }
    }
            lit = plan_data;
            rooms_info = {};
        console.log('2!!!!!!!!!!!!!!!!!!!!'+lhep_sotr.length)
           
            fill_rooms_info();

            if ( init_room.length>0) {
             centerRoom(init_room);
             init_room = '';
            } else {
               addRooms();
            }
            console.log('addRooms ok ' );




        }
    var  lit;
    var  rooms_info = {};
    var  rooms_json = {};

    loadBuildingPlan(#plan_building_id#,callBackFunc);

    </script>
    

[end]



[blink proc]
<script>
        var blinked = false;
        function procBlink(){
            blinked = !blinked;

            for (cbid in roads){
                let obj =  roads[cbid];
                if (obj['o_type']==3) continue;
                if (!blinked){
//                    console.log('blink '+cbid+' '+' '+obj['obj_name']);
                    
                    obj.leaflet_obj.setStyle({stroke:true,fillOpacity:0.3});

                    continue;
                };
                let obj_blinked = $('##blink'+cbid).prop('checked');
                if (!obj_blinked)  continue;
//                console.log('blink '+cbid+' '+obj_blinked)
                obj.leaflet_obj.setStyle({stroke:false,fillOpacity:0.3});
            }
                setTimeout(procBlink,400);

        }
        setTimeout(procBlink,200);
</script>
[end]




[init resize]
  <script>
    document.onresize = function () {
        var w = screen.width;
        var h = screen.height;
        var dv = document.getElementById('mapid');
        console.log('mapid='+dv)
        dv.style.width = w*0.8+"px";
        dv.style.height = h*0.8+"px";
    }
</script>

[end]
style="background-image:url(male.png);"



