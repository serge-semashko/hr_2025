[comments]
[end]

[description]
[end]
[parameters]
    place=plans/lhep/201
    b_name=k201
    init_zoom=3
    init_floor=1
    bld_id=252
[end]



[get divisions and staff]
select concat('["',REPLACE(REPLACE(en, '\r', ''), '\n', ''),'","',REPLACE(REPLACE(ru, '\r', ''), '\n', ''),'"],') as trans from lang;
SELECT  
   CONCAT(
		'{ pid:',s.pid, ',',
		'lvl:',3, ', ',
	   'id:',s.id , ', ',
		'name:"', s.short_name , '"}, '
		 ) as lhep_divs
 
 FROM struktura s WHERE  pid IN (SELECT id FROM struktura s WHERE  s.pid=100000) 
 UNION 
SELECT  
   CONCAT(
		'{ pid:',s1.pid, ',',
		'lvl:',2, ', ',
	   'id:',s1.id , ', ',
		'name:"', s1.short_name , '"}, '
		 ) 
 FROM struktura s1 WHERE  id IN (SELECT id FROM struktura s1 WHERE  s1.pid=100000) ;

SELECT 
 CONCAT(
 '{lab_id:',   s.lab_id,',',
 'fl_id:',
  s.person_id,',',
 'tabn:',
  	s.tab_n,',',
 'TopParent_code:',
  	s.TopParent_code,',',
 'SubTopParent_code:',
  	s.SubTopParent_code,',',
 'rooms:"',
IFNULL((SELECT a.room FROM accommodation_lhep a WHERE a.tab_n=s.tab_n and otype=1),'')   , '",',
 'buildings:"',
IFNULL((SELECT a.building FROM accommodation_lhep a WHERE a.tab_n=s.tab_n and otype=1),'')   , '",',

 'f:"',
  s.F	,'",',
 'i:"',
  s.i	,'",',
 'o:"',
  s.o	,'",',

 'phone:""',
  
  	'},'
  	) as staff
 FROM sotrudniki s 
 WHERE (s.datauvolen > current_date or s.datauvolen is NULL)
 AND (  s.lab_id=100000)
 

 

[end]

[get building info]
    
[end]
[report]
$LOG2 bld_id=#bld_id# room=#room# floor=#floor# <br>
  $INCLUDE dat/common.dat[head]
    
  $GET_DATA [get divisions and staff]
  
$JS{
        var trans = '['+prm('trans')+']';
        setPrm('trans',trans);
        BT._$PRINT('      get staff');
        var staff = prm('staff');
        BT._$PRINT('      format staff');
        
        staff = staff.substring(0,staff.length-1);
//        _$LOG(2,'staff = '+staff+'<br>')
        BT._$PRINT('      format staff 1');
        var staff  = '['+staff+']';
        BT._$PRINT('      save staff 1');
        setPrm('staff',staff)

        staff = prm('lhep_divs');
        staff = staff.substring(0,staff.length-1);
        var staff  = '['+staff+']';
        setPrm('lhep_divs',staff)



$JS}
$LOG2 #trans# <br>

<script>
        var init_room='';
        if ('#floor#'.length>0 ) {
            init_room='#floor#' + '--'; 
        }
        if ('#room#'.length>0 ) {
            init_room='#room#'; 
        }

	var aaa = #staff#;
	var lhep_sotr = aaa;
	var lhep_divs = #lhep_divs#;
</script>

<script>
	$INCLUDE #place#/plan_json[plan data]
</script>

<script>
	$INCLUDE #place#/plan_alone_js[phones]
</script>

<script>
	$INCLUDE #place#/plan_alone_js[load marks]

</script>


<script>
	$INCLUDE #place#/plan_alone_js[divfunc]    
</script>

<script>
	$INCLUDE #place#/plan_alone_js[draw rooms]    
</script>

<style>
.leaflet-popup-tip-container {
    display: none;
} 
.leaflet-tooltip-top:before,
.leaflet-tooltip-bottom:before,
.leaflet-tooltip-left:before,
.leaflet-tooltip-right:before {
 
    }
.lhep_obj_tooltip {
    position: absolute;
    pointer-events: none;
    background: transparent;
    text-shadow: 1px 1px 2px black, 0 0 1em red; /* Параметры тени */
    color: white; /* Белый цвет текста */
    font-size: 1em; /* Размер надписи */
  border: none
}
.leaflet-tooltip-left.myCSSClass::before {
  border-left-color: cyan;
}
.leaflet-tooltip-right.myCSSClass::before {
  border-right-color: cyan;
}

</style>

 <div>
    <div id="litmap" style="width: 80%; height: 100%;float:right"></div>
    <div id="listid_view" style="width:20%; height:90%; overflow:auto;">
        <div class="treeHTML" style1="position:absolute;top:120;left:10;z-index: 999;">
            <p id=coord1></p><t id=coord2></t><p id=dist></p>
            <h3><LNG>Этаж</LNG>:</h3></div>
        <div class="kap_radio">
            <input class="custom-radio" type="radio" id="1" CHECKED name="floornum" value="1" onclick="addRooms()">
            <label for="1">1</label>
            <input class="custom-radio" type="radio" id="2"  name="floornum" value="2" onclick="addRooms()">
            <label for="2">2</label>
            <input class="custom-radio" type="radio" id="3" name="floornum" value="3" onclick="addRooms()">
            <label for="3">3</label>
        </div>

        <div class=searchbox>
            <h3>
                    <LNG>Поиск людей</LNG>
                </h3>
            <input id=srcfio type=text>
            <div id=srcres>
                <table id=srctbl> </table>
            </div>
        </div>
        $INCLUDE plans/lhep/structure[menu structura] ??
    </div>
</div>
<script>
var trans = #trans#;

function trans_lng(lang){
console.log("LANGUAGE "+lang+' '+lang.toUpperCase());
	
    if (lang.toUpperCase() == 'RU'){
        return;
    }
    if (lang.toUpperCase() == 'EN'){

    let lngElements = document.getElementsByTagName("lng");
    console.log('lngElements   '+lngElements);
    for (let i = 0; i < lngElements.length; i++){
        console.log('lng   '+lngElements[i].innerHTML);
//        if (lngElements[i].innerHTML.length>14){continue;}
        for (j in trans){
            console.log('lng   '+lngElements[i].innerHTML+' '+trans[j][1].toUpperCase().trim());
            if (trans[j][1].toUpperCase().trim() == lngElements[i].innerHTML.toUpperCase().trim()){
                lngElements[i].innerHTML = trans[j][0];
                break;
            }
        }
    }
    }

}

trans_lng("#lang#")
</script>
    $INCLUDE [init litmap]  
<script>
  function fillSearch(){
    //redmarker.remove();
    let stbl= $('##srctbl')[0];
    $('##srcres').html('');
    srcfio = $('##srcfio').val();
    if (srcfio.trim().length<2) {
        return
    };
    //console.log('src='+srcfio);
    
    AjaxCall('srcres', 'c=plans/lhep/get_lhep_sotrlist&bld_id=#bld_id#&srcfio='+srcfio, true);  
  }

$("##srcfio").on("keyup", function(event) {
    var i = event.keyCode;
    if ( i===13 ) {
        let stbl= $('##srctbl')[0];
        //debugger;
        if (typeof stbl  == "undefined" ) return;
        let row=stbl.rows[1]
        if (typeof row  == "undefined" )return;

        let theclick = new CustomEvent("click");
        row.dispatchEvent(theclick) ;
        row.click();
    } else
    {    fillSearch()
    }
});



    var p1 = [];
    var p2 = [];
    function onMapClick(e) {
        navigator.clipboard.writeText(e.latlng.lat+','+e.latlng.lng);
            if ($('##coord1').html() == '' ){
                $('##coord1').html('Coord=['+e.latlng.lat.toFixed(2)+','+e.latlng.lng.toFixed(2)+']');
                $('##dist').html('');
                p1 = [e.latlng.lat.toFixed(2),e.latlng.lng.toFixed(2)];
                return;
           } 
                if ($('##coord2').html() == '' ){
                    $('##coord2').html('Coord=['+e.latlng.lat.toFixed(2)+','+e.latlng.lng.toFixed(2)+']');
                    p2 = [e.latlng.lat.toFixed(2),e.latlng.lng.toFixed(2)];
                    let dist = Math.sqrt( Math.pow(p1[0] - p2[0],2) + Math.pow(p1[1] - p2[1],2 ));
                    $('##dist').html('Расстояние = '+dist.toFixed(2));
                    $('##coord1').html('')    ;$('##coord2').html('')

               }

    }
    $('##zoomval').html('Zoom='+lhep_map.getZoom());

    lhep_map.on('click', onMapClick);
    var popup = L.popup();
    </script>

[end]





[init litmap]

    <script>
        var check_sel = 4;
        var minimX = 0;
        var minimY = 0;
        var maximX = 2576 / 4;
        var maximY = 2820 / 4;


        function processZoom(zoom){
//            $('##zoomval').html('Zoom='+lhep_map.getZoom());
            console.log(zoom+' process mapZoom='+lhep_map.getZoom());
            
        }


      L.CRS.MySimple = L.extend({}, L.CRS.Simple, {
        // At zoom 0, tile 268x268px should represent the entire "world" of size 8576x8576.
        // scale is therefore 8576 / 268 = 32 (use the reverse in transformation, i.e. 1/32).
        // We want the center of tile 0/0/0 to be coordinates [0, 0], so offset is 8576 * 1/32 / 2 = 268 / 2 = 134.
        transformation: new L.Transformation(1 / 4.8684, 120, -1 / 4.8684, 110)
      });


        var roomsGrp = L.layerGroup();
        var lhep_map = L.map('litmap', {
            crs: L.CRS.MySimple,
            maxZoom: 10,
        }).setView([1,1], #init_zoom#);
        console.log('zoom'+lhep_map.getZoom());
        roomsGrp.addTo(lhep_map);
        // 'images/plans/lhep/215-1.png'
		 var bounds = [
            [00, 0]
            , [2576*0.119074 / 4,  2820*0.119074 / 4]
        ];
	console.log('bounds' + bounds);
//        var image = L.imageOverlay('images/plans/lhep/215-1.png', bounds).addTo(lhep_map);
//        lhep_map.fitBounds(bounds);
        lhep_map.setZoom(3);
        lhep_map.on('zoom', function() {
            processZoom(lhep_map.getZoom());

        });
        
        var greenIcon = L.icon({
            iconUrl: 'images/leaf-green.png'
            , shadowUrl: 'images/leaf-shadow.png'
            , iconSize: [38, 95], // size of the icon
            shadowSize: [50, 64], // size of the shadow
            iconAnchor: [22, 94], // point of the icon which will correspond to marker's location
            shadowAnchor: [4, 62], // the same for the shadow
            popupAnchor: [-3, -76] // point from which the popup should open relative to the iconAnchor
        });
        var green_mark = L.marker([rescaleY(minimY), rescaleX(minimX)], {
            icon: greenIcon
        });
        var orangeIcon = L.icon({
            iconUrl: 'images/leaf-orange.png'
            , shadowUrl: 'images/leaf-shadow.png'
            , iconSize: [38, 95], // size of the icon
            shadowSize: [50, 64], // size of the shadow
            iconAnchor: [22, 94], // point of the icon which will correspond to marker's location
            shadowAnchor: [4, 62], // the same for the shadow
            popupAnchor: [-3, -76] // point from which the popup should open relative to the iconAnchor
        });
        var orange_mark = L.marker([rescaleY(minimY), rescaleX(minimX)], {
            icon: orangeIcon
        });


        var redIcon = L.icon({
            iconUrl: 'images/red_mark.png'
            , iconSize: [30, 30], // size of the icon
            iconAnchor: [0, 0], // point of the icon which will correspond to marker's location
        });
        var red_mark = L.marker([rescaleY(minimY), rescaleX(minimX)], {
            icon: redIcon
        });

        var polyline;;
        console.log(' addRooms '+minimY+' '+maximY);
        var lhep_ctrl = L.control.scale({position:'topleft',metric:true}).addTo(lhep_map);
	
        console.log(' fin ');
        function selChanged(id) {
		let index = mass_topid.indexOf(id);
		if (index > -1) {
			mass_topid.splice(index, 1);
		} else {
			mass_topid.push(id);
		}
        	fillPplsTable();
        	fillRoomTable();
        };
    </script>
    <script>

        function loadBuildingPlan(building_id, func) {
            console.log('fectch');
            let url = 'https://LT-SVR230.jinr.ru:8082/get_building_inform?' + "building_id=" + building_id.toString();
            fetch(url)
                .then((response) => {
                    if (response.ok) {
                        console.log('load connected ');
                        return response.text();
                    } else {
                        console.log('load failed');
                    }
                })
                .then((text) => {
                        console.log('call func '+text);
                    func(text);
                });
        }

        function callBackFunc(data) {
            console.log('callBackFunc ' );
            rooms_json = JSON.parse(data);
    for (i in rooms_json){
        console.log('lit indata = '+i);
          for (j in rooms_json[i]){
        console.log('lit entry = '+i +' '+j);
        }
    }
            lit = plan_data;
            rooms_info = {};
           
            fill_rooms_info();
            debugger;
            if ( init_room.length>0) {
             centerRoom(init_room);
             init_room = '';
            } else {
               addRooms();
            }
            console.log('addRooms ok ' );




        }
    var  lit;
    var  rooms_info = {};
    var  rooms_json = {};

    loadBuildingPlan(#bld_id#,callBackFunc);

    </script>
    

[end]



[blink proc]
<script>
        var blinked = false;
        function procBlink(){
            blinked = !blinked;

            for (cbid in roads){
                let obj =  roads[cbid];
                if (obj['o_type']==3) continue;
                if (!blinked){
//                    console.log('blink '+cbid+' '+' '+obj['obj_name']);
                    
                    obj.leaflet_obj.setStyle({stroke:true,fillOpacity:0.3});

                    continue;
                };
                let obj_blinked = $('##blink'+cbid).prop('checked');
                if (!obj_blinked)  continue;
//                console.log('blink '+cbid+' '+obj_blinked)
                obj.leaflet_obj.setStyle({stroke:false,fillOpacity:0.3});
            }
                setTimeout(procBlink,400);

        }
        setTimeout(procBlink,200);
</script>
[end]




[init resize]
  <script>
    document.onresize = function () {
        var w = screen.width;
        var h = screen.height;
        var dv = document.getElementById('mapid');
        console.log('mapid='+dv)
        dv.style.width = w*0.8+"px";
        dv.style.height = h*0.8+"px";
    }
</script>

[end]
style="background-image:url(male.png);"


