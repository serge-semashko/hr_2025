
tab_reports_staff_chart.cfg


[comments]
 staff_report_fin
descr=Графики сводных отчетов
input=none
output=HTML таблица объектов
parents=
author:Семашко С.
[end]
service=dubna.walt.service.TableServiceSpecial ??

[parameters]
request_name=U:Список документов
LOG=ON 
tableCfg=table_no
[end]

$INCLUDE dat/common.dat[rowLinks]

[get total sotr stavka]
    select count(*) as persons_count,  round(sum(stavka),2) as stavka_count 
    from sotrudniki sotr
    $INCLUDE utils.cfg[criteria] 
    and  
      ( 
            (sotr.datauvolen > '#SELYEAR#-#end_month#-01' or sotr.datauvolen is null) 
            and (sotr.okonch_rab > '#SELYEAR#-#end_month#-01' or sotr.okonch_rab is null) 
            and  (sotr.nachalo_rab <'#SELYEAR#-#start_month#-01')
       )     


[end]
[total sotr table]
    $GET_DATA [get total sotr stavka]
    <table border=1 cellpadding=5 cellspacing=0>
    </br>
    <tr>
        $GET_DATA [get Totals]
        <td class="label">
            Количество ставок:
        </td><td>
            #stavka_count#
        </td>
        <td class="label">
            Количество человек:
        </td><td>
            #persons_count#
        </td>

    </tr>
    </table>
[end]

[get 1c payment]

    SELECT concat(
	'"',
	trim(tabn),'_',
	month(n.period),'"',
	':',
    sum(rezultat) ,
	','

	)  as json_sum_month_1c
    FROM [DB_1C_2].[1c8_2].[LHE_Nachisleniya#year_add#] n 
    where ( month(n.period) <= #end_month# and month(n.period) >= #start_month# )
    group by n.Tabn ,month(n.period)
  order by n.Tabn;

    SELECT concat(
	'"',
	trim(tabn),
	'":',
    sum(rezultat) ,
	','

	)  as json_sum_1c
    FROM [DB_1C_2].[1c8_2].[LHE_Nachisleniya#year_add#] n 
    where ( month(n.period) <= #end_month# and month(n.period) >= #start_month# )
    group by n.Tabn 
  order by n.Tabn;




SELECT concat(
	tabn,':',
    sum(rezultat) ,
	','
	)  as json_stimul_1c
    FROM [DB_1C_2].[1c8_2].[LHE_Nachisleniya#year_add#] n 
    where  ( month(n.period) <= #end_month# and month(n.period) >= #start_month# ) and
    VidRascheta in 
        $INCLUDE tab_reports_chart[stimul entries]
    group by n.Tabn
    ;

SELECT concat(
	tabn,':',
    sum(rezultat) ,
	','
	)  as json_fzp_1c
    FROM [DB_1C_2].[1c8_2].[LHE_Nachisleniya#year_add#] n 
    where 1=1  
        and ( month(n.period) <= #end_month# and month(n.period) >= #start_month# )
        and VidRascheta in 
        $INCLUDE tab_reports_chart[FZP entries]
    group by n.Tabn
    ;
    
SELECT concat(
	tabn,':',
    sum(rezultat) ,
	','
	)  as json_bonus_1c
    FROM [DB_1C_2].[1c8_2].[LHE_Nachisleniya#year_add#] n 
    where  ( month(n.period) <= #end_month# and month(n.period) >= #start_month# ) and
    VidRascheta in 
        $INCLUDE tab_reports_chart[BONUS entries]
    group by n.Tabn
    ;
    SELECT concat(
	tabn,':',
    sum(rezultat) ,
	','
	)  as json_quartbonus_1c
    FROM [DB_1C_2].[1c8_2].[LHE_Nachisleniya#year_add#] n 
    where  ( month(n.period) <= #end_month# and month(n.period) >= #start_month# ) and
    VidRascheta in ('Квартальная премия ЛФВЭ')
    group by n.Tabn
    ;
    
SELECT concat(
	tabn,':',
    sum(rezultat) ,
	','
	)  as json_prochee_1c
    FROM [DB_1C_2].[1c8_2].[LHE_Nachisleniya#year_add#] n 
    where  ( month(n.period) <= #end_month# and month(n.period) >= #start_month# ) and
        VidRascheta in 
        $INCLUDE tab_reports_chart[prochee entries]
    group by n.Tabn
    ;
    SELECT concat(
	tabn,':',
    sum(rezultat) ,
	','
	)  as json_otpusk_1c
    FROM [DB_1C_2].[1c8_2].[LHE_Nachisleniya#year_add#] n 
    where  ( month(n.period) <= #end_month# and month(n.period) >= #start_month# ) and
        VidRascheta in 
        $INCLUDE tab_reports_chart[otpusk entries]
    group by n.Tabn
    ;
select concat('<tr><td>',VidRascheta, '</td><td class=right>',cast(round(sum(n.Rezultat)/1000,0) as int),'</td></tr>')  as pay_missed_1c  
FROM [DB_1C_2].[1c8_2].[LHE_Nachisleniya#year_add#] n
    where ( month(n.period) <= #end_month# and month(n.period) >= #start_month# ) and
    VidRascheta not in  
        $INCLUDE tab_reports_chart[stimul entries]
    and  VidRascheta not in  
        $INCLUDE tab_reports_chart[FZP entries]
    and  VidRascheta not in  
        $INCLUDE tab_reports_chart[BONUS entries]
    and  VidRascheta not in  
        $INCLUDE tab_reports_chart[otpusk entries]
    and  VidRascheta not in  
         ('Квартальная премия ЛФВЭ')
    and  VidRascheta not in  
        $INCLUDE tab_reports_chart[prochee entries]
    and  VidRascheta not in  
        $INCLUDE tab_reports_chart[otpusk entries]
    and tabn in #sotr_list#    

group by  n.VidRascheta
order by sum(n.Rezultat) desc

;

[end]
[get sotr list]

    select CONCAT('\'',tab_n,'\',') AS sotr_list
    FROM sotrudniki sotr
    $INCLUDE utils.cfg[criteria] 
and  
      ( 
            (sotr.datauvolen > '#SELYEAR#-#end_month#-01' or sotr.datauvolen is null) 
            and (sotr.okonch_rab > '#SELYEAR#-#end_month#-01' or sotr.okonch_rab is null) 
            and  (sotr.nachalo_rab <'#SELYEAR#-#start_month#-01')
       )     ;

    select CONCAT(sotr.tab_n,':{"cat":"',sotr.category,
	   '","tab":"',sotr.tab_n ,
	   '","post":"',sotr.post ,
		 '","age":"',	 	 1,
		 '","topdiv":"',sotr.TopParent_Name,
		 '","subtopdiv":"',sotr.subTopParent_Name,
		 '","topdiv_code":',sotr.TopParent_code,
		 ',"subtopdiv_code":',sotr.subTopParent_code,
		 
		   '},') AS desc_sotr_list
    FROM sotrudniki sotr
    $INCLUDE utils.cfg[criteria] 
and  
      ( 
            (sotr.datauvolen > '#SELYEAR#-#end_month#-01' or sotr.datauvolen is null) 
            and (sotr.okonch_rab > '#SELYEAR#-#end_month#-01' or sotr.okonch_rab is null) 
            and  (sotr.nachalo_rab <'#SELYEAR#-#start_month#-01')
       )    
limit 2 ??


 ;

SELECT 
CONCAT(
'{"pname":"',
   str.short_name,
   '","pcode":',
 str.id,
 ',"subdivs":{',
   IFNULL(
     (SELECT GROUP_CONCAT(str1.id,':{"pname":"',str1.short_name,'"}') FROM struktura str1 WHERE str1.pid=str.id AND str1.view1=1) ,
     '')
	   ,
 
 '}},'
 ) AS div_list
FROM struktura str WHERE str.pid=100000 AND str.view1=1;
============================================== category count ??
SELECT CONCAT('"',sotr.TopParent_code,'|',sotr.category,'":',SUM(sotr.stavka),',') AS div_cat_cnt
FROM sotrudniki sotr 
    $INCLUDE utils.cfg[criteria] 
and  
      ( 
            (sotr.datauvolen > '#SELYEAR#-#end_month#-01' or sotr.datauvolen is null) 
            and (sotr.okonch_rab > '#SELYEAR#-#end_month#-01' or sotr.okonch_rab is null) 
            and  (sotr.nachalo_rab <'#SELYEAR#-#start_month#-01')
       )    
and sotr.TopParent_code IN (select id FROM struktura str WHERE str.pid=100000 AND str.view1=1)
GROUP BY sotr.category , sotr.TopParent_code
union
SELECT CONCAT('"',sotr.TopParent_code,'":',SUM(sotr.stavka),',') AS div_cat_cnt
FROM sotrudniki sotr 
    $INCLUDE utils.cfg[criteria] 
and  
      ( 
            (sotr.datauvolen > '#SELYEAR#-#end_month#-01' or sotr.datauvolen is null) 
            and (sotr.okonch_rab > '#SELYEAR#-#end_month#-01' or sotr.okonch_rab is null) 
            and  (sotr.nachalo_rab <'#SELYEAR#-#start_month#-01')
       )    
and sotr.TopParent_code IN (select id FROM struktura str WHERE str.pid=100000 AND str.view1=1)
GROUP BY  sotr.TopParent_code
;



select distinct CONCAT(category,'|') as all_cat FROM sotrudniki s WHERE s.lab_id=100000;

SELECT CONCAT('"',sotr.subTopParent_code,'|',sotr.category,'":',SUM(sotr.stavka),',') AS subdiv_cat_cnt
FROM sotrudniki sotr 
    $INCLUDE utils.cfg[criteria] 
and  
      ( 
            (sotr.datauvolen > '#SELYEAR#-#end_month#-01' or sotr.datauvolen is null) 
            and (sotr.okonch_rab > '#SELYEAR#-#end_month#-01' or sotr.okonch_rab is null) 
            and  (sotr.nachalo_rab <'#SELYEAR#-#start_month#-01')
       )    
and sotr.subTopParent_code IN (select id FROM struktura str WHERE str.pid IN (select id FROM struktura str WHERE str.pid=100000 AND str.view1=1) AND str.view1=1)
GROUP BY sotr.category , sotr.subTopParent_code
union
SELECT CONCAT('"',sotr.subTopParent_code,'":',SUM(sotr.stavka),',') AS subdiv_cat_cnt
FROM sotrudniki sotr 
    $INCLUDE utils.cfg[criteria] 
and  
      ( 
            (sotr.datauvolen > '#SELYEAR#-#end_month#-01' or sotr.datauvolen is null) 
            and (sotr.okonch_rab > '#SELYEAR#-#end_month#-01' or sotr.okonch_rab is null) 
            and  (sotr.nachalo_rab <'#SELYEAR#-#start_month#-01')
       )    
and sotr.subTopParent_code IN (select id FROM struktura str WHERE str.pid IN (select id FROM struktura str WHERE str.pid=100000 AND str.view1=1) AND str.view1=1)
GROUP BY  sotr.subTopParent_code
;






[end]


[report]
    $GET_DATA SQL: select month(now())  as CUR_MONTH
    $GET_DATA SQL: select year(now())  as CUR_YEAR
    $GET_DATA SQL:SELECT SUBSTR( '#SELYEAR#',3,2) as year_add
    $SET_PARAMETERS  year_add=_#year_add#;
    $SET_PARAMETERS  year_add=; ??CUR_YEAR=#SELYEAR#
    $SET_PARAMETERS start_month=1;end_month=3;month_cnt=3 ??SELQUARTAL=1
    $SET_PARAMETERS start_month=4;end_month=6;month_cnt=3 ??SELQUARTAL=2
    $SET_PARAMETERS start_month=7;end_month=9;month_cnt=3 ??SELQUARTAL=3
    $SET_PARAMETERS start_month=10;end_month=12;month_cnt=3 ??SELQUARTAL=4
    $SET_PARAMETERS start_month=1;end_month=12;month_cnt=12 ??SELQUARTAL=5


<script>
   var  color_tbl = ['##FF4040', '##FF9640', '##33CCCC', '##39E639'];
</script>
<style>
.right {
  text-align: right;
    padding-right: 1em; ??
    padding-left: 1em;
}

.left {
  text-align: left;
   padding-right: 1em;
   padding-left: 1em; ??
}
</style>
  $USE_DB
   $INCLUDE [get sotr list]??
   $GET_DATA  [get sotr list]
   $SET_PARAMETERS  sotr_list=(#sotr_list#'---------------------')
  $USE_DB 1C ??staff_report_fin

    $GET_DATA [get 1c payment] ??staff_report_fin
================================ 1C
$INCLUDE [get 1c payment]??
================================ /1C
$LOG2 !!!!! pay_missed_1c #pay_missed_1c# <br>
  $USE_DB 
    $INCLUDE [report header]
    $INCLUDE [report footer]
[end]



[report header]
<style>
.graphContainer:{
    width:800px;
    height:500px;
    margin-top:10px;
    color:black;
    border: solid 3px black;
}
</style>

    $INCLUDE [total sotr table]   ??!XL=Y
    $INCLUDE [total table]   ??!XL=Y


<h3>Chart 0.</h3> 
    <div  class="graphContaner" id="age_hist_ppls_chart"  style="width:800px;height:500px;margin-top:10px;color:black;border: solid 3px black">
    </div>
<h3>Chart 1. Распределение ставок по возрастам и категориям</h3>
    <div  class="graphContaner" id="age_cat_stack_chart"  style="width:800px;height:500px;margin-top:10px;color:black;border: solid 3px black">
    </div>

<h3>Chart 2.</h3>

<div  class="graphContaner" id="age_hist_salary_chart"  style="width:800px;height:500px;margin-top:10px;color:black;border: solid 3px black"></div> 
<div class=graphContaner id="age_chart"  style="margin-top:10px;color:black;border: solid 3px black"></div> ??
<h3>Chart 3. Категории</h3>
    <div class=graphContaner id="category_chart"  style="margin-top:10px;color:black;border: solid 3px black">
    </div>
<h3>Chart 3-1.Должности</h3>??
    <div class=graphContaner id="post_chart"  style="margin-top:10px;color:black;border: solid 3px black;height:1500px;">??
    </div>??



<h3>Chart 4.</h3>
    <div class="graphContaner" style="width:800px;height:9000px" id="divisions_age_pay_cnt_chart"  style="margin-top:10px;color:black;border: solid 3px black">
    </div>

<h3>Chart 5. Подразделения. Распределение по категориям</h3>
    <div class="graphContaner" style="width:800px;height:9000px" id="divisions_chart"  style="margin-top:10px;color:black;border: solid 3px black">
    </div>

[end]
[get for js]
   SELECT CONCAT(sotr.tab_n,',') AS ppls 
     FROM sotrudniki sotr WHERE sotr.TopParent_Name='#top_name#'
and  
      ( 
            (sotr.datauvolen > '#SELYEAR#-#end_month#-01' or sotr.datauvolen is null) 
            and (sotr.okonch_rab > '#SELYEAR#-#end_month#-01' or sotr.okonch_rab is null) 
            and  (sotr.nachalo_rab <'#SELYEAR#-#start_month#-01')
       )     
[end]


[report footer]
    $SET_PARAMETERS NumTableCols=14;
    $SET_PARAMETERS d_otdelenie=[#d_otdelenie#]
    $SET_PARAMETERS d_full_lab=[#d_full_lab#]
    $LOG2 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ d_full_lab=#d_full_lab# <br>
    $SET_PARAMETERS d_category=[#d_category#]
    $SET_PARAMETERS d_post=[#d_post#]
    $SET_PARAMETERS d_otdel=[#d_otdel#]
    $SET_PARAMETERS d_age=[#d_age#]
    
    $SET_PARAMETERS d_otdelenie_age_salary=[#d_otdelenie_age_salary#]
    $SET_PARAMETERS d_otdelenie_category=[#d_otdelenie_category#]
    $SET_PARAMETERS d_otdel_category=[#d_otdel_category#]
    $SET_PARAMETERS d_otdel_age_salary=[#d_otdel_age_salary#]
    $JS{ 
        var d_sotr = prm('d_sotr').trim();
        d_sotr = d_sotr.slice(0,-1);
        d_sotr = '{'+d_sotr+'}';
        var d_sotr = JSON.parse(d_sotr);
        var d_topdivs = prm('d_topdivs').trim().slice(0,-1);
        var d_topdivs = JSON.parse('{'+d_topdivs+'}');
        _$LOG(2,d_sotr+ 'sotr count '+ Object.keys(d_sotr).length +'<br>@@@@@@@@@@@@@@!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!<br>');
        _$LOG(2,d_topdivs+ 'sotr count '+ Object.keys(d_topdivs).length +'<br>@@@@@@@@@@@@!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!<br>');
    $JS}

    $JS{
        _$LOG(2,d_sotr+ 'sotr count '+ Object.keys(d_sotr).length +'<br>%%%%!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!<br>');
        _$LOG(2,d_topdivs+ 'sotr count '+ Object.keys(d_topdivs).length +'<br>%%%%!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!<br>');
    $JS} 

$JS{
        _$LOG(2,'0++++++++++++++++++++++++++++++++++  <br>')
        var data_1c={#json_sum_1c#};
        var data_1c={#json_sum_month_1c#};
            var stimul_1c = {#json_stimul_1c#};
            var fzp_1c = {#json_fzp_1c#};
            var bonus_1c = {#json_bonus_1c#};
            var quartbonus_1c = {#json_quartbonus_1c#};
            var prochee_1c = {#json_prochee_1c#};
            var otpusk_1c = {#json_otpusk_1c#};
            var month_cnt = +#month_cnt#;
            var d_category = #d_category#;
            var d_post = #d_post#;
            var d_otdelenie_age_salary=#d_otdelenie_age_salary#;
            var d_full_lab=#d_full_lab#;
            if (month_cnt<1){month_cnt = 1};
        _$LOG(2,'1  <br>')

            
        var topnames=[];
        var topnames = #d_otdelenie#;
        _$LOG(2,'@@@@@month_cnt='+month_cnt+' topnames !!!!!!!!!!!{'+topnames+ '  - '+JSON.stringify(topnames)+'<br>')
        _$LOG(2,' d_full_lab='+JSON.stringify(d_full_lab)+'<br>')
        var full_sum = 0,
            full_stimul = 0,
            full_fzp = 0,
            full_bonus = 0,
            full_quartbonus = 0,
            full_prochee = 0,
            full_otpusk = 0,

            full_rabochie = 0,
            full_nauch = 0,
            full_spec = 0;
        var tab_cat = '';    
            full_post_dist = {};
            full_cat_dist = {};
            



        for (i in topnames) {
            var name = topnames[i].pname
            setPrm('top_name',name);
            _$GET_DATA("[get for js]");
            var tabs=prm('ppls').split(',');
            
//            _$LOG(2,name+' tabs !!!!!!!!!!!{'+tabs.length+ '  - '+tabs[0]+' - '+data_1c[tabs[0]]+'}<br>')
            var div_sum = 0,
            div_stimul = 0,
            div_fzp = 0,
            div_bonus = 0,
            div_quartbonus = 0,
            div_prochee = 0,
            div_otpusk = 0,
            div_rabochie = 0,
            div_nauch = 0,
            div_spec = 0;
            
            for (i_otd in d_full_lab){ 
                     if (d_full_lab[i_otd].pname.indexOf(topnames[i].pname)==0) {
                        _$LOG(2,' !!!!!for (i_otd in d_full_lab) '+i_otd+'}<br>')

                        d_full_lab[i_otd].pname.indexOf(topnames[i].pname)
                        if (d_full_lab[i_otd].post_dist === undefined) {
                            d_full_lab[i_otd].post_dist = {};
                        }
                        if (d_full_lab[i_otd].cat_dist === undefined) {
                            d_full_lab[i_otd].cat_dist = {};
                        }
                        post_dist = d_full_lab[i_otd].post_dist;
                        cat_dist = d_full_lab[i_otd].cat_dist;
                }
                     if (d_full_lab[i_otd].pname.indexOf('ЛФВЭ')==0) {
                        _$LOG(2,' !!!!!!!!!for (i_otd in d_full_lab) '+i_otd+'}<br>')

                        if (d_full_lab[i_otd].post_dist === undefined) {
                            d_full_lab[i_otd].post_dist = {};
                        }
                        if (d_full_lab[i_otd].cat_dist === undefined) {
                            d_full_lab[i_otd].cat_dist = {};
                        }
                        full_post_dist = d_full_lab[i_otd].post_dist;
                        full_cat_dist = d_full_lab[i_otd].cat_dist;
                }

            }

            
            for (j in tabs){
                
                
                if (tabs[j].trim().length <1) {continue;}
                if (d_sotr[tabs[j]] === undefined ) {continue;}
//                _$LOG(2,j+' |'+ tabs[j] + '| '+' %%%%%%%%%%% '+ tabs[j].trim().length  + ' '+tabs[j].length +'<br>');
//                _$LOG(2,JSON.stringify(d_sotr[tabs[j]])+'<br>');
                tab_cat = d_sotr[tabs[j]].category;
                tab_post = d_sotr[tabs[j]].post;
                tab_stavka = d_sotr[tabs[j]].stavka;
//                _$LOG(2,'%%%%%%%%%%% d_sotr '+ tabs[j] + JSON.stringify(d_sotr[tabs[j]]) + ' '+tab_cat+' '+tab_post+'<br>');
                for (n_month = 1;n_month<=12;n_month++){

                    var floatVal = parseFloat(data_1c[tabs[j]+'_'+n_month]);
                    if (!isNaN(floatVal)) {
//                        _$LOG(2,tabs[j]+'_'+n_month+' '+(data_1c[tabs[j]+'_'+n_month])+' '+'<br>');
                        div_sum += floatVal;
                        full_sum += floatVal;   
                        if (post_dist[tab_post]=== undefined){
                            post_dist[tab_post] = 0;
                            post_dist[tab_post+'_cnt'] = 0;

                        }
                        if (cat_dist[tab_cat]=== undefined){
                            cat_dist[tab_cat] = 0;
                            cat_dist[tab_cat+'_cnt'] = 0;
                        }
                        cat_dist[tab_cat] +=floatVal;
                        post_dist[tab_post] +=floatVal;
                        cat_dist[tab_cat+'_cnt'] +=tab_stavka;
                        post_dist[tab_post+'_cnt'] +=tab_stavka;

                        if (full_post_dist[tab_post]=== undefined){
                            full_post_dist[tab_post] = 0;
                            full_post_dist[tab_post+'_cnt'] = 0;
                        }
                        if (full_cat_dist[tab_cat]=== undefined){
                            full_cat_dist[tab_cat] = 0;
                            full_cat_dist[tab_cat+'_cnt'] = 0;
                        }
                        full_cat_dist[tab_cat] +=floatVal;
                        full_cat_dist[tab_cat+'_cnt'] +=tab_stavka;
                        full_post_dist[tab_post] +=floatVal;
                        full_post_dist[tab_post+'_cnt'] +=tab_stavka;
                        for (iii in d_category) {
    //                       _$LOG(2,'LOOKUP CATEGORY'+ iii+ ' - '+d_category[iii].pname+' - '+tab_cat+'<br>')
                            if (d_category[iii].pname==tab_cat) {
                                d_category[iii].m_pay +=(+floatVal);
    //                            _$LOG(2,'LOOKUP CATEGORY ok '+ JSON.stringify(d_category)+'<br>')    
                            }
                        }

                    };
                }


                var floatVal = parseFloat(stimul_1c[tabs[j]]);
                if (!isNaN(floatVal)) {
                    div_stimul += floatVal;
                    full_stimul += floatVal;   
                };
                var floatVal = parseFloat(fzp_1c[tabs[j]]);
                if (!isNaN(floatVal)) {
                    div_fzp += floatVal;
                    full_fzp += floatVal;   
                };
                var floatVal = parseFloat(bonus_1c[tabs[j]]);
                if (!isNaN(floatVal)) {
                    div_bonus += floatVal;
                    full_bonus += floatVal;   
                };
                var floatVal = parseFloat(quartbonus_1c[tabs[j]]);
                if (!isNaN(floatVal)) {
                    div_quartbonus += floatVal;
                    full_quartbonus += floatVal;   
                };
                var floatVal = parseFloat(prochee_1c[tabs[j]]);
                if (!isNaN(floatVal)) {
                    div_prochee += floatVal;
                    full_prochee += floatVal;   
                };

                var floatVal = parseFloat(otpusk_1c[tabs[j]]);
                if (!isNaN(floatVal)) {
                    div_otpusk += floatVal;
                    full_otpusk += floatVal;   
                };




//                _$LOG(2,tabs[j]+ ' - '+div_sum+' - '+data_1c[tabs[j]]+'}<br>')
            };
//            var newel=topnames[i];
//            var addel={"paysum":div_sum};
            topnames[i].paysum = parseInt(div_sum/(1000 * month_cnt));
            topnames[i].stimul = parseInt(div_stimul/(1000 * month_cnt));
            topnames[i].bonus = parseInt(div_bonus/(1000 * month_cnt));
            topnames[i].fzp = parseInt(div_fzp/(1000 * month_cnt));
            topnames[i].prochee = parseInt(div_prochee/(1000 * month_cnt));
            topnames[i].otpusk = parseInt(div_otpusk/(1000 * month_cnt));
            topnames[i].quartbonus = parseInt(div_quartbonus/(1000 * month_cnt));


            topnames[i].p_paysum = parseInt(div_sum*100/div_sum);
            topnames[i].p_stimul = parseInt(div_stimul*100/div_sum);
            topnames[i].p_bonus = parseInt(div_bonus*100/div_sum);
            topnames[i].p_fzp = parseInt(div_fzp*100/div_sum);
            topnames[i].p_prochee = parseInt(div_prochee*100/div_sum);
            topnames[i].p_otpusk = parseInt(div_otpusk*100/div_sum);
            topnames[i].p_quartbonus = parseInt(div_quartbonus*100/div_sum);
            topnames[i].p_greyzone = 100 -  parseInt( div_quartbonus*100/div_sum +
            div_stimul*100/div_sum + 
            div_bonus*100/div_sum +
            div_fzp*100/div_sum + 
            div_prochee*100/div_sum +
            div_otpusk*100/div_sum  );




            topnames[i].m_paysum = parseInt(div_sum/(topnames[i].cnt * 1000 * month_cnt));
            topnames[i].m_stimul = parseInt(div_stimul/(topnames[i].cnt*1000 * month_cnt));
            topnames[i].m_bonus = parseInt(div_bonus/(topnames[i].cnt*1000 * month_cnt));
            topnames[i].m_fzp = parseInt(div_fzp/(topnames[i].cnt*1000 * month_cnt));
            topnames[i].m_prochee = parseInt(div_prochee/(topnames[i].cnt*1000 * month_cnt));
            topnames[i].m_otpusk = parseInt(div_otpusk/(topnames[i].cnt*1000 * month_cnt));
            topnames[i].m_quartbonus = parseInt(div_quartbonus/(topnames[i].cnt*1000 * month_cnt));
            topnames[i].m_greyzone =parseInt( (div_sum -  ( div_quartbonus + div_stimul + div_bonus + div_fzp + div_prochee + div_otpusk)) / (topnames[i].cnt*1000 * month_cnt));

//             _$LOG(2,'topnames[i] '+JSON.stringify(topnames[i])+'<br> ')
            for (i_otd in d_otdelenie_age_salary){ 
//                    _$LOG(2,'LOOKUP otdelenie '+ d_otdelenie_age_salary[i_otd].pname+' === '+topnames[i].name+'<br>')                    ;
                     if (d_otdelenie_age_salary[i_otd].pname.indexOf(topnames[i].pname)==0) {
                        d_otdelenie_age_salary[i_otd].v1 = topnames[i].m_paysum;
                        _$LOG(2,'LOOKUP OK '+ JSON.stringify(d_otdelenie_age_salary[i_otd])+'<br>')                    ;
                }
            }

        }
        setPrm('d_full_lab_raw', JSON.stringify(d_full_lab));
        setPrm('tpn','');
        _$GET_DATA("[div_dist]");
        div_dist = prm('div_dist');
        div_dist = div_dist.substring(0,div_dist.length-1);
        div_dist = JSON.parse('{'+div_dist+'}');          



        for (ii in d_full_lab){
            div = d_full_lab[ii];
            for (ipost in div_dist){
                if (d_full_lab[ii].post_dist[ipost] === undefined){
                    continue;
                }
//                _$LOG(2,d_full_lab[ii].pname+' ]]]]]]]]]]]]]]]]]]] ipost '+ipost+' '+div_dist[ipost] +'<br>');
                d_full_lab[ii].post_dist[ipost] = parseInt( 
                      d_full_lab[ii].post_dist[ipost] / d_full_lab[ii].post_dist[ipost+'_cnt']
               );
                
            }
            
        }
            restabl ='<table border=1 style="padding:3px;margin-bottom:10px" class=rtbl ><tr><td colspan=0><h3>Таб. 2 Средние начисления по должностям в подраздедллениях и лаборатории в целом</h3></td></tr> '; 
            
            row = '<tr><td>Должность</td>';
                for (ii in d_full_lab){
                   row += '<td>'+ d_full_lab[ii].pname+'</td>';
                }
            restabl += row +'</tr>';
            for (ipost in div_dist){
                row = '<tr><td>'+ipost+'</td>';
                for (ii in d_full_lab ){
                
                        if (d_full_lab[ii].post_dist[ipost] === undefined){
                            row +='<td></td>';
                        } else {
                            row +='<td class=right>'+d_full_lab[ii].post_dist[ipost]+'</td>';
                        }
                }
                restabl += row +'</tr>';
            }
//        _$LOG(2,'!%%%%%%%%%%@@@@@%%%%%%%%%%% D_FULL_LAB '+JSON.stringify(d_full_lab)+'<br>')
        setPrm('d_otdelenie', JSON.stringify(topnames));
        setPrm('d_otdelenie_age_salary', JSON.stringify(d_otdelenie_age_salary));
        setPrm('restabl',restabl);
        setPrm('d_full_lab', JSON.stringify(d_full_lab));

            
    
    for (ii in d_category){
       _$LOG(2,ii+' month='+month_cnt+' !%%%%%ii in d_category'+JSON.stringify(d_category[ii])+'<br>')
      d_category[ii].m_pay =   parseInt(d_category[ii].m_pay/(d_category[ii].st_sum*month_cnt));

    }



        setPrm('d_category', JSON.stringify(d_category));
        setPrm('full_sum', parseInt(full_sum/1000));
        
    $JS}


    

<br>===========d_full_lab_raw================<br> ??
#d_full_lab_raw# ??
<br>===========d_full_labw================<br> ??
#d_full_lab# ??
<br> ??
$LOG2 !!!!!!!!!!!!!!!!!!!!    var a = "#d_otdel#"; !!!!!!!!!!!!!! <br>
    <script type="text/javascript">
        console.log("before create chart 1 ssssssss");
        var a = #d_otdel#;
        console.log("");
        
    </script>

$LOG2 !!!!!!!!!!!!!!!!!!!!    Otdelenie '#otdelenie#' !!!!!!!!!!!!!! <br>
$LOG2             "dataProvider" otdelenie:   #d_otdelenie# <br>  
$LOG2            "dataProvider": otdel #d_otdel# <br>  
<script>
 
</script>

$INCLUDE [new stack chart]
$INCLUDE [JS new stat]
$INCLUDE [chart6] ??staff_report_fin
$INCLUDE [chart7]     ??11staff_report_fin
$INCLUDE [chart7 new] ??11staff_report_fin
$INCLUDE [chart sorted] ??staff_report_fin
#restabl# ??staff_report_fin
$INCLUDE [неучтенные виды расчетов] ??staff_report_fin




$INCLUDE [charts 1-9]


[end]


[JS new stat]
<script>
        $INCLUDE staff_reports.js[new_stat]
</script>


    
[end]


[1chart6]

<h3>Chart 6. Подразделения. Структура начислений по группам </h3> ??LAB_ID=100000
    <div class="graphContaner" style="width:800px;height:9000px" id="divisions_fin_chart"  style="margin-top:10px;color:black;border: solid 3px black">
    </div>

    <script>

//    var d_otdelenie = new_stat;
    console.log("Chart 6. Подразделения. Структура начислений по группам ");
    console.log(JSON.stringify(d_otdelenie));
    var otd_cat = d_otdelenie;
    var chart = am4core.create("divisions_fin_chart", am4charts.XYChart);

    chart.data = new_stat;
    console.log('===========otd_cat '+  JSON.stringify(otd_cat));
    chart.exporting.menu = new am4core.ExportMenu();



    var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());


    categoryAxis.dataFields.category = "pname";
    categoryAxis.renderer.grid.template.location = 0;


    var valueAxis = chart.xAxes.push(new am4charts.ValueAxis());
    valueAxis.renderer.labels.template.disabled = true;
    valueAxis.min = 0;
    valueAxis.numberFormatter = new am4core.NumberFormatter();
    valueAxis.numberFormatter.numberFormat = "#.#";
    valueAxis.title.text = "Сотрудников";
    valueAxis.extraMax =  0.1;
    valueAxis.calculateTotals = true;
    


    // Create series
    function createSeries(field, name, s_color) {

        // Set up series
        var series = chart.series.push(new am4charts.ColumnSeries());
        if(typeof s_color === "undefined")
            {} else
             {
                series.fill =  s_color;
             };
        series.name = name;
        console.log('Create SERIES '+series.name +' '+series.tabindex);
        
        series.dataFields.valueX = field;
        series.dataFields.categoryY = "pname";
        series.sequencedInterpolation = true;
        series.calculatePercent = true;
        //series.cursorTooltipEnabled = false;

        // Make it stacked
        series.stacked = true;

        // Configure columns
        series.columns.template.width = am4core.percent(70);
        //series.columns.template.tooltipText = "{name} [font-size:10px] {valueY.totalPercent.formatNumber('#.0')}% [/][font-size:10px]({valueY}т.р.)";

        // Configure legend
        series.legendSettings.itemValueText = " {valueX.totalPercent.formatNumber('#.0')}%";

        // Add label
        var labelBullet = series.bullets.push(new am4charts.LabelBullet());
        labelBullet.label.text = "[font-size:8px]{valueX.totalPercent.formatNumber('#.0')}%";
        labelBullet.locationX = 0.5;
        labelBullet.label.fill = am4core.color("#fff");

        return series;
    }
    chart.cursor = new am4charts.XYCursor();
    chart.cursor.behavior = "none";
    createSeries("p_fzp", "ФЗП");
    createSeries("p_stimul", "Стимул");
    createSeries("p_bonus", "Премия");
    createSeries("p_quartbonus", "кв.Премия");
    createSeries("p_otpusk", "Отпуск");
    createSeries("p_prochee", "Прочее");
    createSeries("p_greyzone", "Доплаты вне категорий",'red');

    var totalSeries = chart.series.push(new am4charts.ColumnSeries());
    totalSeries.dataFields.valueX = "none";
    totalSeries.dataFields.categoryY = "category";
    totalSeries.stacked = true;
    totalSeries.hiddenInLegend = true;
    totalSeries.columns.template.strokeOpacity = 90;

    var totalBullet = totalSeries.bullets.push(new am4charts.LabelBullet());
    totalBullet.dy = -20;
    totalBullet.label.text = "{valueY.total}";
    totalBullet.label.hideOversized = false;
    totalBullet.label.fontSize = 12;
    totalBullet.label.background.fill = totalSeries.stroke;
    totalBullet.label.background.fillOpacity = 0.0;
    totalBullet.label.padding(-5, -10, -5, -10);

    chart.legend = new am4charts.Legend();
    </script>
[end]

[chart7]
<h3>Chart 7. Подразделения. Распределение по средним начислениям по видам</h3> ??LAB_ID=100000
    <div class="graphContaner1" style="width:1300px;height:3000px" id="divisions_mean_chart"  style="margin-top:10px;color:black;border: solid 3px black">
    </div>

    <script>
    console.log("Chart 7. Подразделения. Распределение по средним начислениям по видам ");
//    var d_otdelenie = new_stat;
//    var otd_cat = d_otdelenie;
    var chart = am4core.create("divisions_mean_chart", am4charts.XYChart);

    chart.data = new_stat;
    console.log(JSON.stringify(new_stat));
    console.log('=======================================================');
for (bar in new_stat) {
  console.log(JSON.stringify(new_stat[bar]));
}

    chart.exporting.menu = new am4core.ExportMenu();
    var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());
    

    categoryAxis.dataFields.category = "pname";
    categoryAxis.renderer.grid.template.location = 0;
    console.log('!!!Stack 4');

    var valueAxis = chart.xAxes.push(new am4charts.ValueAxis());
    valueAxis.renderer.labels.template.disabled = true;
    valueAxis.min = 0;
    valueAxis.numberFormatter = new am4core.NumberFormatter();
    valueAxis.numberFormatter.numberFormat = "#.#";
    valueAxis.title.text = "Сотрудников";
    valueAxis.extraMax =  0.1;
    valueAxis.calculateTotals = true;
    console.log('!!!Stack 5');


    // Create series
    function createSeries(field, name, s_color) {

        // Set up series
        var series = chart.series.push(new am4charts.ColumnSeries());
        if(typeof s_color === "undefined")
            {} else
             {
                series.fill =  s_color;
             };
        series.name = name;
        console.log('Create SERIES '+series.name +' '+series.tabindex);
        
        series.dataFields.valueX = field;
        series.dataFields.categoryY = "pname";
        series.sequencedInterpolation = true;
        series.calculatePercent = true;
        //series.cursorTooltipEnabled = false;

        // Make it stacked
        series.stacked = true;

        // Configure columns
        series.columns.template.width = am4core.percent(40);
        

        // Configure legend
        series.legendSettings.itemValueText = " {valueX.formatNumber('#')}т.р.";

        // Add label
        var labelBullet = series.bullets.push(new am4charts.LabelBullet());
        labelBullet.label.text = "[font-size:8px]{valueX.formatNumber('#')}т.р.";
        labelBullet.locationX = 0.5;
        labelBullet.label.fill = am4core.color("#fff");

        return series;
    }
    chart.cursor = new am4charts.XYCursor();
    chart.cursor.behavior = "none";
    createSeries("m_fzp", "ФЗП");
    createSeries("m_stimul", "Стимул");
    createSeries("m_bonus", "Премия");
    createSeries("m_quartbonus", "кв.Премия");
    createSeries("m_otpusk", "Отпуск");
    createSeries("m_prochee", "Прочее");
    createSeries("m_greyzone", "Доплаты вне категорий",'red');

    var totalSeries = chart.series.push(new am4charts.ColumnSeries());
    totalSeries.dataFields.valueX = "none";
    totalSeries.dataFields.categoryY = "category";
    totalSeries.stacked = true;
    totalSeries.hiddenInLegend = true;
    totalSeries.columns.template.strokeOpacity = 90;

    var totalBullet = totalSeries.bullets.push(new am4charts.LabelBullet());
    totalBullet.dy = -20;
    totalBullet.label.text = "{valueY.total}";
    totalBullet.label.hideOversized = false;
    totalBullet.label.fontSize = 12;
    totalBullet.label.background.fill = totalSeries.stroke;
    totalBullet.label.background.fillOpacity = 0.0;
    totalBullet.label.padding(-5, -10, -5, -10);

    chart.legend = new am4charts.Legend();
    </script>

[end]


[chart7 new]
<h3>Chart 7(1). Подразделения. Распределение по средним начислениям по видам</h3> ??LAB_ID=100000
    <div class="graphContaner" style="width:800px;height:9000px" id="divisions_mean_chart_new"  style="margin-top:10px;color:black;border: solid 3px black">
    </div>

    <script>
            console.log("create divisions_mean_chart 11 sssssss");

    var d_otdelenie = #d_otdelenie#;
    var otd_cat = d_otdelenie;
    var chart = am4core.create("divisions_mean_chart_new", am4charts.XYChart);

    chart.data = otd_cat;
    console.log('===========otd_cat '+  JSON.stringify(otd_cat));
    chart.exporting.menu = new am4core.ExportMenu();

    

    var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());
    

    categoryAxis.dataFields.category = "pname";
    categoryAxis.renderer.grid.template.location = 0;
    console.log('!!!Stack 4');

    var valueAxis = chart.xAxes.push(new am4charts.ValueAxis());
    valueAxis.renderer.labels.template.disabled = true;
    valueAxis.min = 0;
    valueAxis.numberFormatter = new am4core.NumberFormatter();
    valueAxis.numberFormatter.numberFormat = "#.#";
    valueAxis.title.text = "Сотрудников";
    valueAxis.extraMax =  0.1;
    valueAxis.calculateTotals = true;
    console.log('!!!Stack 5');


    // Create series
    function createSeries(field, name, s_color) {

        // Set up series
        var series = chart.series.push(new am4charts.ColumnSeries());
        if(typeof s_color === "undefined")
            {} else
             {
                series.fill =  s_color;
             };
        series.name = name;
        console.log('Create SERIES '+series.name +' '+series.tabindex);
        
        series.dataFields.valueX = field;
        series.dataFields.categoryY = "pname";
        series.sequencedInterpolation = true;
        series.calculatePercent = true;
        //series.cursorTooltipEnabled = false;

        // Make it stacked
        series.stacked = true;

        // Configure columns
        series.columns.template.width = am4core.percent(40);
        

        // Configure legend
        series.legendSettings.itemValueText = " {valueX.formatNumber('#')}т.р.";

        // Add label
        var labelBullet = series.bullets.push(new am4charts.LabelBullet());
        labelBullet.label.text = "[font-size:8px]{valueX.formatNumber('#')}т.р.";
        labelBullet.locationX = 0.5;
        labelBullet.label.fill = am4core.color("#fff");

        return series;
    }
    chart.cursor = new am4charts.XYCursor();
    chart.cursor.behavior = "none";
    createSeries("m_fzp", "ФЗП");
    createSeries("m_stimul", "Стимул");
    createSeries("m_bonus", "Премия");
    createSeries("m_quartbonus", "кв.Премия");
    createSeries("m_otpusk", "Отпуск");
    createSeries("m_prochee", "Прочее");
    createSeries("m_greyzone", "Доплаты вне категорий",'red');

    var totalSeries = chart.series.push(new am4charts.ColumnSeries());
    totalSeries.dataFields.valueX = "none";
    totalSeries.dataFields.categoryY = "category";
    totalSeries.stacked = true;
    totalSeries.hiddenInLegend = true;
    totalSeries.columns.template.strokeOpacity = 90;

    var totalBullet = totalSeries.bullets.push(new am4charts.LabelBullet());
    totalBullet.dy = -20;
    totalBullet.label.text = "{valueY.total}";
    totalBullet.label.hideOversized = false;
    totalBullet.label.fontSize = 12;
    totalBullet.label.background.fill = totalSeries.stroke;
    totalBullet.label.background.fillOpacity = 0.0;
    totalBullet.label.padding(-5, -10, -5, -10);

    chart.legend = new am4charts.Legend();
    </script>

[end]

[chart sorted]
<script>
		var stat_new = [{ "pname": "Гр. Сов. и К.", "cnt": 0, "workers_cnt": 0, "specialist_cnt": 0, "head_cnt": 0, "scienceTeam_cnt": 0, "paysum": "0", "stimul": "0", "bonus": "0", "fzp": "0", "otpusk": "0", "quartbonus": "0", "m_paysum": "0", "m_stimul": "0", "m_bonus": "0", "m_fzp": "0", "m_otpusk": "0", "m_quartbonus": "0" }, { "pname": "Гр. Сов. и К._Рабочие", "cnt": 0, "paysum": 0, "stimul": 0, "bonus": 0, "fzp": 0, "otpusk": 0, "quartbonus": 0, "m_paysum": 0, "m_stimul": 0, "m_bonus": 0, "m_fzp": 0, "m_otpusk": 0, "m_quartbonus": 0 }, { "pname": "Гр. Сов. и К._Специалисты", "cnt": 0, "paysum": 0, "stimul": 0, "bonus": 0, "fzp": 0, "otpusk": 0, "quartbonus": 0, "m_paysum": 0, "m_stimul": 0, "m_bonus": 0, "m_fzp": 0, "m_otpusk": 0, "m_quartbonus": 0 }, { "pname": "Гр. Сов. и К._Научные и научно-педагогические работники", "cnt": 0, "paysum": 0, "stimul": 0, "bonus": 0, "fzp": 0, "otpusk": 0, "quartbonus": 0, "m_paysum": 0, "m_stimul": 0, "m_bonus": 0, "m_fzp": 0, "m_otpusk": 0, "m_quartbonus": 0 }, { "pname": "Гр. Сов. и К._Руководители", "cnt": 0, "paysum": 0, "stimul": 0, "bonus": 0, "fzp": 0, "otpusk": 0, "quartbonus": 0, "m_paysum": 0, "m_stimul": 0, "m_bonus": 0, "m_fzp": 0, "m_otpusk": 0, "m_quartbonus": 0 }, { "pname": "Отд.№5", "cnt": 69.6, "workers_cnt": 5.5, "specialist_cnt": 39.75, "head_cnt": 1, "scienceTeam_cnt": 23.35, "paysum": "25088957.549999997", "stimul": "2018386.2300000002", "bonus": "1301340.0", "fzp": "14790789.430000002", "otpusk": "460093.9700000001", "quartbonus": "0", "m_paysum": "120157.84267241378", "m_stimul": "9666.600718390806", "m_bonus": "6232.471264367817", "m_fzp": "70837.1141283525", "m_otpusk": "2203.5151819923376", "m_quartbonus": "0.0" }, { "pname": "Отд.№5_Рабочие", "cnt": 5.5, "paysum": 1018292.1499999999, "stimul": 45000, "bonus": 72000, "fzp": 689620.09, "otpusk": 0, "quartbonus": 0, "m_paysum": 61714.67575757575, "m_stimul": 2727.2727272727275, "m_bonus": 4363.636363636364, "m_fzp": 41795.15696969697, "m_otpusk": 0, "m_quartbonus": 0 }, { "pname": "Отд.№5_Специалисты", "cnt": 39.75, "paysum": 12232180.43, "stimul": 1138286.38, "bonus": 723150, "fzp": 7790405.32, "otpusk": 102719.55, "quartbonus": 0, "m_paysum": 102575.93651991614, "m_stimul": 9545.378448637315, "m_bonus": 6064.1509433962265, "m_fzp": 65328.34649895178, "m_otpusk": 861.3798742138365, "m_quartbonus": 0 }, { "pname": "Отд.№5_Научные и научно-педагогические работники", "cnt": 23.35, "paysum": 11616256.71, "stimul": 835099.8500000001, "bonus": 491190, "fzp": 6140934.0200000005, "otpusk": 357374.42000000004, "quartbonus": 0, "m_paysum": 165828.07580299783, "m_stimul": 11921.482512491077, "m_bonus": 7011.991434689507, "m_fzp": 87665.01099214845, "m_otpusk": 5101.704782298358, "m_quartbonus": 0 }, { "pname": "Отд.№5_Руководители", "cnt": 1, "paysum": 222228.26, "stimul": 0, "bonus": 15000, "fzp": 169830, "otpusk": 0, "quartbonus": 0, "m_paysum": 74076.08666666667, "m_stimul": 0, "m_bonus": 5000, "m_fzp": 56610, "m_otpusk": 0, "m_quartbonus": 0 }, { "pname": "Отд.№1", "cnt": 375.48, "workers_cnt": 51, "specialist_cnt": 250.68, "head_cnt": 25, "scienceTeam_cnt": 48.8, "paysum": "126855468.1200001", "stimul": "21202269.93", "bonus": "5229170.0", "fzp": "67208882.58999999", "otpusk": "2878655.9099999997", "quartbonus": "0", "m_paysum": "112616.26728454253", "m_stimul": "18822.36952700543", "m_bonus": "4642.209083484251", "m_fzp": "59664.857950711965", "m_otpusk": "2555.5341695962497", "m_quartbonus": "0.0" }, { "pname": "Отд.№1_Рабочие", "cnt": 51, "paysum": 12967531.390000002, "stimul": 2038130, "bonus": 620720, "fzp": 6549519.8599999985, "otpusk": 299376.17, "quartbonus": 0, "m_paysum": 84755.10712418302, "m_stimul": 13321.111111111111, "m_bonus": 4056.9934640522874, "m_fzp": 42807.31934640522, "m_otpusk": 1956.7069934640522, "m_quartbonus": 0 }, { "pname": "Отд.№1_Специалисты", "cnt": 250.68, "paysum": 77252306.45, "stimul": 13448196.9, "bonus": 3752910, "fzp": 40683740.03000001, "otpusk": 1514363.35, "quartbonus": 0, "m_paysum": 102723.66689271848, "m_stimul": 17882.2893729057, "m_bonus": 4990.306366682624, "m_fzp": 54097.8405802883, "m_otpusk": 2013.6739402159462, "m_quartbonus": 0 }, { "pname": "Отд.№1_Научные и научно-педагогические работники", "cnt": 48.8, "paysum": 23778429.649999995, "stimul": 3815885.1400000006, "bonus": 465700, "fzp": 12966866.870000001, "otpusk": 852577.14, "quartbonus": 0, "m_paysum": 162420.9675546448, "m_stimul": 26064.789207650283, "m_bonus": 3181.010928961749, "m_fzp": 88571.49501366122, "m_otpusk": 5823.614344262296, "m_quartbonus": 0 }, { "pname": "Отд.№1_Руководители", "cnt": 25, "paysum": 12857200.630000003, "stimul": 1900057.8900000001, "bonus": 389840, "fzp": 7008755.83, "otpusk": 212339.25, "quartbonus": 0, "m_paysum": 171429.34173333336, "m_stimul": 25334.1052, "m_bonus": 5197.866666666667, "m_fzp": 93450.07773333334, "m_otpusk": 2831.19, "m_quartbonus": 0 }, { "pname": "Отд.№3", "cnt": 189.8, "workers_cnt": 9, "specialist_cnt": 87.2, "head_cnt": 4, "scienceTeam_cnt": 89.6, "paysum": "68558530.16999999", "stimul": "6001014.68", "bonus": "3676810.0", "fzp": "39627862.38999999", "otpusk": "4031699.6", "quartbonus": "0", "m_paysum": "120404.8650684931", "m_stimul": "10539.189813839126", "m_bonus": "6457.341060765717", "m_fzp": "69595.82435897434", "m_otpusk": "7080.610467158412", "m_quartbonus": "0.0" }, { "pname": "Отд.№3_Рабочие", "cnt": 9, "paysum": 2275543.51, "stimul": 79000, "bonus": 63000, "fzp": 1550376.8399999999, "otpusk": 31770.76, "quartbonus": 0, "m_paysum": 84279.38925925925, "m_stimul": 2925.925925925926, "m_bonus": 2333.3333333333335, "m_fzp": 57421.364444444436, "m_otpusk": 1176.6948148148147, "m_quartbonus": 0 }, { "pname": "Отд.№3_Специалисты", "cnt": 87.2, "paysum": 24971898.910000004, "stimul": 1414421.05, "bonus": 1889100, "fzp": 14601554.550000004, "otpusk": 654653.03, "quartbonus": 0, "m_paysum": 95458.32916666668, "m_stimul": 5406.808295107034, "m_bonus": 7221.3302752293575, "m_fzp": 55816.340022935794, "m_otpusk": 2502.4962920489297, "m_quartbonus": 0 }, { "pname": "Отд.№3_Научные и научно-педагогические работники", "cnt": 89.6, "paysum": 39557566.38999999, "stimul": 4162593.63, "bonus": 1704710, "fzp": 22489696.319999997, "otpusk": 3313861.5599999996, "quartbonus": 0, "m_paysum": 147163.5654389881, "m_stimul": 15485.839397321432, "m_bonus": 6341.927083333335, "m_fzp": 83667.025, "m_otpusk": 12328.354017857144, "m_quartbonus": 0 }, { "pname": "Отд.№3_Руководители", "cnt": 4, "paysum": 1753521.3599999999, "stimul": 345000, "bonus": 20000, "fzp": 986234.6799999999, "otpusk": 31414.25, "quartbonus": 0, "m_paysum": 146126.78, "m_stimul": 28750, "m_bonus": 1666.6666666666667, "m_fzp": 82186.22333333333, "m_otpusk": 2617.8541666666665, "m_quartbonus": 0 }, { "pname": "Отд.№2", "cnt": 117.63, "workers_cnt": 8, "specialist_cnt": 50.88, "head_cnt": 2, "scienceTeam_cnt": 56.75, "paysum": "37032124.089999996", "stimul": "2661578.96", "bonus": "2465780.0", "fzp": "22779697.739999987", "otpusk": "1079648.09", "quartbonus": "0", "m_paysum": "104939.56782566805", "m_stimul": "7542.234010598204", "m_bonus": "6987.389838193205", "m_fzp": "64551.83694635719", "m_otpusk": "3059.4465414151723", "m_quartbonus": "0.0" }, { "pname": "Отд.№2_Рабочие", "cnt": 8, "paysum": 1608625.05, "stimul": 5000, "bonus": 138500, "fzp": 1033304.04, "otpusk": 71356.8, "quartbonus": 0, "m_paysum": 67026.04375, "m_stimul": 208.33333333333334, "m_bonus": 5770.833333333333, "m_fzp": 43054.335, "m_otpusk": 2973.2000000000003, "m_quartbonus": 0 }, { "pname": "Отд.№2_Специалисты", "cnt": 50.88, "paysum": 12400312.240000002, "stimul": 489000, "bonus": 1142100, "fzp": 7436968.470000001, "otpusk": 189502.99, "quartbonus": 0, "m_paysum": 81238.9428721174, "m_stimul": 3203.6163522012575, "m_bonus": 7482.311320754717, "m_fzp": 48722.27771226415, "m_otpusk": 1241.5028170859537, "m_quartbonus": 0 }, { "pname": "Отд.№2_Научные и научно-педагогические работники", "cnt": 56.75, "paysum": 22297430.8, "stimul": 2092578.9599999997, "bonus": 1148180, "fzp": 13919918.209999995, "otpusk": 818788.3, "quartbonus": 0, "m_paysum": 130968.75653450808, "m_stimul": 12291.212687224668, "m_bonus": 6744.082232011748, "m_fzp": 81761.63412628484, "m_otpusk": 4809.329221732746, "m_quartbonus": 0 }, { "pname": "Отд.№2_Руководители", "cnt": 2, "paysum": 725756, "stimul": 75000, "bonus": 37000, "fzp": 389507.02, "otpusk": 0, "quartbonus": 0, "m_paysum": 120959.33333333333, "m_stimul": 12500, "m_bonus": 6166.666666666667, "m_fzp": 64917.83666666667, "m_otpusk": 0, "m_quartbonus": 0 }, { "pname": "ПФБ", "cnt": 17, "workers_cnt": 0, "specialist_cnt": 14, "head_cnt": 3, "scienceTeam_cnt": 0, "paysum": "6019869.749999999", "stimul": "409000.0", "bonus": "472400.0", "fzp": "3233429.65", "otpusk": "140867.84", "quartbonus": "0", "m_paysum": "118036.66176470586", "m_stimul": "8019.607843137255", "m_bonus": "9262.745098039215", "m_fzp": "63400.581372549015", "m_otpusk": "2762.1145098039215", "m_quartbonus": "0.0" }, { "pname": "ПФБ_Рабочие", "cnt": 0, "paysum": 0, "stimul": 0, "bonus": 0, "fzp": 0, "otpusk": 0, "quartbonus": 0, "m_paysum": 0, "m_stimul": 0, "m_bonus": 0, "m_fzp": 0, "m_otpusk": 0, "m_quartbonus": 0 }, { "pname": "ПФБ_Специалисты", "cnt": 14, "paysum": 4227385.82, "stimul": 169000, "bonus": 472400, "fzp": 2310516.78, "otpusk": 140867.84, "quartbonus": 0, "m_paysum": 100652.04333333333, "m_stimul": 4023.809523809524, "m_bonus": 11247.619047619048, "m_fzp": 55012.30428571428, "m_otpusk": 3353.9961904761903, "m_quartbonus": 0 }, { "pname": "ПФБ_Научные и научно-педагогические работники", "cnt": 0, "paysum": 0, "stimul": 0, "bonus": 0, "fzp": 0, "otpusk": 0, "quartbonus": 0, "m_paysum": 0, "m_stimul": 0, "m_bonus": 0, "m_fzp": 0, "m_otpusk": 0, "m_quartbonus": 0 }, { "pname": "ПФБ_Руководители", "cnt": 3, "paysum": 1792483.93, "stimul": 240000, "bonus": 0, "fzp": 922912.87, "otpusk": 0, "quartbonus": 0, "m_paysum": 199164.8811111111, "m_stimul": 26666.666666666668, "m_bonus": 0, "m_fzp": 102545.87444444445, "m_otpusk": 0, "m_quartbonus": 0 }, { "pname": "ИЭТО", "cnt": 63.38, "workers_cnt": 41.88, "specialist_cnt": 12.5, "head_cnt": 9, "scienceTeam_cnt": 0, "paysum": "15792377.399999999", "stimul": "665000.0", "bonus": "1023900.0", "fzp": "10238340.1", "otpusk": "-2028.75", "quartbonus": "0", "m_paysum": "83056.57620700535", "m_stimul": "3497.422951509414", "m_bonus": "5384.979488797728", "m_fzp": "53846.3242873672", "m_otpusk": "-10.669769643420636", "m_quartbonus": "0.0" }, { "pname": "ИЭТО_Рабочие", "cnt": 41.88, "paysum": 8988666.09, "stimul": 323000, "bonus": 537600, "fzp": 5904497.5, "otpusk": -2028.75, "quartbonus": 0, "m_paysum": 71543.02841451766, "m_stimul": 2570.8373129576566, "m_bonus": 4278.892072588347, "m_fzp": 46995.36373766316, "m_otpusk": -16.14732569245463, "m_quartbonus": 0 }, { "pname": "ИЭТО_Специалисты", "cnt": 12.5, "paysum": 3490011.7, "stimul": 90000, "bonus": 209800, "fzp": 2178319.96, "otpusk": 0, "quartbonus": 0, "m_paysum": 93066.97866666668, "m_stimul": 2400, "m_bonus": 5594.666666666667, "m_fzp": 58088.53226666667, "m_otpusk": 0, "m_quartbonus": 0 }, { "pname": "ИЭТО_Научные и научно-педагогические работники", "cnt": 0, "paysum": 0, "stimul": 0, "bonus": 0, "fzp": 0, "otpusk": 0, "quartbonus": 0, "m_paysum": 0, "m_stimul": 0, "m_bonus": 0, "m_fzp": 0, "m_otpusk": 0, "m_quartbonus": 0 }, { "pname": "ИЭТО_Руководители", "cnt": 9, "paysum": 3313699.61, "stimul": 252000, "bonus": 276500, "fzp": 2155522.6399999997, "otpusk": 0, "quartbonus": 0, "m_paysum": 122729.61518518518, "m_stimul": 9333.333333333334, "m_bonus": 10240.74074074074, "m_fzp": 79834.17185185185, "m_otpusk": 0, "m_quartbonus": 0 }, { "pname": "АХП", "cnt": 50.75, "workers_cnt": 33.5, "specialist_cnt": 16.25, "head_cnt": 1, "scienceTeam_cnt": 0, "paysum": "13542450.799999999", "stimul": "697000.0", "bonus": "4025810.0", "fzp": "5756641.239999998", "otpusk": "174520.31000000003", "quartbonus": "0", "m_paysum": "88948.773727422", "m_stimul": "4577.99671592775", "m_bonus": "26442.101806239738", "m_fzp": "37810.45149425286", "m_otpusk": "1146.274614121511", "m_quartbonus": "0.0" }, { "pname": "АХП_Рабочие", "cnt": 33.5, "paysum": 7754459.669999998, "stimul": 368000, "bonus": 3000800, "fzp": 2725383.58, "otpusk": 39705.95, "quartbonus": 0, "m_paysum": 77158.80268656714, "m_stimul": 3661.6915422885572, "m_bonus": 29858.70646766169, "m_fzp": 27118.24457711443, "m_otpusk": 395.08407960199, "m_quartbonus": 0 }, { "pname": "АХП_Специалисты", "cnt": 16.25, "paysum": 5365848.21, "stimul": 284000, "bonus": 977010, "fzp": 2774707.6600000006, "otpusk": 134814.36000000002, "quartbonus": 0, "m_paysum": 110068.68123076923, "m_stimul": 5825.641025641025, "m_bonus": 20041.23076923077, "m_fzp": 56917.080205128215, "m_otpusk": 2765.4227692307695, "m_quartbonus": 0 }, { "pname": "АХП_Научные и научно-педагогические работники", "cnt": 0, "paysum": 0, "stimul": 0, "bonus": 0, "fzp": 0, "otpusk": 0, "quartbonus": 0, "m_paysum": 0, "m_stimul": 0, "m_bonus": 0, "m_fzp": 0, "m_otpusk": 0, "m_quartbonus": 0 }, { "pname": "АХП_Руководители", "cnt": 1, "paysum": 422142.92, "stimul": 45000, "bonus": 48000, "fzp": 256550, "otpusk": 0, "quartbonus": 0, "m_paysum": 140714.30666666667, "m_stimul": 15000, "m_bonus": 16000, "m_fzp": 85516.66666666667, "m_otpusk": 0, "m_quartbonus": 0 }, { "pname": "Рук.", "cnt": 17, "workers_cnt": 0, "specialist_cnt": 0, "head_cnt": 9, "scienceTeam_cnt": 8, "paysum": "18585365.21", "stimul": "1782761.61", "bonus": "30000.0", "fzp": "10325087.67", "otpusk": "1690657.78", "quartbonus": "0", "m_paysum": "364418.92568627454", "m_stimul": "34956.11", "m_bonus": "588.2352941176471", "m_fzp": "202452.6994117647", "m_otpusk": "33150.15254901961", "m_quartbonus": "0.0" }, { "pname": "Рук._Рабочие", "cnt": 0, "paysum": 0, "stimul": 0, "bonus": 0, "fzp": 0, "otpusk": 0, "quartbonus": 0, "m_paysum": 0, "m_stimul": 0, "m_bonus": 0, "m_fzp": 0, "m_otpusk": 0, "m_quartbonus": 0 }, { "pname": "Рук._Специалисты", "cnt": 0, "paysum": 0, "stimul": 0, "bonus": 0, "fzp": 0, "otpusk": 0, "quartbonus": 0, "m_paysum": 0, "m_stimul": 0, "m_bonus": 0, "m_fzp": 0, "m_otpusk": 0, "m_quartbonus": 0 }, { "pname": "Рук._Научные и научно-педагогические работники", "cnt": 8, "paysum": 10083533.3, "stimul": 578235.29, "bonus": 0, "fzp": 5481421.54, "otpusk": 1445391.68, "quartbonus": 0, "m_paysum": 420147.2208333334, "m_stimul": 24093.137083333335, "m_bonus": 0, "m_fzp": 228392.56416666668, "m_otpusk": 60224.65333333333, "m_quartbonus": 0 }, { "pname": "Рук._Руководители", "cnt": 9, "paysum": 8501831.91, "stimul": 1204526.32, "bonus": 30000, "fzp": 4843666.13, "otpusk": 245266.1, "quartbonus": 0, "m_paysum": 314882.66333333333, "m_stimul": 44612.08592592593, "m_bonus": 1111.111111111111, "m_fzp": 179395.04185185186, "m_otpusk": 9083.92962962963, "m_quartbonus": 0 }, { "pname": "Отд.№4", "cnt": 86.95, "workers_cnt": 2, "specialist_cnt": 35.35, "head_cnt": 0, "scienceTeam_cnt": 49.6, "paysum": "32381133.189999994", "stimul": "2364792.58", "bonus": "1977630.0", "fzp": "19333479.04", "otpusk": "1551460.96", "quartbonus": "0", "m_paysum": "124136.98750239598", "m_stimul": "9065.718152194748", "m_bonus": "7581.483611270844", "m_fzp": "74117.22844546674", "m_otpusk": "5947.713091815219", "m_quartbonus": "0.0" }, { "pname": "Отд.№4_Рабочие", "cnt": 2, "paysum": 650012.27, "stimul": 0, "bonus": 13000, "fzp": 379302.72, "otpusk": 0, "quartbonus": 0, "m_paysum": 108335.37833333334, "m_stimul": 0, "m_bonus": 2166.6666666666665, "m_fzp": 63217.119999999995, "m_otpusk": 0, "m_quartbonus": 0 }, { "pname": "Отд.№4_Специалисты", "cnt": 35.35, "paysum": 10301383.069999998, "stimul": 350294.12, "bonus": 899670, "fzp": 6189433.13, "otpusk": 154707.59, "quartbonus": 0, "m_paysum": 97137.03979255065, "m_stimul": 3303.1034417727483, "m_bonus": 8483.451202263082, "m_fzp": 58363.34870344176, "m_otpusk": 1458.8174446016028, "m_quartbonus": 0 }, { "pname": "Отд.№4_Научные и научно-педагогические работники", "cnt": 49.6, "paysum": 21429737.84999999, "stimul": 2014498.4600000002, "bonus": 1064960, "fzp": 12764743.189999998, "otpusk": 1396753.3699999999, "quartbonus": 0, "m_paysum": 144017.0554435483, "m_stimul": 13538.296102150538, "m_bonus": 7156.989247311827, "m_fzp": 85784.5644489247, "m_otpusk": 9386.783400537633, "m_quartbonus": 0 }, { "pname": "Отд.№4_Руководители", "cnt": 0, "paysum": 0, "stimul": 0, "bonus": 0, "fzp": 0, "otpusk": 0, "quartbonus": 0, "m_paysum": 0, "m_stimul": 0, "m_bonus": 0, "m_fzp": 0, "m_otpusk": 0, "m_quartbonus": 0 }, { "pname": "Отд.№6", "cnt": 101.5, "workers_cnt": 51, "specialist_cnt": 37.5, "head_cnt": 13, "scienceTeam_cnt": 0, "paysum": "29106930.509999994", "stimul": "2811400.0", "bonus": "1419860.0", "fzp": "17515016.33", "otpusk": "508501.14", "quartbonus": "0", "m_paysum": "95589.26275862067", "m_stimul": "9232.840722495896", "m_bonus": "4662.922824302134", "m_fzp": "57520.579080459764", "m_otpusk": "1669.9544827586208", "m_quartbonus": "0.0" }, { "pname": "Отд.№6_Рабочие", "cnt": 51, "paysum": 12761804.299999999, "stimul": 1046400, "bonus": 639460, "fzp": 7583553.15, "otpusk": 20411.37, "quartbonus": 0, "m_paysum": 83410.48562091503, "m_stimul": 6839.21568627451, "m_bonus": 4179.477124183007, "m_fzp": 49565.7068627451, "m_otpusk": 133.40764705882353, "m_quartbonus": 0 }, { "pname": "Отд.№6_Специалисты", "cnt": 37.5, "paysum": 10925768.779999997, "stimul": 1308000, "bonus": 547000, "fzp": 6508865.989999999, "otpusk": 295632.57999999996, "quartbonus": 0, "m_paysum": 97117.9447111111, "m_stimul": 11626.666666666666, "m_bonus": 4862.222222222223, "m_fzp": 57856.58657777777, "m_otpusk": 2627.8451555555553, "m_quartbonus": 0 }, { "pname": "Отд.№6_Научные и научно-педагогические работники", "cnt": 0, "paysum": 0, "stimul": 0, "bonus": 0, "fzp": 0, "otpusk": 0, "quartbonus": 0, "m_paysum": 0, "m_stimul": 0, "m_bonus": 0, "m_fzp": 0, "m_otpusk": 0, "m_quartbonus": 0 }, { "pname": "Отд.№6_Руководители", "cnt": 13, "paysum": 5419357.43, "stimul": 457000, "bonus": 233400, "fzp": 3422597.19, "otpusk": 192457.19, "quartbonus": 0, "m_paysum": 138957.8828205128, "m_stimul": 11717.948717948719, "m_bonus": 5984.615384615385, "m_fzp": 87758.9023076923, "m_otpusk": 4934.799743589743, "m_quartbonus": 0 }, { "pname": "СИСТ", "cnt": 9, "workers_cnt": 0.5, "specialist_cnt": 8, "head_cnt": 0, "scienceTeam_cnt": 0.5, "paysum": "2698078.54", "stimul": "226000.0", "bonus": "276900.0", "fzp": "1737666.42", "otpusk": "0", "quartbonus": "0", "m_paysum": "99928.83481481482", "m_stimul": "8370.37037037037", "m_bonus": "10255.555555555555", "m_fzp": "64358.015555555554", "m_otpusk": "0.0", "m_quartbonus": "0.0" }, { "pname": "СИСТ_Рабочие", "cnt": 0.5, "paysum": 79760.81, "stimul": 0, "bonus": 0, "fzp": 68884.8, "otpusk": 0, "quartbonus": 0, "m_paysum": 53173.87333333333, "m_stimul": 0, "m_bonus": 0, "m_fzp": 45923.200000000004, "m_otpusk": 0, "m_quartbonus": 0 }, { "pname": "СИСТ_Специалисты", "cnt": 8, "paysum": 2425485.8200000003, "stimul": 226000, "bonus": 276900, "fzp": 1514185, "otpusk": 0, "quartbonus": 0, "m_paysum": 101061.90916666668, "m_stimul": 9416.666666666666, "m_bonus": 11537.5, "m_fzp": 63091.041666666664, "m_otpusk": 0, "m_quartbonus": 0 }, { "pname": "СИСТ_Научные и научно-педагогические работники", "cnt": 0.5, "paysum": 192831.91, "stimul": 0, "bonus": 0, "fzp": 154596.62, "otpusk": 0, "quartbonus": 0, "m_paysum": 128554.60666666667, "m_stimul": 0, "m_bonus": 0, "m_fzp": 103064.41333333333, "m_otpusk": 0, "m_quartbonus": 0 }, { "pname": "СИСТ_Руководители", "cnt": 0, "paysum": 0, "stimul": 0, "bonus": 0, "fzp": 0, "otpusk": 0, "quartbonus": 0, "m_paysum": 0, "m_stimul": 0, "m_bonus": 0, "m_fzp": 0, "m_otpusk": 0, "m_quartbonus": 0 }, { "pname": "ПKO", "cnt": 37.75, "workers_cnt": 33.5, "specialist_cnt": 3.25, "head_cnt": 1, "scienceTeam_cnt": 0, "paysum": "7589532.1", "stimul": "188000.0", "bonus": "734520.0", "fzp": "4690431.03", "otpusk": "49566.3", "quartbonus": "0", "m_paysum": "67015.73598233995", "m_stimul": "1660.0441501103753", "m_bonus": "6485.827814569537", "m_fzp": "41416.60953642384", "m_otpusk": "437.67152317880794", "m_quartbonus": "0.0" }, { "pname": "ПKO_Рабочие", "cnt": 33.5, "paysum": 6116944.629999999, "stimul": 113000, "bonus": 561000, "fzp": 3855303.16, "otpusk": 49566.3, "quartbonus": 0, "m_paysum": 60865.120696517406, "m_stimul": 1124.3781094527362, "m_bonus": 5582.089552238806, "m_fzp": 38361.22547263682, "m_otpusk": 493.19701492537314, "m_quartbonus": 0 }, { "pname": "ПKO_Специалисты", "cnt": 3.25, "paysum": 843830.69, "stimul": 0, "bonus": 173520, "fzp": 469044.03, "otpusk": 0, "quartbonus": 0, "m_paysum": 86546.73743589743, "m_stimul": 0, "m_bonus": 17796.923076923078, "m_fzp": 48107.08, "m_otpusk": 0, "m_quartbonus": 0 }, { "pname": "ПKO_Научные и научно-педагогические работники", "cnt": 0, "paysum": 0, "stimul": 0, "bonus": 0, "fzp": 0, "otpusk": 0, "quartbonus": 0, "m_paysum": 0, "m_stimul": 0, "m_bonus": 0, "m_fzp": 0, "m_otpusk": 0, "m_quartbonus": 0 }, { "pname": "ПKO_Руководители", "cnt": 1, "paysum": 628756.78, "stimul": 75000, "bonus": 0, "fzp": 366083.84, "otpusk": 0, "quartbonus": 0, "m_paysum": 209585.59333333335, "m_stimul": 25000, "m_bonus": 0, "m_fzp": 122027.94666666667, "m_otpusk": 0, "m_quartbonus": 0 }];
		console.log(' before sorted ' + JSON.stringify(stat_new));

		for (bar in stat_new) {
  for (i in stat_new[bar]) {

    // console.log('for (i in stat_new[bar]) ' + i + ' = ' + stat_new[bar][i] + ' checknan ' + isNaN(stat_new[bar][i]));
    if (i.indexOf('paysum') >= 0) {
      if (stat_new[bar][i] == 0){

      }
    }
    if (i.indexOf('pname') >= 0) {
      var pname = stat_new[bar][i];
      if (pname.indexOf('_')>=0) {
        var pname = pname.split('_');
        if (pname[1].trim().length > 1) {
          stat_new[bar][i] = pname[0]+' '+ pname[1];
        }
      } else{
        stat_new[bar][i] = pname+'*';
      }
    }
    if (!isNaN(stat_new[bar][i])) {
      stat_new[bar][i] = parseInt(stat_new[bar][i]);
    }
    // console.log('for (i in stat_new[bar]) ' + i + ' = ' + stat_new[bar][i] + ' checknan ' + isNaN(stat_new[bar][i]));
    if (i.indexOf('paysum') >= 0) {
      if (stat_new[bar][i] == 0) {
		var ttt = stat_new[bar];
        // console.log('delete stat_new[bar][pname]; ' + JSON.stringify( stat_new[bar] ));
        // console.log('delete ttt[pname]; ' + JSON.stringify( ttt));
        // delete stat_new[bar]['pname'];
        // delete ttt['pname'];
        // console.log('after delete stat_new[bar][pname]; ' + JSON.stringify(stat_new[bar])+' '+JSON.stringify(ttt));
        // console.log('after delete ttt[pname]; ' + JSON.stringify(ttt));

      }
    }

  }
}
stat_new.sort(function(a, b) {
	// console.log(JSON.stringify(a)+' '+JSON.stringify(b))
	let res = 0;
	if (a.pname < b.pname) {
		res = 1;
	} else
	{
		res = -1;
	}
    return res;
});
console.log(' sorted ' + JSON.stringify(stat_new));



</script>

    <div class="graphContaner1" style="width:1300px;height:3000px" id="divisions_stat_new"  style="margin-top:10px;color:black;border: solid 3px black">
    </div>
    <script>
    console.log("Chart 7 new bis. Подразделения. Распределение по средним начислениям по видам ");
    var chart = am4core.create("divisions_stat_new", am4charts.XYChart);

    chart.data = stat_new;
    console.log(JSON.stringify(stat_new));
    chart.exporting.menu = new am4core.ExportMenu();
    var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());
    

    categoryAxis.dataFields.category = "pname";
    categoryAxis.renderer.grid.template.location = 0;

    var valueAxis = chart.xAxes.push(new am4charts.ValueAxis());
    valueAxis.renderer.labels.template.disabled = true;
    valueAxis.min = 0;
    valueAxis.numberFormatter = new am4core.NumberFormatter();
    valueAxis.numberFormatter.numberFormat = "#.#";
    valueAxis.title.text = "Сотрудников";
    valueAxis.extraMax =  0.1;
    valueAxis.calculateTotals = true;


    // Create series
    function createSeries(field, name, s_color) {

        // Set up series
        var series = chart.series.push(new am4charts.ColumnSeries());
        if(typeof s_color === "undefined")
            {} else
             {
                series.fill =  s_color;
             };
        series.name = name;
        
        series.dataFields.valueX = field;
        series.dataFields.categoryY = "pname";
        series.sequencedInterpolation = true;
        series.calculatePercent = true;
        //series.cursorTooltipEnabled = false;

        // Make it stacked
        series.stacked = true;

        // Configure columns
        series.columns.template.width = am4core.percent(40);
        

        // Configure legend
        series.legendSettings.itemValueText = " {valueX.formatNumber('#')}т.р.";

        // Add label
        var labelBullet = series.bullets.push(new am4charts.LabelBullet());
        labelBullet.label.text = "[font-size:8px]{valueX.formatNumber('#')}т.р.";
        labelBullet.locationX = 0.5;
        labelBullet.label.fill = am4core.color("#fff");

        return series;
    }
    chart.cursor = new am4charts.XYCursor();
    chart.cursor.behavior = "none";
    createSeries("m_fzp", "ФЗП");
    createSeries("m_stimul", "Стимул");
    createSeries("m_bonus", "Премия");
    createSeries("m_quartbonus", "кв.Премия");
    createSeries("m_otpusk", "Отпуск");
    createSeries("m_prochee", "Прочее");
    createSeries("m_greyzone", "Доплаты вне категорий",'red');

    var totalSeries = chart.series.push(new am4charts.ColumnSeries());
    totalSeries.dataFields.valueX = "none";
    totalSeries.dataFields.categoryY = "category";
    totalSeries.stacked = true;
    totalSeries.hiddenInLegend = true;
    totalSeries.columns.template.strokeOpacity = 90;

    var totalBullet = totalSeries.bullets.push(new am4charts.LabelBullet());
    totalBullet.dy = -20;
    totalBullet.label.text = "{valueY.total}";
    totalBullet.label.hideOversized = false;
    totalBullet.label.fontSize = 12;
    totalBullet.label.background.fill = totalSeries.stroke;
    totalBullet.label.background.fillOpacity = 0.0;
    totalBullet.label.padding(-5, -10, -5, -10);

    chart.legend = new am4charts.Legend();
    </script>



[end]


[total table]
    $GET_DATA [get full]
    $GET_DATA [get Totals] 
[end]





[div_dist]
  SELECT CONCAT('"',post,'":[', count(post),',', SUM(stavka),'],') AS post_dist FROM sotrudniki sotr 
    $INCLUDE utils.cfg[criteria] 
       AND sotr.TopParent_Name ='#tpn#' ??tpn
       AND sotr.subTopParent_Name ='#stpn#' ??stpn
and  
      ( 
            (sotr.datauvolen > '#SELYEAR#-#end_month#-01' or sotr.datauvolen is null) 
            and (sotr.okonch_rab > '#SELYEAR#-#end_month#-01' or sotr.okonch_rab is null) 
            and  (sotr.nachalo_rab <'#SELYEAR#-#start_month#-01')
       )     

   GROUP BY post ;

SELECT group_concat(tmpval) cat_dist FROM 
(
  SELECT CONCAT('"',sotr.category,'":',  SUM(stavka)) AS tmpval FROM sotrudniki sotr 
    $INCLUDE utils.cfg[criteria] 
       AND sotr.TopParent_Name ='#tpn#' ??tpn
       AND sotr.subTopParent_Name ='#stpn#' ??stpn
and  
      ( 
            (sotr.datauvolen > '#SELYEAR#-#end_month#-01' or sotr.datauvolen is null) 
            and (sotr.okonch_rab > '#SELYEAR#-#end_month#-01' or sotr.okonch_rab is null) 
            and  (sotr.nachalo_rab <'#SELYEAR#-#start_month#-01')
       )     
   GROUP BY sotr.category 
) aaa
[end]

[неучтенные виды расчетов]
    
    <table border=1 style="padding:3px;margin-bottom:10px" class=rtbl>
    <tr>
        <th colspan=0>
            <H3>Таб. 1 Доплаты вне категорий (ФИЛЬТРЫ РАБОТАЮТ !!!!)</H3>
        </th>
    </tr>
    <tr>
    <th>
    Вид рачета
    </th>
    <th>
    Сумима за период<b> т.р.
    </th>
    </tr>
    #pay_missed_1c#
</table>

[end]

[charts 1-9]
    <script type="text/javascript">


        console.log("create chart 5 sssssss");

 
    var chart3_0 = am4core.makeChart("age_hist_ppls_chart", {
        width:1400,
            "titles": [{
			"id": "1",
                            text: "Распределение количсетва сотрудников по возрастам. Кол-во ставок.\nСредний возраст=#mean_age#"   	}], 
    "rotate": false,
    "type": "serial",
	"theme": "light",
    "legend": {
        "horizontalGap": 1,
        "maxColumns": 1,
        "position": "bottom",
		"useGraphSettings": true,
		"markerSize": 5
    },
    "dataProvider": #d_age#,
    "graphs": [
{
        "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
        "fillAlphas": 0.8,
        "labelText": "[[value]]",
        "lineAlpha": 0.3,
        "title": "Ставок",
        "type": "column",
	"lineColor": "#0000FF",
	"color": "#7777FF",
        "valueField": "cnt"
    }, 
],
    "categoryField": "pname",
    "export": {
    	"enabled": true
     }
});
    </script>





    <script type="text/javascript">


        console.log("create chart 7 sssssss");

var age_chart = am4core.makeChart("age_chart", {
    "rotate": true,
    "type": "serial",
	"theme": "light",
    "legend": {
        "horizontalGap": 10,
        "maxColumns": 1,
        "position": "bottom",
		"useGraphSettings": true,
		"markerSize": 10
    },
    "dataProvider": #d_otdelenie_age_salary#, ??!otdelenie
    "dataProvider": #d_otdel_age_salary#, ??otdelenie

    "valueAxes": [
		{
			"id": "1",
			"title": ""
		}
        ],

    "graphs": [
     {
            minimum : 0,

        "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
        "fillAlphas": 0.8,
        "labelText": "[[value]]",
        "lineAlpha": 0.3,
        "title": "Средниее начисление",
        "type": "column",
		"color": "#000000",
        "valueField": "v1"
    }, {
            minimum : 0,

        "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
        "fillAlphas": 0.8,
        "labelText": "[[value]]",
        "lineAlpha": 0.3,
        "title": "Средний возраст",
        "type": "column",
		"color": "#000000",
        "valueField": "v2"
    }, ],
    "categoryField": "pname",
    "categoryAxis": {
        "gridPosition": "start",
        "axisAlpha": 0,
        "gridAlpha": 0,
        "position": "left"
    },
    "export": {
    	"enabled": true
     }

});
    </script>

<script type="text/javascript">
        console.log("create chart 8 sssssss");
var chart5_0 = am4core.makeChart("category_chart", {
    "rotate": true,
    "titles": [{
                "id": "1",
                    text: "Распределение по категориям"   	}],
    "type": "serial",
	"theme": "light",
    "legend": {
        "horizontalGap": 10,
        "maxColumns": 1,
        "position": "bottom",
		"useGraphSettings": true,
		"markerSize": 10
    },
    "dataProvider": #d_category#,
    "valueAxes": [{
            minimum : 0,

            "id":"m_pay",
            "axisColor": "#FF6600",
            "axisThickness": 2,
            "axisAlpha": 1,
            "titleFontSize": 10,
            "position": "left"
        }, {
            minimum : 0,

            "titleFontSize": 10,
            "id":"m_age",
            "axisColor": "#1111cc",
            "axisThickness": 2,
            "axisAlpha": 1,
            "position": "right"
        }, {
            minimum : 0,

            "id":"cnt",
            "axisColor": "#B0DE09",
            "axisThickness": 2,
            "gridAlpha": 0,
            "offset": 50,
            "axisAlpha": 1,
            "position": "left"
        }],
    "graphs": [
$IF staff_report_fin
     {
        "valueAxis": "m_pay",
        "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
        "fillAlphas": 0.8,
        "labelText": "[[value]]т.р.",
        "lineAlpha": 0.3,
        "title": "Средний доход",
        "type": "column",
	"lineColor": "#FF6600",
	"color": "#FF6600",
        "valueField": "m_pay"
    }, 
$EIF 
{
        "valueAxis": "m_age",
        "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
        "fillAlphas": 0.8,
        "labelText": "[[value]]лет",
        "lineAlpha": 0.3,
        "title": "Средний возраст",
        "type": "column",
	"lineColor": "#0000FF",
	"color": "#7777FF",
        "valueField": "m_age"
    }, 
{
        "valueAxis": "cnt",
        "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
        "fillAlphas": 0.8,
        "labelText": "[[value]]",
        "lineAlpha": 0.3,
        "title": "Ставок",
        "type": "column",
	"lineColor": "#B0DE09",
	"color": "#B0DE09",
        "valueField": "cnt"
    }, 
],
    "categoryField": "pname",
    "categoryAxis": {
        "gridPosition": "start",
        "axisAlpha": 0,
        "gridAlpha": 0,
        "position": "left"
    },
    "export": {
    	"enabled": true
     }

});
    </script>

<script type="text/javascript">
        console.log("create chart 8 - post sssssss");
var chart8_1 = am4core.makeChart("post_chart", {
    "rotate": true,
    "titles": [{
                "id": "1",
                    text: "Распределение по Должностям"   	}],
    "type": "serial",
	"theme": "light",
    "legend": {
        "horizontalGap": 10,
        "maxColumns": 1,
        "position": "bottom",
		"useGraphSettings": true,
		"markerSize": 10
    },
    "dataProvider": #d_post#,
    "valueAxes": [{
            minimum : 0,

            "id":"m_pay",
            "axisColor": "#FF6600",
            "axisThickness": 2,
            "axisAlpha": 1,
            "titleFontSize": 10,
            "position": "left"
        }, {
            minimum : 0,

            "titleFontSize": 10,
            "id":"m_age",
            "axisColor": "#1111cc",
            "axisThickness": 2,
            "axisAlpha": 1,
            "position": "right"
        }, {
            minimum : 0,

            "id":"cnt",
            "axisColor": "#B0DE09",
            "axisThickness": 2,
            "gridAlpha": 0,
            "offset": 50,
            "axisAlpha": 1,
            "position": "left"
        }],
    "graphs": [
     {
        "valueAxis": "m_pay",
        "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
        "fillAlphas": 0.8,
        "labelText": "[[value]]т.р.",
        "lineAlpha": 0.3,
        "title": "Средний доход",
        "type": "column",
	"lineColor": "#FF6600",
	"color": "#FF6600",
        "valueField": "m_pay"
    }, {
        "valueAxis": "m_age",
        "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
        "fillAlphas": 0.8,
        "labelText": "[[value]]лет",
        "lineAlpha": 0.3,
        "title": "Средний возраст",
        "type": "column",
	"lineColor": "#0000FF",
	"color": "#7777FF",
        "valueField": "m_age"
    }, 
{
        "valueAxis": "cnt",
        "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
        "fillAlphas": 0.8,
        "labelText": "[[value]]",
        "lineAlpha": 0.3,
        "title": "Ставок",
        "type": "column",
	"lineColor": "#B0DE09",
	"color": "#B0DE09",
        "valueField": "cnt"
    }, 
],
    "categoryField": "pname",
    "categoryAxis": {
        "gridPosition": "start",
        "axisAlpha": 0,
        "gridAlpha": 0,
        "position": "left"
    },
    "export": {
    	"enabled": true
     }

});
    </script>



















    <script type="text/javascript">

        console.log("create chart 9 sssssss");

var chart4 = am4core.makeChart("divisions_age_pay_cnt_chart", {
    "rotate": true,
    "type": "serial",
	"theme": "light",
            "titles": [{
			"id": "1",
                            text: "Подраздедения.  Количество, средний возраст."   	}],    ??!staff_report_fin
                            text: "Подраздедения.  Количество, средний возраст и оплата"   	}], ??staff_report_fin
    "legend": {
        "horizontalGap": 10,
        "maxColumns": 1,
        "position": "bottom",
		"useGraphSettings": true,
		"markerSize": 10
    },
    "dataProvider": #d_otdelenie_age_salary#, ??!otdelenie
    "dataProvider": #d_otdel_age_salary#, ??otdelenie
    "valueAxes": [{
            minimum : 0,
            "id":"v1",
            "axisColor": "#FF6600",
            "axisThickness": 2,
            "axisAlpha": 1,
            "titleFontSize": 10,
            "position": "left"
        }, {
            minimum : 0,
            "titleFontSize": 10,
            "id":"v2",
            "axisColor": "#1111cc",
            "axisThickness": 2,
            "axisAlpha": 1,
            "position": "right"
        }, {
            minimum : 0,
            "id":"v3",
            "axisColor": "#B0DE09",
            "axisThickness": 2,
            "gridAlpha": 0,
            "offset": 50,
            "axisAlpha": 1,
            "position": "left"
        }],
    "graphs": [
$IF steff_report_fin
     {
        "valueAxis": "v1",
        "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
        "fillAlphas": 0.8,
        "labelText": "[[value]]т.р.",
        "lineAlpha": 0.3,
        "title": "Среднее начисление",
        "type": "column",
	"lineColor": "#FF6600",
	"color": "#FF6600",
        "valueField": "v1"
    }, 
$EIF 
{
        "valueAxis": "v2",
        "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
        "fillAlphas": 0.8,
        "labelText": "[[value]]лет",
        "lineAlpha": 0.3,
        "title": "Средний возраст",
        "type": "column",
	"lineColor": "#0000FF",
	"color": "#7777FF",
        "valueField": "v2"
    }, 
{
        "valueAxis": "v3",
        "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
        "fillAlphas": 0.8,
        "labelText": "[[value]]",
        "lineAlpha": 0.3,
        "title": "Сотрудников",
        "type": "column",
	"lineColor": "#B0DE09",
	"color": "#B0DE09",
        "valueField": "v3"
    }, 
],
    "categoryField": "pname",
    "categoryAxis": {
        "gridPosition": "start",
        "axisAlpha": 0,
        "gridAlpha": 0,
        "position": "left"
    },
    "export": {
    	"enabled": true
     }

});




    </script>
$INCLUDE [new categogy age]

$INCLUDE [age cat hist]
[end]


var pred_name='', newel='';
var cur_sum = 0;
for (i in d_age_new){
    if( (pred_name != d_age_new[i].pname)){
        if (newel!=''){

            for (i1 in newel) {
                if (i1.indexOf('pname')<0){
                    newel[i1] = ((newel[i1] * 100)/cur_sum).toFixed(2); 
                }
            }
            newel.total = cur_sum;
//            console.log(d_age_new[i].pname + '!!!Stack 2 '+i1+' '+d_age_new[i][i1]+' '+cur_sum);
            age_new.push(newel);
        };
        cur_sum = 0;
        newel = {};
    }
    for (i1 in d_age_new[i]) {
        if (i1.indexOf('pname')<0){
            cur_sum += (+d_otdelenie_category[i][i1]);
//            console.log(d_age_new[i].pname + '!!!Stack 2 '+i1+' '+d_age_new[i][i1]+' '+cur_sum);
        }
    }
    pred_name = d_age_new[i].pname;
    Object.assign(newel,d_otdelenie_category[i]);
    
}

for (i1 in newel) {
    if (i1.indexOf('pname')<0){
        newel[i1] = ((newel[i1] * 100)/cur_sum).toFixed(2); 
    }
}
newel.total = cur_sum;

age_new.push(newel);
console.log('Last EL '+JSON.stringify(newel));
console.log(' age_new '+JSON.stringify(age_new));




    if( (pred_name != d_age_new[i].pname)){
        if (newel!=''){

            for (i1 in newel) {
                if (i1.indexOf('pname')<0){
                    newel[i1] = ((newel[i1] * 100)/cur_sum).toFixed(2); 
                }
            }
            newel.total = cur_sum;
//            console.log(d_age_new[i].pname + '!!!Stack 2 '+i1+' '+d_age_new[i][i1]+' '+cur_sum);
            age_new.push(newel);
        };
        cur_sum = 0;
        newel = {};
    }
    for (i1 in d_age_new[i]) {
        if (i1.indexOf('pname')<0){
            cur_sum += (+d_otdelenie_category[i][i1]);
//            console.log(d_age_new[i].pname + '!!!Stack 2 '+i1+' '+d_age_new[i][i1]+' '+cur_sum);
        }
    }
    pred_name = d_age_new[i].pname;
    Object.assign(newel,d_otdelenie_category[i]);
    



[new categogy age]
<script type="text/javascript">
        console.log("create chart NEW   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ");




var d_age_new = [#d_age_new#];
var age_new = [];
var pred_name='', newel='';
var cur_sum = 0;

var pred_name='', newel='';
var cur_sum = 0;
for (i in d_age_new){
    if( (pred_name != d_age_new[i].pname)){
        if (newel!=''){

            for (i1 in newel) {
                if (i1.indexOf('pname')<0){
                    newel['p_'+i1] = ((newel[i1] * 100)/cur_sum).toFixed(2); 
                }
            }
            newel.total = cur_sum;
//            console.log(d_age_new[i].pname + '!!!Stack 2 '+i1+' '+d_age_new[i][i1]+' '+cur_sum);
            age_new.push(newel);
        };
        cur_sum = 0;
        newel = {};
    }
    for (i1 in d_age_new[i]) {
        if (i1.indexOf('pname')<0){
            cur_sum += (+d_age_new[i][i1]);
//            console.log(d_age_new[i].pname + '!!!Stack 2 '+i1+' '+d_age_new[i][i1]+' '+cur_sum);
        }
    }
    pred_name = d_age_new[i].pname;
    Object.assign(newel,d_age_new[i]);

}

for (i1 in newel) {
    if (i1.indexOf('pname')<0){
        newel['p_'+i1] = ((newel[i1] * 100)/cur_sum).toFixed(2); 
    }
}
newel.total = cur_sum;

age_new.push(newel);
console.log('Last EL '+JSON.stringify(newel));
console.log(' age_new '+JSON.stringify(age_new));

var chart5_0 = am4core.makeChart("age_hist_salary_chart", {
    "rotate": false,
    "titles": [{
                "id": "1",
                    text: "Распределение ставок по возрастам и категориям"   	}],
    "type": "serial",
	"theme": "light",
    "legend": {
        "horizontalGap": 1,
        "maxColumns": 1,
        "position": "bottom",
		"useGraphSettings": true,
		"markerSize": 10
    },
    "dataProvider": age_new,
    "valueAxes": [{
            minimum : 0,

            "id":"cnt",
            "axisColor": "##000000",
            "axisThickness": 4,
            "axisAlpha": 1,
            "titleFontSize": 10,
            "position": "left"
        }],
    "graphs": [
     {
        "valueAxis": "cnt",
        "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
        "fillAlphas": 1,
        "labelText": "[[value]]",
        "lineAlpha": 0.3,
        "title": "Рабочие",
        "type": "column",
	"lineColor": color_tbl[0],
	"color": "##FF0000",
        "valueField": "Рабочие"
    }, {
        "valueAxis": "cnt",
        "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
        "fillAlphas": 1.8,
        "labelText": "[[value]]",
        "lineAlpha": 1,
        "title": "Научные и научно-педагогические работники",
        "type": "column",
	"lineColor": color_tbl[1],
	"color": "##0000FF",
        "valueField": "Научные и научно-педагогические работники"
    }, 
{
        "valueAxis": "cnt",
        "balloonText": "<b>[[title]]</b><br><span style='font-size:14px'>[[category]]: <b>[[value]]</b></span>",
        "fillAlphas": 1,
        "labelText": "[[value]]",
        "lineAlpha": 1,
        "title": "Специалисты",
        "type": "column",
	"lineColor": color_tbl[2],
	"color": "##13450E",
        "valueField": "Специалисты"
    }, 
],
    "categoryField": "pname",
    "categoryAxis": {
        "gridPosition": "start",
        "axisAlpha": 0,
        "gridAlpha": 0,
        "position": "left"
    },
    "export": {
    	"enabled": true
     }

});
    </script>
[end]

[age cat hist]

$SET_PARAMETERS X=Y
$SET_PARAMETERS Y=X
$SET_PARAMETERS x=y
$SET_PARAMETERS y=x
    <script>
            console.log("create age cat hist @@@@@@@@@@@@@@@@@@ sssssss");

    var chart = am4core.create("age_cat_stack_chart", am4charts.XYChart);



    chart.data = age_new;
    chart.exporting.menu = new am4core.ExportMenu();
    var categoryAxis = chart.#y#Axes.push(new am4charts.CategoryAxis());
    console.log('!!!Stack 3');

    categoryAxis.dataFields.category = "pname";
    categoryAxis.renderer.grid.template.location = 0;
    console.log('!!!Stack 4');

    var valueAxis = chart.#x#Axes.push(new am4charts.ValueAxis());
    valueAxis.renderer.labels.template.disabled = false;
    valueAxis.min = 0;
    valueAxis.numberFormatter = new am4core.NumberFormatter();
    valueAxis.numberFormatter.numberFormat = "#.#";
    valueAxis.title.text = "Сотрудников";
    valueAxis.extraMax =  0.1;
    valueAxis.calculateTotals = true;
    console.log('!!!Stack 5');


    // Create series
    function createSeries(field, name, s_color) {

        // Set up series
        var series = chart.series.push(new am4charts.ColumnSeries());
        if(typeof s_color === "undefined")
            {} else
             {
                series.fill =  am4core.color(s_color);
             };
        series.name = name;
        console.log('Create SERIES '+series.name +' '+series.tabindex);
        
        series.dataFields.value#X# = field;
        series.dataFields.category#Y# = "pname";
        series.sequencedInterpolation = true;
        series.calculatePercent = true;
        //series.cursorTooltipEnabled = false;

        // Make it stacked
        series.stacked = true;

        // Configure columns
        series.columns.template.width = am4core.percent(70);
        //series.columns.template.tooltipText = "{name} [font-size:10px] {valueY.totalPercent.formatNumber('##.0')}% [/][font-size:10px]({value#Y#}т.р.)";

        // Configure legend
//        series.legendSettings.itemValueText = " {value#X#.totalPercent.formatNumber('##.0')}";
          series.legendSettings.itemValueText = " {value#X#.formatNumber('##.0')}";

        // Add label
        var labelBullet = series.bullets.push(new am4charts.LabelBullet());
//        labelBullet.label.text = "[font-size:8px]{value#X#.totalPercent.formatNumber('##.0')}";
        labelBullet.label.text = "[font-size:8px]{value#X#.formatNumber('#.0')}";
        labelBullet.location#X# = 0.5;
        labelBullet.label.fill = am4core.color("##fff");

        return series;
    }
    chart.cursor = new am4charts.XYCursor();
    chart.cursor.behavior = "none";
    createSeries("Рабочие", "Рабочие", color_tbl[0]);
    createSeries("Научные и научно-педагогические работники", "Научные и научно-педагогические работники", color_tbl[1]);
    createSeries("Специалисты", "Специалисты",  color_tbl[2]);
    createSeries("Руководители", "Руководители",  color_tbl[3]);

    var totalSeries = chart.series.push(new am4charts.ColumnSeries());
    totalSeries.dataFields.value#X# = "none";
    totalSeries.dataFields.category#Y# = "category";
    totalSeries.stacked = true;
    totalSeries.hiddenInLegend = true;
    totalSeries.columns.template.strokeOpacity = 90;

    var totalBullet = totalSeries.bullets.push(new am4charts.LabelBullet());
    totalBullet.dy = -20;
    totalBullet.label.text = "{value#Y#.total}";
    totalBullet.label.hideOversized = false;
    totalBullet.label.fontSize = 12;
    totalBullet.label.background.fill = totalSeries.stroke;
    totalBullet.label.background.fillOpacity = 0.0;
    totalBullet.label.padding(-5, -10, -5, -10);

    chart.legend = new am4charts.Legend();
    </script>
[end]












[new stack chart]



<script>
        console.log("create chart 10 sssssss");

var d_otdelenie_category = #d_otdelenie_category#;
var otd_cat = [];
var pred_name='', newel='';
var cur_sum = 0;
for (i in d_otdelenie_category){
    if( (pred_name != d_otdelenie_category[i].pname)){
        if (newel!=''){

            for (i1 in newel) {
                if (i1.indexOf('pname')<0){
                    newel[i1] = ((newel[i1] * 100)/cur_sum).toFixed(2); 
                }
            }
            newel.total = cur_sum;
            console.log(d_otdelenie_category[i].pname + '!!!Stack 2 '+i1+' '+d_otdelenie_category[i][i1]+' '+cur_sum);
            otd_cat.push(newel);
        };
        cur_sum = 0;
        newel = {};
    }
    for (i1 in d_otdelenie_category[i]) {
        if (i1.indexOf('pname')<0){
            cur_sum += (+d_otdelenie_category[i][i1]);
            console.log(d_otdelenie_category[i].pname + '!!!Stack 2 '+i1+' '+d_otdelenie_category[i][i1]+' '+cur_sum);
        }
    }
    pred_name = d_otdelenie_category[i].pname;
    Object.assign(newel,d_otdelenie_category[i]);
    
}

for (i1 in newel) {
    if (i1.indexOf('pname')<0){
        newel[i1] = ((newel[i1] * 100)/cur_sum).toFixed(2); 
    }
}
newel.total = cur_sum;
$SET_PARAMETERS X=Y
$SET_PARAMETERS Y=X
$SET_PARAMETERS x=y
$SET_PARAMETERS y=x

otd_cat.push(newel);
console.log('!!!Stack 1'+JSON.stringify(newel));
var chart = am4core.create("divisions_chart", am4charts.XYChart);
console.log('!!!Stack 4');

chart.data = otd_cat;
console.log('===========otd_cat '+  JSON.stringify(otd_cat));
chart.exporting.menu = new am4core.ExportMenu();

console.log('!!!Stack 2');

var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());
//categoryAxis.renderer.labels.template.rotation = 270;
console.log('!!!Stack 3');

categoryAxis.dataFields.category = "pname";
categoryAxis.renderer.grid.template.location = 0;
console.log('!!!Stack 4');

var valueAxis = chart.xAxes.push(new am4charts.ValueAxis());
//valueAxis.renderer.inside = true;
valueAxis.renderer.labels.template.disabled = true;
valueAxis.min = 0;
valueAxis.numberFormatter = new am4core.NumberFormatter();
valueAxis.numberFormatter.numberFormat = "#.#";
valueAxis.title.text = "Сотрудников";
valueAxis.extraMax =  0.1;
valueAxis.calculateTotals = true;
console.log('!!!Stack 5');


// Create series
function createSeries(field, name, s_color) {

    // Set up series
    var series = chart.series.push(new am4charts.ColumnSeries());
        if(typeof s_color === "undefined")
            {} else
             {
                series.fill =  am4core.color(s_color);
             };

    series.name = name;
    console.log('Create SERIES '+series.name +' '+series.tabindex);

    series.dataFields.valueX = field;
    series.dataFields.categoryY = "pname";
    series.sequencedInterpolation = true;
    series.calculatePercent = true;
    //series.cursorTooltipEnabled = false;

    // Make it stacked
    series.stacked = true;

    // Configure columns
  // [font-size:14px]
    series.columns.template.width = am4core.percent(70);
    //series.columns.template.tooltipText = "{name} [font-size:10px] {valueY.totalPercent.formatNumber('##.0')}% [/][font-size:10px]({valueY}т.р.)";

    // Configure legend
    series.legendSettings.itemValueText = " {valueX.totalPercent.formatNumber('##.0')}%";

    // Add label
    var labelBullet = series.bullets.push(new am4charts.LabelBullet());
    labelBullet.label.text = "[font-size:8px]{valueX.totalPercent.formatNumber('##.0')}%";
    labelBullet.locationX = 0.5;
    labelBullet.label.fill = am4core.color("##fff");

    return series;
}

//"#fzp#", "#bonusfzp#" "#quartbonus#" "#stip#" "#prochee#", "#stimul#" "#otpusk#", "category":"#:monthKvartal(prm('qMONTH'))#", "none": 0 },
chart.cursor = new am4charts.XYCursor();
chart.cursor.behavior = "none";
createSeries("Рабочие", "Рабочие", color_tbl[0]);
createSeries("Руководители", "Руководители", color_tbl[3]);
createSeries("Специалисты", "Специалисты", color_tbl[2]);
createSeries("Научные и научно-педагогические работники", "Научные и научно-педагогические работники", color_tbl[1]);
//createSeries("test", "test");
// Create series for total
var totalSeries = chart.series.push(new am4charts.ColumnSeries());
totalSeries.dataFields.valueX = "none";
totalSeries.dataFields.categoryY = "category";
totalSeries.stacked = true;
totalSeries.hiddenInLegend = true;
totalSeries.columns.template.strokeOpacity = 90;

var totalBullet = totalSeries.bullets.push(new am4charts.LabelBullet());
totalBullet.dy = -20;
totalBullet.label.text = "{valueY.total}";
totalBullet.label.hideOversized = false;
totalBullet.label.fontSize = 12;
totalBullet.label.background.fill = totalSeries.stroke;
totalBullet.label.background.fillOpacity = 0.0;
totalBullet.label.padding(-5, -10, -5, -10);

// Legend
chart.legend = new am4charts.Legend();
</script>

[end]


[divisions_fin_chart]
[end]



[divisions_mean_chart]

[end]











[get full]

    select CONCAT('"',
	 id,'"',':{"pid":', pid,',',
	 '"name":"',str.short_name,'"},')
    as d_topdivs
    from  struktura str
    WHERE pid=#LAB_ID#
    AND VIEW1=1;


    select CONCAT('"',
	 sotr.tab_n,'"',
	 ':{"tpcode":', sotr.TopParent_code,
	 ',"stpcode":', sotr.subTopParent_code, 
	 ',"category":"', sotr.category,
	 '","post":"', sotr.post,
	 '","age":',YEAR(current_date)-YEAR(sotr.dr) ,
	 ',"stavka":', sotr.stavka,
	 '},')
    as d_sotr
    from sotrudniki sotr
    $INCLUDE utils.cfg[criteria] 
and  
      ( 
            (sotr.datauvolen > '#SELYEAR#-#end_month#-01' or sotr.datauvolen is null) 
            and (sotr.okonch_rab > '#SELYEAR#-#end_month#-01' or sotr.okonch_rab is null) 
            and  (sotr.nachalo_rab <'#SELYEAR#-#start_month#-01')
       )     

    ;

    select concat("{ pname:'",sotr.TopParent_Name,"','",
    category,
    "':",count(sotr.TopParent_Name), 
    "},")
    as d_otdelenie_category
    from sotrudniki sotr
    $INCLUDE utils.cfg[criteria] 
and  
      ( 
            (sotr.datauvolen > '#SELYEAR#-#end_month#-01' or sotr.datauvolen is null) 
            and (sotr.okonch_rab > '#SELYEAR#-#end_month#-01' or sotr.okonch_rab is null) 
            and  (sotr.nachalo_rab <'#SELYEAR#-#start_month#-01')
       )     

    group by sotr.TopParent_Name, category
    ORDER BY sotr.TopParent_Name;






   select concat("{ pname:'",sotr.TopParent_Name,"'",  
    Средняя зарплата ??
        ", v1:0",
    Средний возраст ??
        ", v2:",  round( sum(((#SELYEAR#-year(sotr.dr)))) div count(sotr.TopParent_Name),0) ,
    Всего дюдей ??
        ", v3:",count(sotr.TopParent_Name),
        "},") 
        as d_otdelenie_age_salary
    from sotrudniki sotr
    $INCLUDE utils.cfg[criteria] 
and  
      ( 
            (sotr.datauvolen > '#SELYEAR#-#end_month#-01' or sotr.datauvolen is null) 
            and (sotr.okonch_rab > '#SELYEAR#-#end_month#-01' or sotr.okonch_rab is null) 
            and  (sotr.nachalo_rab <'#SELYEAR#-#start_month#-01')
       )     

    group by sotr.TopParent_Name
 ;

   select concat("{ pname:'",sotr.TopParent_Name,"'",  
    Средняя зарплата ??
        ", v1:0",
    Средний возраст ??
        ", v2:",  round( sum(((#SELYEAR#-year(sotr.dr)))) div count(sotr.TopParent_Name),0) ,
    Всего дюдей ??
        ", v3:",count(sotr.TopParent_Name),
        "},") 
        as d_otdelenie_age_salary_new
    from sotrudniki sotr
    $INCLUDE utils.cfg[criteria] 
and  
      ( 
            (sotr.datauvolen > '#SELYEAR#-#end_month#-01' or sotr.datauvolen is null) 
            and (sotr.okonch_rab > '#SELYEAR#-#end_month#-01' or sotr.okonch_rab is null) 
            and  (sotr.nachalo_rab <'#SELYEAR#-#start_month#-01')
       )     

    group by sotr.TopParent_Name
 ;





   select concat("{ pname:'",
       (select short_name from struktura where id=subTopParent_code),
       subTopParent_code, ??
    "'",  
    Средняя зарплата ??
        ", v1:0", 
    Средний возраст ??
        ", v2:",sum(((#SELYEAR#-year(sotr.dr)))) div count(sotr.subTopParent_code),
    Всего дюдей ??
        ", v3:",count(sotr.subTopParent_code),
        "},") 
        as d_otdel_age_salary
    from sotrudniki sotr
    
    $INCLUDE utils.cfg[criteria] 
and  
      ( 
            (sotr.datauvolen > '#SELYEAR#-#end_month#-01' or sotr.datauvolen is null) 
            and (sotr.okonch_rab > '#SELYEAR#-#end_month#-01' or sotr.okonch_rab is null) 
            and  (sotr.nachalo_rab <'#SELYEAR#-#start_month#-01')
       )     

    group by sotr.subTopParent_code
 ;
   select concat("{ pname:'",sotr.category,"'",  
    Средняя зарплата ??
        ", m_pay:",0,
    Средний возраст ??
        ", m_age:",round( sum(((#SELYEAR#-year(sotr.dr)))) / count(sotr.category),1),
    Всего дюдей ??
        ", cnt:",count(sotr.category),
        ", st_sum:",sum(sotr.stavka),
        "},") 
        as d_category
    from sotrudniki sotr
    $INCLUDE utils.cfg[criteria] 
and  
      ( 
            (sotr.datauvolen > '#SELYEAR#-#end_month#-01' or sotr.datauvolen is null) 
            and (sotr.okonch_rab > '#SELYEAR#-#end_month#-01' or sotr.okonch_rab is null) 
            and  (sotr.nachalo_rab <'#SELYEAR#-#start_month#-01')
       )     

    group by sotr.category
 ;
По должностям ??
   select concat("{ pname:'",sotr.post,"'",  
    Средняя зарплата ??
        ", m_pay:",0,
    Средний возраст ??
        ", m_age:",round( sum(((#SELYEAR#-year(sotr.dr)))) / count(sotr.post),1),
    Всего дюдей ??
        ", cnt:",count(sotr.post),
        ", st_sum:",sum(sotr.stavka),
        "},") 
        as d_post
    from sotrudniki sotr
    $INCLUDE utils.cfg[criteria] 
and  
      ( 
            (sotr.datauvolen > '#SELYEAR#-#end_month#-01' or sotr.datauvolen is null) 
            and (sotr.okonch_rab > '#SELYEAR#-#end_month#-01' or sotr.okonch_rab is null) 
            and  (sotr.nachalo_rab <'#SELYEAR#-#start_month#-01')
       )     

    group by sotr.post
    order by sotr.post
 ;
По должностям по отделениям??
   select concat(
        
        
        "{ pname:'",sotr.post,"'",  
    Средняя зарплата ??
        ", m_pay:",0,
    Средний возраст ??
        ", m_age:",round( sum(((#SELYEAR#-year(sotr.dr)))) / count(sotr.post),1),
    Всего дюдей ??
        ", cnt:",count(sotr.post),
        ", st_sum:",sum(sotr.stavka),
        "},") 
        as d_post
    from sotrudniki sotr
    $INCLUDE utils.cfg[criteria] 
and  
      ( 
            (sotr.datauvolen > '#SELYEAR#-#end_month#-01' or sotr.datauvolen is null) 
            and (sotr.okonch_rab > '#SELYEAR#-#end_month#-01' or sotr.okonch_rab is null) 
            and  (sotr.nachalo_rab <'#SELYEAR#-#start_month#-01')
       )     

    group by sotr.post
    order by sotr.post
 ;








Распределение по возрасту ??
================== возраст ??
    delete from tmp_age;
    insert into tmp_age  
(
select ((year(NOW())-year(sotr.dr)) div  5) * 5 as yo,stavka, 0
from sotrudniki sotr
        $INCLUDE utils.cfg[criteria] 
and  
      ( 
            (sotr.datauvolen > '#SELYEAR#-#end_month#-01' or sotr.datauvolen is null) 
            and (sotr.okonch_rab > '#SELYEAR#-#end_month#-01' or sotr.okonch_rab is null) 
            and  (sotr.nachalo_rab <'#SELYEAR#-#start_month#-01')
       )     

)
    ;

    select concat("{ pname:' ",yo,  "', value:",  1 div(count(yo)*100),  ", cnt:", sum(stavka),  ", salary:",round( sum(itogo_n)/(sum(stavka)),0),"},") as d_age
    from tmp_age
    group by yo
    ;
    
select  round( sum(yo*stavka)/(sum(stavka)),2) as mean_age, 
	concat(round( sum(itogo_n)/(sum(stavka)),0),"т.р.") as mean_salary
    from tmp_age;
==================/возраст ??




  select concat("{ pname:'",sotr.TopParent_Name,  "', cnt:",sum(stavka),"},")
         as d_otdelenie
    from sotrudniki sotr
    $INCLUDE utils.cfg[criteria] 
     and sotr.TopParent_Name not like ('Рук%') and sotr.TopParent_Name not like ('%Гр. Сов.%') 
and  
      ( 
            (sotr.datauvolen > '#SELYEAR#-#end_month#-01' or sotr.datauvolen is null) 
            and (sotr.okonch_rab > '#SELYEAR#-#end_month#-01' or sotr.okonch_rab is null) 
            and  (sotr.nachalo_rab <'#SELYEAR#-#start_month#-01')
       )     

    group by sotr.TopParent_Name
 ;

  select concat("{ pname:'",sotr.subTopParent_Name,  "', cnt:",sum(stavka),"},")
         as d_subdivs
    from sotrudniki sotr
    $INCLUDE utils.cfg[criteria] 
and  
      ( 
            (sotr.datauvolen > '#SELYEAR#-#end_month#-01' or sotr.datauvolen is null) 
            and (sotr.okonch_rab > '#SELYEAR#-#end_month#-01' or sotr.okonch_rab is null) 
            and  (sotr.nachalo_rab <'#SELYEAR#-#start_month#-01')
       )     

    group by sotr.subTopParent_Name
 ;






top parent and all ??
  select concat("{ pname:'",sotr.TopParent_Name,
    "', st_sum:",
	 sum(stavka),
    ", cnt:",count(stavka)
  , "},")
         as d_full_lab
    from sotrudniki sotr
    $INCLUDE utils.cfg[criteria] 
    and sotr.TopParent_Name not like ('Рук%') and sotr.TopParent_Name not like ('%Гр. Сов.%') 
and  
      ( 
            (sotr.datauvolen > '#SELYEAR#-#end_month#-01' or sotr.datauvolen is null) 
            and (sotr.okonch_rab > '#SELYEAR#-#end_month#-01' or sotr.okonch_rab is null) 
            and  (sotr.nachalo_rab <'#SELYEAR#-#start_month#-01')
       )     

    group by sotr.TopParent_Name
    UNION 
    select concat("{ pname:'ЛФВЭ', st_sum:",
	 sum(stavka),
    ", cnt:",count(stavka)
  , "},")
         as d_full_lab
    from sotrudniki sotr
    $INCLUDE utils.cfg[criteria] 
and  
      ( 
            (sotr.datauvolen > '#SELYEAR#-#end_month#-01' or sotr.datauvolen is null) 
            and (sotr.okonch_rab > '#SELYEAR#-#end_month#-01' or sotr.okonch_rab is null) 
            and  (sotr.nachalo_rab <'#SELYEAR#-#start_month#-01')
       )     

 ;

   select concat("{ pname:'",
    (select short_name from struktura where id=subTopParent_code),
     "', value:0","},\n") 
    as d_otdel
    from sotrudniki sotr
    $INCLUDE utils.cfg[criteria] 
and  
      ( 
            (sotr.datauvolen > '#SELYEAR#-#end_month#-01' or sotr.datauvolen is null) 
            and (sotr.okonch_rab > '#SELYEAR#-#end_month#-01' or sotr.okonch_rab is null) 
            and  (sotr.nachalo_rab <'#SELYEAR#-#start_month#-01')
       )     

    group by sotr.subTopParent_code
 ;


 новый расклад по возрасту и категориям??
   delete from tmp_age_cat_div;
    insert into tmp_age_cat_div  
	 (yo,stavka,itogo_n,topdiv_code,topdiv_name,cat)
	 (
    SELECT  ( (year(NOW())-year(sotr.dr)) div  5) * 5
	  ,stavka, 0,sotr.TopParent_code,'', sotr.category
    from sotrudniki sotr
    $INCLUDE utils.cfg[criteria] 
and  
      ( 
            (sotr.datauvolen > '#SELYEAR#-#end_month#-01' or sotr.datauvolen is null) 
            and (sotr.okonch_rab > '#SELYEAR#-#end_month#-01' or sotr.okonch_rab is null) 
            and  (sotr.nachalo_rab <'#SELYEAR#-#start_month#-01')
       )     
    )
    ;
    select CONCAT("{", '"pname":',yo,  ',"',  cat,  '":', round(sum(stavka),1),  ', "salary":',round( sum(itogo_n)/(sum(stavka)),0),"},") as d_age_new
    from tmp_age_cat_div
    group by yo, cat
    order by yo
    ;




[end]

 



[get otdels]
[end]

[get Totals]
[end]

