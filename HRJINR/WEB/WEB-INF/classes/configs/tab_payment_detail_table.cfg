tab_salary_table.cfg

[comments]
    descr=Таб "ЗП"
    input=none
    output=HTML таблица объектов
    parents=
    childs=admin/monitor/docs_list_table.cfg
    testURL=?c=admin/monitor/docs_list
    author:Семашко
[end]

[parameters]
    service=dubna.walt.service.TableServiceSpecial
    request_name=U:Список документов
    LOG=ON 
    tableCfg=table_no
    $INCLUDE dat/common.dat[rowLinks]
[end]
[get total sotr stavka]
    select count(*) as persons_count,  round(sum(stavka),2) as stavka_count 
    from sotrudniki sotr
    left join oklad on sotr.tab_n=oklad.tab_n 
    $INCLUDE utils.cfg[criteria] 
    and #premii_filter# ??premii_filter

    order by #srt# #desc# ??srt
[end]
[total table]
    $GET_DATA [get total sotr stavka]
    $GET_DATA [SQL list]
    $SET_PARAMETERS tab_n_list = (#tab_n_list#)

     $SET_PARAMETERS DB1C=Y   
     $USE_DB 1C 
     $GET_DATA [get summ nachislen]
     $SET_PARAMETERS DB1C=
     $USE_DB 

    <table border=1 cellpadding=5 cellspacing=0>
    </br>
    <tr>
        $GET_DATA [get Totals]
        <td class="label">
            Количество ставок:
        </td><td>
            #stavka_count#
        </td>
        <td class="label">
            Количество человек:
        </td>
        <td>
            #persons_count#
        </td>
        <td class="label">
            Начислено:
        </td>
        <td>
            #total_payment#
        </td>

    </tr>
    </table>
[end]

[report header]
    $GET_DATA SQL:select year(current_date) as current_year
    $GET_DATA SQL:SELECT SUBSTR( '#year#',3,2) as year_add
    $SET_PARAMETERS  year_add=_#year_add# 
    $SET_PARAMETERS  year_add=; ??current_year=#year#
    <table class="tlist tgreen" cellspacing=0 name="salary">
    <tr>
    <th class="srh" sr="sotr.tab_n">Таб.№</th>
    <th class="srh" sr="sotr.FIO">ФИО</th> 
    <th  class="srh"  sr="sotr.TopParent_name">Отделение</th>
    <th  class="srh"  sr="sotr.subTopParent_name">Отдел/сектор</th> 
    <th  class="srh"  sr="sotr.lvl3_div_name">сектор/группа</th> 
    <th class="srh" sr="sotr.post">Должность</th>
    <th class="srh" sr="sotr.category">Категория</th>
    <th class="srh" sr="sotr.stavka" >Ставка</th> 
    $LOG2 data #year# #month# <br>
     $SET_PARAMETERS DB1C=Y   
     $USE_DB 1C 
    $GET_DATA [get list nachislen]
    $LOG2 #nach_list#
    $JS{
        var nach_list=prm('nach_list').split('|');
        for (i in nach_list){
          nach_list[i] = nach_list[i].trim()
        }
        nach_list.sort()
        var nach_head='';
        for (i in nach_list){
		
          var ttt = nach_list[i].replace(' ','<br>');
          nach_head +='<td>' + nach_list[i] + '</td>';
        }
        setPrm('nach_head',nach_head);
    $JS} 
    <th ">Всего</th>
    #nach_head#
    </tr>

     $SET_PARAMETERS DB1C=
     $USE_DB 

[end]



[get list nachislen]
  SELECT distinct  concat( trim(n.VidRascheta), '|') as nach_list  FROM [DB_1C_2].[1c8_2].[LHE_Nachisleniya#year_add#] n where year(period)=#year# and month(period)>#month#-#month_count# and month(period)<=#month#  
[end]

[get  nachislen]
  SELECT concat('"', trim(n.VidRascheta),'":', floor(sum(rezultat)), ',') as nach_detail  FROM [DB_1C_2].[1c8_2].[LHE_Nachisleniya#year_add#] n where n.tabn='#tab_n#' and year(period)=#year# and month(period)>#month#-#month_count# and month(period)<=#month# group by n.VidRascheta 
[end]



[item]
    $USE_DB 1C ??!DB1C=Y   
    $SET_PARAMETERS DB1C=Y   
     
     $SET_PARAMETERS payment= 
    $LOG2 data #FIO# = #payment# <br>
    $SET_PARAMETERS other_work=0;add_work=0;
    $LOG2 category = #category#
    ++++++++++++++++++ Строка таблицы - 1 документ +++++++++++++++++++++ ??
    $GET_DATA [get  nachislen]
    
    <tr class="pt
    oddRow ??oddRow=1
    " 
    onClick="
        ShowDialog(true); 
        var year = document.getElementById('pay_year');
        year= year.value.trim();
        var month = document.getElementById('pay_month')
        month = month.value.trim();
        var month_count = document.getElementById('pay_month_count');
        month_count = month_count.value.trim();
        console.log(month_count);
        AjaxCall('popupCont', 'c=edit/payment&month=#month#&month_count=#month_count#&year_add=#year_add#&year=#year#&tab_n=#tab_n#&FIO=#F# #I# #O#', true);
    " >
    <td>#tab_n#</td> 
    <td>#F# #I# #O#</td>
    <td>#topparent_name#</td>
    <td>#subtopparent_name#</td>
    <td>#:divShort(prm('lvl3_div_name'))#</td>
    <td>#post#</td>
    <td>#category#</td>
    <td >#stavka#</td>
     $GET_DATA [get nachislen]

    $LOG2 #nach_detail# <br>
    $JS{
        var nach_all=prm('nach_detail');
        nach_all = nach_all.substring(0,nach_all.length-1);
        _$LOG(2,'nach_all = '+nach_all+'<br>')
        var nach_obj = JSON.parse('{'+nach_all+'}');
        var summ = 0;
        var nach_head='';
        for (i in nach_list){
          if (nach_list[i] in nach_obj ){  
            nach_head +='<td>' +nach_obj[nach_list[i]]+ '</td>';
            summ +=+nach_obj[nach_list[i]];
          } else {
           _$LOG(2,'Not found = '+nach_list[i]+'<br>')
            nach_head +='<td></td>';
          }
        }
        setPrm('nach_head',nach_head);
        setPrm('summ',summ);
    $JS} 
    <td>#summ#</td>
    #nach_head#
    </tr>



    </tr>
[end]

[report footer]
     $USE_DB  

    $SET_PARAMETERS NumTableCols=14;

    <tr><td colspan=#NumTableCols# class="pager last">
    $INCLUDE dat/common.dat[rpp]  ??!NumTableRows=0
    <input type=hidden name="rpp" value="#rpp#"> ??NumTableRows=0
    </td></tr>
    </table>

    <script type="text/javascript">
    showSrt("#srt#","sup"); ??!desc
    showSrt("#srt#","sdown"); ??desc
    </script>
[end]


[SQL]
    $LOG2 SQL!!!!!!!!!!!!!!!!!!!!!!!!!<br>
    select 
        lvl3_div_code, topparent_code, subtopparent_code, 
        (select short_name from struktura where id =  lvl3_div_code) as lvl3_div_name, 
        (select short_name from struktura where id =  topparent_code) as topparent_name, 
        (select short_name from struktura where id =  subtopparent_code) as subtopparent_name,
    sotr.person_id, sotr.tab_n, sotr.F, sotr.I, sotr.O, sotr.FIO, sotr.otdel
    , sotr.division, sotr.shtat_direct, sotr.post, sotr.category,sotr.stavka
    , round(oklad.oklad,0) as oklad, ifnull(oklad.kompens,0) as kompens 
    , round(ifnull(oklad.kompens,0)*oklad.oklad/100,0) as kompens_rub 
    , oklad.dopl_stepen  
    ,round(ifnull(oklad.sovmeshenie,0)*oklad.oklad/100,0) as sovmeshenie 
    ,case
         when  (ifnull(sotr.DataUvolen-CURRENT_DATE,1)<0)   then 'Y'
    else 'N' end as dismissed
    ,(select sum(percent) from FTE f where f.tab_n=sotr.tab_n and f.topic_id = 1065 ) as fte_1065
    ,(select sum(percent) from FTE f where f.tab_n=sotr.tab_n  ) as fte_full
    from sotrudniki sotr
    left join oklad on sotr.tab_n=oklad.tab_n 
    $INCLUDE utils.cfg[criteria] 
    and #premii_filter# ??premii_filter
    and #fin_filter# ??fin_filter
    order by #srt# #desc# ??srt

[end]
[SQL list]
    $LOG2 SQL!!!!!!!!!!!!!!!!!!!!!!!!!<br>
    SET SESSION group_concat_max_len = 10000000;
    select group_concat('''',tab_n,'''')  tab_n_list
    from sotrudniki sotr
    $INCLUDE utils.cfg[criteria] 
    and #premii_filter# ??premii_filter
    and #fin_filter# ??fin_filter

    select length(group_concat(tab_n)) as tablen
    from sotrudniki sotr
    $INCLUDE utils.cfg[criteria] 
    and #premii_filter# ??premii_filter
    and #fin_filter# ??fin_filter
;

    
   
[end]

[FZP entries]
    (
    'Выходное пособие при увольнении',
    'Доплата за работу в ночное время (в праздники)',
    'Доплата за расширение зоны обслуживания ',
    'Доплата за руководство бригадой ',
    'Доплата за совмещение должностей (профессий)',
    'Доплата за увеличение объёма выполняемых работ в %',
    'Доплата за учёную степень доктора наук',
    'Доплата за учёную степень кандидата наук',
    'Доплата как члену дирекции ОИЯИ',
     
    'Компенсация за работу в ОРВУ труда',
    'Компенсация за работу в РВУ труда',
    'Компенсация за работу во вредных условиях труда',
    'Надбавка (по часам) за выполнение дополнительного объёма работ',
    'Надбавка (по часам) за выполнение дополнительного объёма работ из ФЗП резерва дирекции',
    'Надбавка (по часам) за высокую квалификацию',
    'Надбавка 1 (по часам) за выполнение дополнительного объёма работ',
     
    'Надбавка за выполнение дополнительного объёма работ',
    'Надбавка за выполнение дополнительного объёма работ из ФЗП резерва дирекции',
    'Надбавка за выполнение дополнительных обязанностей из ФЗП резерва дирекции в %',
    'Надбавка за выполнение дополнительных обязанностей из ФЗП резерва дирекции в руб.',
    'Надбавка за выполнение дополнительных обязанностей из ФЗП структурного подразделения в %',
    'Надбавка за выполнение дополнительных обязанностей из ФЗП структурного подразделения в руб.',
    'Надбавка за выполнение особо важных работ по проекту NICA',
    'Надбавка за высокую квалификацию из ФЗП резерва дирекции',
    'Надбавка за высокую квалификацию из ФЗП структурного подразделения',
    'Надбавка за и.о. начальника штаба ГО из ФЗП структурного подразделения',
    'Надбавка1 за выполнение дополнительного объёма работ',
    'Надбавка1 за выполнение дополнительных обязанностей из ФЗП резерва дирекции',
    'Надбавка2 за выполнение дополнительного объёма работ',
    'Оклад по дням',
    'Оклад по часам',
    'Оплата больничных листов за счет работодателя',
    'Оплата донору',
    'Оплата по среднему заработку',
    'Отпуск учебный',
    'Пособие по уходу за ребёнком до 3 лет'
)
[end]
[BONUS entries]
    (
    'Премия из ФЗП ЛФВЭ',
    'Квартальная премия ЛФВЭ'
    )
[end]

[stipends entries]
 ('Стипендия им. А.М.Балдина', 'Стипендия им. В.И.Векслера', 'Стипендия имени академика М.А.Маркова из ФЗП ЛФВЭ')
[end]
[prochee entries]
   (
    'Выслуга лет',
    'Выслуга лет  за работу во вредных условиях',
    'Доплата за вечерние часы',
    'Доплата за выполнение обязанностей отсутствующего работника в руб.',
    'Доплата за ночные часы',
    'Доплата за работу в праздники и выходные',
    'Оплата праздничных и выходных дней',
    'Оплата сверхурочных часов',
    'Оплата сверхурочных суммированных часов'  )

[end]
[stimul entries]
    (
    'Выплаты из фонда дополнительного стимулирования ЛФВЭ',
    'Выплаты из фонда дополнительного стимулирования ЛФВЭ',
    'Надбавка из фонда стимулирования высококвалифицированного персонала ЛФВЭ',
    'Надбавка из фонда стимулирования высококвалифицированного персонала ЛФВЭ (по часам)'
    )
[end]

[otpusk entries]
    (
    'Дополнительный отпуск за работу в ОРВУ труда',
    'Дополнительный отпуск за работу с вредными и(или) опасными условиями труда',
    'Компенсация отпуска по календарным дням',
    'Компенсация отпуска при увольнении по календарным дням',
    'Компенсация отпуска при увольнении по шестидневке',
    'Необлагаемая компенсация отпуска ',
    'Оплата отпуска по календарным дням',
    'Удержание за неотработанные дни отпуска по календарным дням'
    )

[end]


[select stimul]

    SELECT
      FLOOR(sum(rezultat)/1000) as stimul
    ,month(period) as monthsel ??
    FROM [DB_1C_2].[1c8_2].[LHE_Nachisleniya]
    where  VidRascheta in 

    $INCLUDE [stimul entries]
    $INCLUDE [extrabudgetary mode]
    and month(period) = #qMONTH# ??qMONTH<13
    and month(period) >= 1 and month(period) <4 ??qMONTH=101
     group by month(period) ??
    order by month(period) ??
    ;

    SELECT
	concat( '<tr><td  class=rtbl_1 width=600pt>', 
	VidRascheta,'</td><td class=rtbl_2>', 
    FLOOR(sum(rezultat)/1000), '</td></tr>' ) as stimul_detail
    FROM [DB_1C_2].[1c8_2].[LHE_Nachisleniya]
    where  VidRascheta in 
        $INCLUDE [stimul entries]
        $INCLUDE [extrabudgetary mode]
    and month(period) = #qMONTH# ??qMONTH<13
    and month(period) >= 1 and month(period) <8 ??qMONTH=101
    group by VidRascheta
    order by FLOOR(sum(rezultat)/1000) desc;



[end]


