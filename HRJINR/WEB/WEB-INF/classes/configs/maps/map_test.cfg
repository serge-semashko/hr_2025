[comments]
[end]

[description]
[end]
[parameters]
    LOG=ON
    init_coord=56.75851581075622,37.21783696637258
    init_Ycoord=56.75859, 37.218719
[end]

[init map]
    <script>
        var mbUrl ='https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw';
        var mymap = L.map('mapid').setView([56.75859, 37.218719], 15);
        L.tileLayer(mbUrl,
            {
            maxZoom: 2,
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, ' +
                '<a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
                'Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
            id: 'mapbox/streets-v11'
        }).addTo(mymap);
        mymap.on('zoom', function() {
            processZoom(mymap.getZoom());

        });
    </script>

[end]

[init osmmap]
<script>
    osmUrl = 'http://192.168.1.223/{z}/{x}/{y}.png',
      osmAttribution = 'Map data <a target="_blank" href="http://www.openstreetmap.org">OpenStreetMap.org</a>' +
        ' contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>',
      osmLayer = new L.TileLayer(osmUrl, {
          maxZoom: 21,
          attribution: osmAttribution
        }),
//      weatherLayer = new OsmJs.Weather.LeafletLayer({
//          lang: 'ru'
//        }),
      baseMaps = {"OpenStreetMap": osmLayer},
//      overlayMaps = {"Метеоданные": weatherLayer},
//      layersControl = new L.Control.Layers(baseMaps, overlayMaps),
      layersControl = new L.Control.Layers(baseMaps),
      mymap = new L.Map('mapid', {
          center: new L.LatLng(#init_coord#),
          zoom: 17,
          layers: [osmLayer]
        }),
      popup = new L.Popup();
      console.log('scale');
     

        mymap.on('zoom', function() {
            var dzoom =8-(( 22-mymap.getZoom())/1.3);
            if ( dzoom<=0) {dzoom=1};
            processZoom(mymap.getZoom());

        });

</script>
[end]

    osmUrl = 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
      osmAttribution = 'Map data <a target="_blank" href="http://www.openstreetmap.org">OpenStreetMap.org</a>' +
        ' contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>',
L.tileLayer('http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}', {subdomains:['mt0','mt1','mt2','mt3']}).addTo(map);
[init ymap]
<script>

      osmLayer = L.tileLayer(
  'http://vec{s}.maps.yandex.net/tiles?l=map&v=4.55.2&z={z}&x={x}&y={y}&scale=2&lang=ru_RU', {
    subdomains: ['01', '02', '03', '04'],
    attribution: '<a http="yandex.ru" target="_blank">Яндекс</a>',
    reuseTiles: true,
    updateWhenIdle: false
  }
);
debugger;

      baseMaps = {"Plan": osmLayer},
      layersControl = new L.Control.Layers(baseMaps),
      mymap = new L.Map('mapid', {
          center: new L.LatLng(#init_Ycoord#),
          zoom: 19,
          layers: [osmLayer]
        });
      popup = new L.Popup();
    mymap.options.crs = L.CRS.EPSG3395;
    mymap.addControl(layersControl);
        mymap.on('zoom', function() {
            processZoom(mymap.getZoom());

        });
</script>
[end]




[56.75859, 37.218719], 15  


[get roads]
    select CONCAT("'", id,  
        "T':{'descr':'",descr,
        "','shortname':'",shortname,
        "','obj_name':'",obj_name,
        "','points':'",points,
        "','size_x':'",size_x,
        "','size_y':'",size_y,
        "','o_type':'",o_type,
        "','show_tt':'",show_tt,
        "','tooltip':'",tooltip,
        "','map_object_type':'",map_object_type,
        "'},\n") as roads  from map_lhep  
        where o_type <5
            and area_id = 2 ??LAB_ID=100000
            and area_id = 1 ??LAB_ID=600000

        order by o_type, obj_name

[end]
[get map object types]
    select CONCAT("'", parm_name, 
        "':{'name':'",parm_name,
        "','val1':'",val1,
        "','val2':'",val2,
        "','val3':'",val3,
        "','size_x':'",size_x,
        "','size_y':'",size_y,
        "'},") as map_object_types from params where parm_type='map_object_type' or parm_type='map_marker_type' or parm_type='map_figure_type';

[end]


[js func]
    <script>
        var lastZoom;
        var Zoom_tooltipThreshold     = 16;
        var Zoom_objectThreshold     = 15;
        function processZoom(zoom){
            $('##zoomval').html('Zoom='+mymap.getZoom());

            for (a in roads) {
                var obj=roads[a];
                var lobj=obj['leaflet_obj'];
                console.log('zoom='+zoom)
                if ( ( obj['o_type']==2 )|( obj['o_type']==1) | ( obj['o_type']==3  )  ){
                   if (zoom<Zoom_objectThreshold)
                    {   lobj.remove();
                        } else 
                    {   lobj.addTo(mymap)}
                } 



            if (mymap.getZoom() < Zoom_tooltipThreshold) {
                $(".lhep_obj_tooltip").css("display","none")
            } else { 
                $(".lhep_obj_tooltip").css("display","block")
            }

                lastZoom = zoom;


            }
            
        }
        function saveLeaf(leaf) {
                
                for (el in roads) {
                    rt = roads[el] ;
                    if (rt['_leaflet_id'] !=  leaf._leaflet_id) {
                        continue;
                    }
                    var a = leaf._latlngs;
//                    console.log('Нашел!!!');
                    var a = leaf.editing.latlngs[0];
                    var bb = rt['leaflet_obj'].getLatLngs();
                    if (bb.length==1) {a = bb[0]} else {a=bb};
                    var new_l=[];
                     console.log('a='+(typeof a)+' '+a);
                        for (i in a){
                            console.log('I='+(typeof i)+' '+i+' A='+(typeof a[i])+' '+a[i] );
                            var b = a[i];
                            var t = a[i];
                            var t1 = t['lat'];
                            var t2 = t['lng'];
                            new_l.push([t1,t2]);

                        }
                    var coord = JSON.stringify(new_l);
                    console.log(coord);
                    console.log('ID= '+this._leaflet_id);
                    var aa = leaf._latlngs;
                    if ( coord.indexOf("null") >= 0 ){
                        debugger;
                        aaa();
                    }
                    if ( coord.length <20 ){
                        debugger;
                        alert('Ошибка поиска объекта');
                        aaa();
                    }

                    AjaxCall('popupCont', 'c=maps/save_map_object&o_type='+rt['o_type']+'&coord='+coord+'&objname='+el, true);  

                    break;

                }
        }

    </script>


[end]


                'enable_editing(false);'+
                ' obj=roads[this.id].leaflet_obj;'+
                'console.log(this.id+\'=\'+obj);'+
                ' obj.editing.enable();'+



            function saveAll(){
                alert('OLD SAVE !!!!');
                aaa();
                for (el in roads) {
                    rt = roads[el] ;
                    cur_object = rt.leaflet_obj;
                    console.log('id='+el+' '+rt+' '+toString.call(cur_object));
                    var a = cur_object._latlngs;
                    var a = cur_object.editing.latlngs[0];
                    var bb = rt['leaflet_obj'].getLatLngs();
                    if (bb.length==1) {a = bb[0]} else {a=bb};
                    var new_l=[];
                     console.log('a='+(typeof a)+' '+a);
                        for (i in a){
                            console.log('I='+(typeof i)+' '+i+' A='+(typeof a[i])+' '+a[i] );
                            var b = a[i];
                            var t = a[i];
                            var t1 = t['lat'];
                            var t2 = t['lng'];
                            new_l.push([t1,t2]);

                        }
                    var coord = JSON.stringify(new_l);
                    console.log(coord);
                    console.log('ID= '+cur_object._leaflet_id);
                    var aa = cur_object._latlngs;
                    if ( coord.indexOf("null") >= 0 ){
                        debugger;
                        aaa();
                    }
                    if ( coord.length <20 ){
                        debugger;
                        alert('Ошибка поиска объекта');
                        aaa();
                    }
                    el = el.replace('T','');
                    
                    AjaxCall('popupCont', 'c=maps/save_map_object&op=upd&id='+el+'&map_object_type='+rt.map_object_type+'&o_type='+rt['o_type']+'&coord='+coord+'&objname='+rt.obj_name, true);  
                }
                 //$('.map_save_btn').value='aaa';
                    
            };

        function save_all_and_reload(){

                    saveAll();
                    document.theForm.c.value='maps/maps_lhep.cfg';
                    AjaxCall('content_table','', true, 'theForm');   
        }


                    obj.leaflet_obj.setStyle({stroke:true;fillOpacity:0.2});

[blink proc]
<script>
        var blinked = false;
        function procBlink(){
            blinked = !blinked;

            for (cbid in roads){
                let obj =  roads[cbid];
                if (obj['o_type']==3) continue;
                if (!blinked){
//                    console.log('blink '+cbid+' '+' '+obj['obj_name']);
                    
                    obj.leaflet_obj.setStyle({stroke:true,fillOpacity:0.3});

                    continue;
                };
                let obj_blinked = $('##blink'+cbid).prop('checked');
                if (!obj_blinked)  continue;
//                console.log('blink '+cbid+' '+obj_blinked)
                obj.leaflet_obj.setStyle({stroke:false,fillOpacity:0.3});
            }
                setTimeout(procBlink,400);

        }
        setTimeout(procBlink,200);
</script>
[end]

[init roads]   
    $GET_DATA [get roads]
    $LOG2 <br> ============================!!!!roads!!!!=======================================<br>  #roads# <br>
    $SET_PARAMETERS roads={#roads#}
    $LOG2 ============================roads=======================================#roads#<br> 
    $LOG2 <br>============================end roads======================================= <br>
    

    $BREAK ??!roads

   <br> init roads  <br> 

    <script>
        L.control.scale().addTo(mymap);
            function newMapObject(obj_name,o_type,map_object_type, coord){
                    AjaxCall('popupCont', 'c=maps/save_map_object&op=new&id=new&map_object_type='+map_object_type+'&o_type='+o_type+'&coord='+coord+'&objname='+obj_name, true);  
            };
        function redraw_marker(sel){
            var obj_id = sel.id.substring(4);
            obj = roads[obj_id];
            var optionSelected = sel.selectedIndex; 
            var b_value = sel.options[optionSelected].value;
            obj['map_object_type'] = b_value;
            map_object_types[b_value]['icon']
            obj.leaflet_obj.setIcon(map_object_types[b_value]['icon']);
            
        }
        function redraw_poly(){
            
            $.each($.find("select.bld_desc"), function () {
            
                var optionSelected = this.selectedIndex; 
                var b_idr = this.id;
                if (b_idr === 'bld_sel_num')
                    {
                        return;
                     };
                
                var objnum = b_idr.split('_')[1].trim();
                b_obj = roads[objnum];
                if (b_obj['o_type']==3 )
                    {return}
//                console.log(b_idr+' on '+this.style.color);
                var b_color = this.options[optionSelected].style.color;
                var b_value = this.options[optionSelected].value;
//                console.log('set color '+b_color+' val='+b_value);
                this.style.color= b_color;
                var b_idr = this.id;
                
                b_obj.map_object_type = b_value;
                obj = b_obj.leaflet_obj;
                obj.setStyle({fillOpacity:0.20,color:this.style.color});


//                debugger;
                
//                console.log(b_idr+' off '+(toString(obj))+' '+this.style.color);
                
                

            });
        };
        function enable_editing(mode){
            for (a in roads) {
                var obj=roads[a].leaflet_obj;
                if ( mode ) {
                        obj.editing.enable();}
                    else {
                        obj.editing.disable();
                    }

            }

        }
        function beginEditObject(this_el){
                //enable_editing(false);
                el_id=this_el.substr(6);
                document.getElementById('edtext_'+el_id).readOnly = false;
                document.getElementById('edshort_'+el_id).readOnly = false;
                document.getElementById('bld_'+el_id).disabled = false;
                document.getElementById('del_'+el_id).disabled = false;
                obj=roads[el_id].leaflet_obj;
                console.log(el_id+'='+obj);
                obj.editing.enable();
                $('##objname').val(roads[el_id].obj_name);
                //$('##edit_controls').show();
        }
        function saveObject(this_el){
                var el;
                el_id=this_el.substr(6);
                obj=roads[el_id].leaflet_obj;
                console.log(el_id+'='+obj);
                obj.editing.disable();
//                $('##edit_controls').show();
                {
                    rt = roads[el_id] ;
                    var this_leaf =rt.leaflet_obj
                    if ( ( rt['o_type'] == 1) | ( rt['o_type'] == 2)) { 
                        var a = this_leaf._latlngs;
                        var a = this_leaf.editing.latlngs[0];
                        var bb = rt['leaflet_obj'].getLatLngs();
                        if (bb.length==1) {a = bb[0]} else {a=bb};
                        var new_l=[];
                         console.log('a='+(typeof a)+' '+a);
                            for (i in a){
                                console.log('I='+(typeof i)+' '+i+' A='+(typeof a[i])+' '+a[i] );
                                var b = a[i];
                                var t = a[i];
                                var t1 = t['lat'];
                                var t2 = t['lng'];
                                new_l.push([t1,t2]);

                            }
                    }
                    if ( rt['o_type'] == 3)  { 
                        //var a = this_leaf._latlng;
                        var new_l = [];
                        var latlng = rt['leaflet_obj'].getLatLng()
                            {
                                var t1 = latlng['lat'];
                                var t2 = latlng['lng'];
                                new_l.push(t1);
                                new_l.push(t2);

                            }
                    }
                    if ( rt['o_type'] == 4)  { 
                        //var a = this_leaf._latlng;
                        var new_l = [];
                        var latlng = rt['leaflet_obj'].getLatLng()
                            {
                                var t1 = latlng['lat'];
                                var t2 = latlng['lng'];
                                new_l.push(t1);
                                new_l.push(t2);
                                new_l.push(rt['leaflet_obj'].getRadius());

                            }
                    }

                    var coord = JSON.stringify(new_l);
                    console.log(coord);
                    console.log('ID= '+this_leaf._leaflet_id);
                    if ( coord.indexOf("null") >= 0 ){
                        debugger;
                        aaa();
                    }
                    if ( coord.length <20 ){
                        debugger;
                        alert('Ошибка поиска объекта');
                        aaa();
                    }
                   var el_shortname = $('##edshort_'+el_id).val(); 
                   var el_name = $('##edtext_'+el_id).val();

                document.getElementById('edtext_'+el_id).readOnly = true;
                document.getElementById('edshort_'+el_id).readOnly = true;
                document.getElementById('bld_'+el_id).disabled = true;
                document.getElementById('del_'+el_id).disabled = true;


                     AjaxCall('popupCont', 'c=maps/save_map_object&op=upd&id='+el_id.replace('T','')+'&map_object_type='+rt.map_object_type+'&o_type='+rt['o_type']+'&coord='+coord+'&shortname='+el_shortname+'&objname='+el_name, true);  
                    console.log('c=maps/save_map_object&o_type='+rt['o_type']+'&coord='+coord+'&objname='+el_name);


                }





        }

        function deleteMapObject(id){
                enable_editing(false);
                
                id = id.replace('T','').replace('del_','');
                AjaxCall('popupCont', 'c=maps/save_map_object&op=del&id='+id, true);  

        }

        function add_object(el,obj){
            
            var road = roads[el];
            var lr=L.layerGroup();
            var rname  =road['obj_name'];
            var shortname = road['shortname'];    
            
//            console.log('el='+el+' road name'+rname);
            var latlngs = JSON.parse(road['points']);
            var obj_desc = map_object_types[road.map_object_type];
//            console.log('Add el='+el+' begin el'+JSON.stringify(road)+' obj_type='+road.map_object_type+' color='+obj_desc.val2);
            if(typeof obj_desc == "undefined"){
                debugger;
            }
            var obj_color=obj_desc.val2;
            var polyline ='--';
            if (road['o_type'] == 1) {
                polyline = L.polyline(
                    latlngs
                , {color: '##'+obj_color, weight:4}).addTo(mymap);
                    polyline.setText(rname, {repeat: false,center:true,
                                      offset: 10,
                                      attributes: {'font-weight': 'italic',
                                                   'font-size': '12'}});


            };
            if (road['o_type'] == 2) {
                polyline = L.polygon(
                        latlngs
                    , {fillOpacity:0.1,color:'##'+ obj_color, weight:4}).addTo(mymap);
                    polyline.bindTooltip(shortname,
                       {permanent: true, direction:"center", className: 'lhep_obj_tooltip'}
                    ).openTooltip()
            }
            if (road['o_type'] == 3) {
                let size_x = +road['size_x'];
                let size_y = +road['size_y'];


                polyline = L.marker(latlngs, {icon: obj_desc['icon']}).addTo(mymap);
                if (size_x * size_x>0){
                    let icon = polyline.options.icon;
                    icon.options.iconSize = [size_x, size_y];
                    icon.options.iconAnchor = [parseInt(size_x/2), size_y];

                    polyline.setIcon(icon);
                }
            }
            if (road['o_type'] == 4) {
                let size_x = +road['size_x'];
                let size_y = +road['size_y'];
                let radius = latlngs.pop();
                polyline = L.circle(latlngs, {radius: radius}).addTo(mymap);
                    polyline.bindTooltip(shortname,
                       {permanent: true, direction:"center", className: 'lhep_obj_tooltip'}
                    ).openTooltip()

            }



            polyline.bindPopup(rname).on;
            road['_leaflet_id'] = polyline._leaflet_id;
            road['leaflet_obj'] = polyline;
//            console.log('1Create line ID= '+polyline._leaflet_id);
//            polyline.on('edit', function() {
//                return 0;
//                
//                    
//            });
            tbl = '--';
            if (road['o_type']==1) { tbl = tbl_roads} 
            if (road['o_type']==2) { tbl = tbl_bld} 
            if (road['o_type']==3) { tbl = tbl_markers} 
            if (road['o_type']==4) { tbl = tbl_bld} 
            if (tbl == '--') return;
            var row=tbl.insertRow( -1);
            var c1 = row.insertCell();
            c1.innerHTML  = '<input class=map_save_btn id=edbtn_'+el+' type=button value="..." onclick="'+
                ' if (this.value==\'save\')  {this.value=\'...\';saveObject(this.id); }   else {editing_id=this.id; beginEditObject(this.id);this.value=\'save\';}                 '+
            '">';
            var c1 = row.insertCell();
            if ((road['o_type']==1 ) | (road['o_type']==2)) {
            c1.innerHTML  = selbtype.replace('sel_num',el);
            }
            if (road['o_type']==3  ) {
            c1.innerHTML  = selmtype.replace('sel_num',el);
            }
            if (road['o_type']==4  ) {
            c1.innerHTML  = selbtype.replace('sel_num',el);
            }

            
            c2 = document.getElementById('bld_'+el.trim());
            var optionSelected = c2.selectedIndex; 
            c2.value = road.map_object_type;
            
            var c1 = row.insertCell();
            c1.innerHTML = '<input type="checkbox" idobj='+el+' id=blink'+el+ '>';
            var c1 = row.insertCell()
            c1.innerHTML = '<input readonly id=edtext_'+el+' type=text value="-----" >';
            $('##edtext_'+el).val(rname);

            var c1 = row.insertCell()
            c1.innerHTML = '<input readonly id=edshort_'+el+' type=text value="-----" >';
            $('##edshort_'+el).val(shortname);
 

            var c1 = row.insertCell();
            c1.innerHTML  = '<input disabled id=del_'+el+' type=button value="Del" onclick="'+
                ' editing_id=this.id; deleteMapObject(editing_id);document.theForm.c.value=\'maps/maps_lhep.cfg\'; AjaxCall(\'content_table\',\'\', true, \'theForm\');   '+
            '">';

            polyline.on(
                 'click',
                 function(e) {
                   L.DomEvent.stopPropagation(e);
                 });
        }
//==============================
        var tbl_bld= $('##table_bld')[0];
        var tbl_roads= $('##table_roads')[0];
        var tbl_markers= $('##table_markers')[0];

        var editing_id = '--';
        var selbtype ='#selbtype#';
        var selmtype ='#selmtype#';
        var roads = #roads#;
        console.log(2,'============JS ROADS <br> '+JSON.stringify(roads));
//        var map_marker_types = #map_marker_types#;
//        console.log('map_object_types =  '+JSON.stringify(map_object_types));
        var overlays = {};

        var ovrls = [{},{},{}];

        for (el in roads) {
            if (el.length==0)   break;
            console.log('===================== el = '+el);
            var road = roads[el];
//            console.log(el+' = '+JSON.stringify(road));
            add_object(el, road);

        }
        redraw_poly();
        

//        L.control.layers({},ovrls[1]).addTo(mymap);
//        L.control.layers({},ovrls[2]).addTo(mymap);
    </script>
    
[end]





[init poly]
[end]
[init resize]
  <script>
    document.onresize = function () {
        var w = screen.width;
        var h = screen.height;
        var dv = document.getElementById('mapid');
        console.log('mapid='+dv)
        dv.style.width = w*0.8+"px";
        dv.style.height = h*0.8+"px";
    }
</script>

[end]
style="background-image:url(male.png);"
[get b_types]
    select  concat(' <option value="', trim(parm_name), '"  style=" color:' ,p.val2,'"',
     '>' , TRIM(p.val1), '</option> ') as btypes
    from params p
    WHERE p.parm_type = 'map_object_type'
    order BY p.val1;
    select  concat(' <option value="', trim(parm_name), '"  style=" background:url("images/',trim(p.val2),')"',
     '>' , TRIM(p.val1),'<img src="images/trans_min_1.png"/>',
     '</option> ') as mtypes
    from params p
    WHERE p.parm_type = 'map_marker_type'
    order BY p.val1;

[end]
[report]
<style>
.leaflet-popup-tip-container {
    display: none;
} 
.leaflet-tooltip-top:before,
.leaflet-tooltip-bottom:before,
.leaflet-tooltip-left:before,
.leaflet-tooltip-right:before {
 
    }
.lhep_obj_tooltip {
    position: absolute;
    pointer-events: none;
    background: transparent;
    text-shadow: 1px 1px 2px black, 0 0 1em red; /* Параметры тени */
    color: white; /* Белый цвет текста */
    font-size: 1em; /* Размер надписи */
  border: none
}
.leaflet-tooltip-left.myCSSClass::before {
  border-left-color: cyan;
}
.leaflet-tooltip-right.myCSSClass::before {
  border-right-color: cyan;
}

</style>
    $GET_DATA [get b_types]
    $LOG2 b_types = #btypes# <br>
    $LOG2 m_types = #mtypes# <br>
    $SET_PARAMETERS selbtype=<select disabled id=bld_sel_num class=bld_desc  onchange="redraw_poly()">  #btypes#  </select>
    $SET_PARAMETERS selmtype=<select disabled id=bld_sel_num class=marker_desc  onchange="redraw_marker(this)">  #mtypes#  </select>
    $LOG2 selmtype = #selmtype# <br>
    
    $LOG2 maps ========================<br>
<style>

.blink {
    animation: blink 2s infinite; /* Параметры анимации */
   }
   @keyframes blink {
    from { opacity: 1; /* Непрозрачный текст */ }
    to { opacity: 0; /* Прозрачный текст */ }
   }}
</style>
              <input  type=button value="Новая линия"  onclick="
                    newMapObject('!!!!НОВАЯ ЛИНИЯ',1,'b_roads', '[[56.75823695642427,37.21160531044007],[56.75840457190959,37.21175819635392],[56.75827224395704,37.212002277374275]]');
                    document.theForm.c.value='maps/maps_lhep.cfg';
                    AjaxCall('content_table','', true, 'theForm');   

                      " 
                >
              <input  type=button value="Новое здание "  onclick="
                    newMapObject('!!!!НОВОЕ ЗДАНИЕ',2,'b_admin', '[[56.75823695642427,37.21160531044007],[56.75840457190959,37.21175819635392],[56.75827224395704,37.212002277374275]]');
                    document.theForm.c.value='maps/maps_lhep.cfg';
                    AjaxCall('content_table','', true, 'theForm');   

                      " 
                >
              <input  type=button value="Новый круг "  onclick="
                    newMapObject('!!!!НОВЫЙ КРУГ',4,'b_admin', '[56.75823695642427,37.21160531044007,20]');
                    document.theForm.c.value='maps/maps_lhep.cfg';
                    AjaxCall('content_table','', true, 'theForm');   

                      " 
                >


              <input  type=button value="Новый маркер "  onclick="
                    newMapObject('!!!!НОВЫЙ МАРКЕР',3,'m_marker', '[56.75823695642427,37.21160531044007]');
                    document.theForm.c.value='maps/maps_lhep.cfg';
                    AjaxCall('content_table','', true, 'theForm');   

                      " 
                >
                <i id=zoomval>Zoom </i>
                <i id=coord>Coord </i>



<br>

          </b>
<div id=edit_controls style="display:none">
        </input>
    
        <input type=text id=coord value='' size=200 disabled  ><br>
        <b id=objlbl    >Наименование</b> 
        <input type=text id=objname value='' size=100   >
        <input type=button id=ClearBTN value='Очистить'   onClick=" 
            oldcoord=$('##coord').val('');
        ">
        <input type=button id=SaveBTN_a value='Сохранить'    onclick="
          console.log(editing_id);
          roads[editing_id].obj_name=$('##objname').val();
                    saveAll();
                    document.theForm.c.value='maps/maps_lhep.cfg';
                    AjaxCall('content_table','', true, 'theForm');   

        "
        >
</div>
    <div>
        <div id="mapid" style="width: 70%; height: 90%;float:left"></div>
        <div id="listid" style="width:30%; height:90%; overflow:auto;">
        <div class="treeHTML">Объекты
            <div>Аллеи
              <details style="font-size: 150%;"><summary></summary>
                <table id=table_roads border=2   >
                </table>
              </details>
            </div>
            <div>Корпуса
              <details open style="font-size: 150%;"><summary></summary>
                <table id=table_bld border=2   >
                </table>

              </details>
            <div>Markers
              <details open style="font-size: 150%;"><summary></summary>
                <table id=table_markers border=2   >
                </table>

              </details>

            </div>
        </div>

         <table id=1table_roads_view border=1>
         </table>
        </div>
    </div> 
    $GET_DATA [get map object types]
    $SET_PARAMETERS map_object_types={#map_object_types#}
    $LOG2 map_opbect_types #map_object_types# <br>
    
    $INCLUDE [js func]
    $INCLUDE [init icon]
    $INCLUDE [init resize]
    $INCLUDE [init osmmap] 
    $INCLUDE [init ymap]  ??
    $INCLUDE [init map]  ??
    $INCLUDE [init roads]
    $INCLUDE [blink proc]
    

<script>
    function onMapClick(e) {
        navigator.clipboard.writeText(e.latlng.lat+','+e.latlng.lng);
           $('##coord').html('Coord=['+e.latlng.lat+','+e.latlng.lng+']');
    }
    $('##zoomval').html('Zoom='+mymap.getZoom());

    mymap.on('click', onMapClick);
    var popup = L.popup();
    
//    L.marker([56.7581634406245,37.211272716522224], {icon: gateIcon}).bindPopup("Проходная").addTo(mymap);



    </script>

[end]



[init icon]
<script>
    var map_object_types = #map_object_types#;
    var LeafIcon = L.Icon.extend({
        options: {
            iconSize:     [30, 30],
            iconAnchor:   [15, 30],
            popupAnchor:  [-3, -36]
        }
    });
    for (i in map_object_types){
        var a = map_object_types[i];
        console.log('map_object_type='+i+' = '+JSON.stringify(a));
        var icon= new LeafIcon({iconUrl: 'images/'+a['val3']});
        size_x=+a['size_x'];
        size_y=+a['size_y'];

        if ((size_x*size_y)>0){
                    icon.options.iconSize = [size_x, size_y];
                    icon.options.iconAnchor = [parseInt(size_x/2), size_y];
            } 

        map_object_types[i]['icon']=icon;
        
    }
    var LeafIcon = L.Icon.extend({
        options: {
            ashadowUrl: 'leaf-shadow.png',
            iconSize:     [0, 0],
            shadowSize:   [1, 1],
            iconAnchor:   [20, 43],
            shadowAnchor: [4, 62],
            popupAnchor:  [-3, -36]
        }
    });
    var mapIcons = {}

    var greenIcon = new LeafIcon({iconUrl: 'images/leaf-green.png'}),
        redIcon = new LeafIcon({iconUrl: 'images/leaf-red.png'}),
        orangeIcon = new LeafIcon({iconUrl: 'images/leaf-orange.png'}),
        gateIcon = new LeafIcon({iconUrl: 'images/JINR.png'});
    var mapIcons = {"greenIcon":greenIcon,"redIcon":redIcon}

</script>

[end]
