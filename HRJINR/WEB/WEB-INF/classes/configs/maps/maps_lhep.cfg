[comments]
[end]

[description]
[end]
[parameters]
    LOG=ON
    init_coord=56.74079661098066,37.19199176815385
    init_Ycoord=56.75859, 37.218719
    init_zoom=190
    max_zoom=20
[end]



[init new osmmap]
<script>

console.log('leaf '+1)	;
var startPoint = [43.1249, 1.254];

    var mymap = new L.map('mapid', {editable: true}).setView([#init_coord#], 18);
console.log('leaf '+1)	;
   osmUrl = 'https://lt-svr230.jinr.ru/tile/{z}/{x}/{y}.png',

    tilelayer = L.tileLayer(osmUrl, {maxZoom: 21, attribution: 'Data \u00a9 <a href="http://www.openstreetmap.org/copyright"> OpenStreetMap Contributors </a> Tiles \u00a9 HOT'}).addTo(mymap);
var esri = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
maxZoom: 20,
maxNativeZoom: 20,
attribution: '',
});
var layers = L.control.layers({
'Map': tilelayer,
'Satellite': esri,
}, null, {
collapsed: false
}).addTo(mymap);

console.log('leaf '+2)	;

    L.EditControl = L.Control.extend({
        options: {
            position: 'topleft',
            callback: null,
            kind: '',
            html: ''
        },

        onAdd: function (map) {
            var container = L.DomUtil.create('div', 'leaflet-control leaflet-bar'),
                link = L.DomUtil.create('a', '', container);

            link.href = '#';
            link.title = 'Create a new ' + this.options.kind;
            link.innerHTML = this.options.html;
            L.DomEvent.on(link, 'click', L.DomEvent.stop)
                      .on(link, 'click', function () {
                        window.LAYER = this.options.callback.call(map.editTools);
                      }, this);

            return container;
        }

    });
 console.log('leaf 2 1')	;
     
    L.NewLineControl = L.EditControl.extend({

        options: {
            position: 'topleft',
            callback: mymap.editTools.startPolyline,
            kind: 'line',
            html: '\\/\\'
        }

    });

 console.log('leaf 2 2')	;
    L.NewPolygonControl = L.EditControl.extend({

        options: {
            position: 'topleft',
            callback: mymap.editTools.startPolygon,
            kind: 'polygon',
            html: '▰'
        }

    });

    L.NewMarkerControl = L.EditControl.extend({

        options: {
            position: 'topleft',
            callback: mymap.editTools.startMarker,
            kind: 'marker',
            html: '🖈'
        }

    });

    L.NewRectangleControl = L.EditControl.extend({

        options: {
            position: 'topleft',
            callback: mymap.editTools.startRectangle,
            kind: 'rectangle',
            html: '⬛'
        }

    });

    L.NewCircleControl = L.EditControl.extend({

        options: {
            position: 'topleft',
            callback: mymap.editTools.startCircle,
            kind: 'circle',
            html: '⬤'
        }

    });
console.log('leaf '+3)	;

    mymap.addControl(new L.NewMarkerControl());
    mymap.addControl(new L.NewLineControl());
    mymap.addControl(new L.NewPolygonControl());
    mymap.addControl(new L.NewRectangleControl());
    mymap.addControl(new L.NewCircleControl());
</script>



[end]


[get roads]
    select CONCAT("'", id,  
        "T':{'descr':'", REPLACE(REPLACE(descr, '\r', ''), '\n', '') ,
        "','tooltip':'",tooltip,
        "','obj_name':'",obj_name,
        "','points':'",points,
        "','coord_techplan':'",coord_techplan,
        "','size_x':'",size_x,
        "','size_y':'",size_y,
        "','o_type':'",o_type,
        "','show_tt':'",show_tt,
        "','tooltip':'",tooltip,
        "','map_object_type':'",map_object_type,
        "','div_owner':'",div_owner,
        "'},\n") as roads  from map_lhep  
        where 1=1
        and o_type>0
         and   not map_object_type like 'UL_%' ??!utility_lines
          and  map_object_type <> 'b_plan'
        order by map_object_type, obj_name

[end]


[get roads edit]
    select CONCAT("'", id,  
        "T':{'descr':'", REPLACE(REPLACE(descr, '\r', ''), '\n', '') ,
        "','tooltip':'",tooltip,
        "','obj_name':'",obj_name,
        "','points':'",points,
        "','size_x':'",size_x,
        "','size_y':'",size_y,
        "','o_type':'",o_type,
        "','show_tt':'",show_tt,
        "','tooltip':'",tooltip,
        "','div_owner':'",div_owner,
        "','map_object_type':'",map_object_type,
        "'},\n") as roads  from map_lhep  
        where 1=1
          and  map_object_type <> 'b_plan'
        and o_type>0
        and o_type=2
//        where map_object_type like 'm_transport%' ??
and  map_object_type not like 'UL_%' and  map_object_type !='b_roads'  
        order by map_object_type, obj_name

[end]



        where o_type <5
            and area_id = 2 ??LAB_ID=100000
            and area_id = 1 ??LAB_ID=600000




[get map object types]
    select CONCAT("'", parm_name, 
        "':{'name':'",parm_name,
        "','val1':'",val1,
        "','val2':'",val2,
        "','val3':'",val3,
        "','size_x':'",size_x,
        "','size_y':'",size_y,
        "'},") as map_object_types from params 
     where parm_type='map_object_type' or parm_type='map_marker_type' or parm_type='map_figure_type' 
        and not parm_name like 'UL_%' ??!utility_lines
        order by parm_type;
;

[end]


[js func]
    <script>
        var lastZoom;
        var Zoom_tooltipThreshold     = 16;
        var Zoom_objectThreshold     = 15;
        function processZoom(zoom){
            $('##zoomval').html('Zoom='+mymap.getZoom());

            for (a in roads) {
                var obj=roads[a];
                var lobj=obj['leaflet_obj'];
                console.log('zoom='+zoom)
                if ( ( obj['o_type']==2 )|( obj['o_type']==1) | ( obj['o_type']==3  )  ){
                   if (zoom<Zoom_objectThreshold)
                    {   lobj.remove();
                        } else 
                    {   lobj.addTo(mymap)}
                } 



            if (mymap.getZoom() < Zoom_tooltipThreshold) {
                $(".lhep_obj_tooltip").css("display","none")
            } else { 
                $(".lhep_obj_tooltip").css("display","block")
            }

                lastZoom = zoom;


            }
            
        }
        function saveLeaf(leaf) {
                
                for (el in roads) {
                    rt = roads[el] ;
                    if (rt['_leaflet_id'] !=  leaf._leaflet_id) {
                        continue;
                    }
                    var a = leaf._latlngs;
//                    console.log('Нашел!!!');
                    var a = leaf.editing.latlngs[0];
                    var bb = rt['leaflet_obj'].getLatLngs();
                    if (bb.length==1) {a = bb[0]} else {a=bb};
                    var new_l=[];
                     console.log('a='+(typeof a)+' '+a);
                        for (i in a){
                            console.log('I='+(typeof i)+' '+i+' A='+(typeof a[i])+' '+a[i] );
                            var b = a[i];
                            var t = a[i];
                            var t1 = t['lat'];
                            var t2 = t['lng'];
                            new_l.push([t1,t2]);

                        }
                    var coord = JSON.stringify(new_l);
                    console.log(coord);
                    console.log('ID= '+this._leaflet_id);
                    var aa = leaf._latlngs;
                    if ( coord.indexOf("null") >= 0 ){
                        debugger;
                        aaa();
                    }
                    if ( coord.length <20 ){
                        debugger;
                        alert('Ошибка поиска объекта');
                        aaa();
                    }

                    AjaxCall('popupCont', 'c=maps/save_map_object&o_type='+rt['o_type']+'&coord='+coord+'&objname='+el, true);  

                    break;

                }
        }

    </script>


[end]


                'enable_editing(false);'+
                ' obj=roads[this.id].leaflet_obj;'+
                'console.log(this.id+\'=\'+obj);'+
                ' obj.editing.enable();'+



            function saveAll(){
                alert('OLD SAVE !!!!');
                aaa();
                for (el in roads) {
                    rt = roads[el] ;
                    cur_object = rt.leaflet_obj;
                    console.log('id='+el+' '+rt+' '+toString.call(cur_object));
                    var a = cur_object._latlngs;
                    var a = cur_object.editing.latlngs[0];
                    var bb = rt['leaflet_obj'].getLatLngs();
                    if (bb.length==1) {a = bb[0]} else {a=bb};
                    var new_l=[];
                     console.log('a='+(typeof a)+' '+a);
                        for (i in a){
                            console.log('I='+(typeof i)+' '+i+' A='+(typeof a[i])+' '+a[i] );
                            var b = a[i];
                            var t = a[i];
                            var t1 = t['lat'];
                            var t2 = t['lng'];
                            new_l.push([t1,t2]);

                        }
                    var coord = JSON.stringify(new_l);
                    console.log(coord);
                    console.log('ID= '+cur_object._leaflet_id);
                    var aa = cur_object._latlngs;
                    if ( coord.indexOf("null") >= 0 ){
                        debugger;
                        aaa();
                    }
                    if ( coord.length <20 ){
                        debugger;
                        alert('Ошибка поиска объекта');
                        aaa();
                    }
                    el = el.replace('T','');
                    
                    AjaxCall('popupCont', 'c=maps/save_map_object&op=upd&id='+el+'&map_object_type='+rt.map_object_type+'&o_type='+rt['o_type']+'&coord='+coord+'&objname='+rt.obj_name, true);  
                }
                 //$('.map_save_btn').value='aaa';
                    
            };

        function save_all_and_reload(){

                    saveAll();
                    document.theForm.c.value='maps/maps_lhep.cfg';
                    AjaxCall('content_table','', true, 'theForm');   
        }


                    obj.leaflet_obj.setStyle({stroke:true;fillOpacity:0.2});

[blink proc]
<script>
        var blinked = false;
        function procBlink(){
            blinked = !blinked;

            for (cbid in roads){
                let obj =  roads[cbid];
                if (obj['o_type']==3) continue;
                if (!blinked){
//                    console.log('blink '+cbid+' '+' '+obj['obj_name']);
 		try {
                    obj.leaflet_obj.setStyle({stroke:true,fillOpacity:0.3});
		} catch (e) {}

                    continue;
                };
                let obj_blinked = $('##blink'+cbid).prop('checked');
                if (!obj_blinked)  continue;
//                console.log('blink '+cbid+' '+obj_blinked)
                obj.leaflet_obj.setStyle({stroke:false,fillOpacity:0.3});
            }
                setTimeout(procBlink,400);

        }
        //setTimeout(procBlink,200);
</script>
[end]

[init roads]   
    $GET_DATA [get roads edit]
    $LOG2 <br> ============================!!!!roads!!!!=======================================<br>  #roads# <br>
    $SET_PARAMETERS roads={#roads#}
    $LOG2 ============================roads=======================================#roads#<br> 
    $LOG2 <br>============================end roads======================================= <br>
    

    $BREAK ??!roads

   <br> init roads  <br> 

    <script>
        L.control.scale().addTo(mymap);
            function newMapObject(obj_name,o_type,map_object_type, coord){
                    AjaxCall('popupCont', 'c=maps/save_map_object&op=new&id=new&map_object_type='+map_object_type+'&o_type='+o_type+'&coord='+coord+'&objname='+obj_name, true);  
            };
        function redraw_marker(sel){
            var obj_id = sel.id.substring(4);
            obj = roads[obj_id];
            var optionSelected = sel.selectedIndex; 
            var b_value = sel.options[optionSelected].value;
            obj['map_object_type'] = b_value;
            map_object_types[b_value]['icon']
            obj.leaflet_obj.setIcon(map_object_types[b_value]['icon']);
            
        }
        function redraw_poly(){
            
            $.each($.find("select.bld_desc"), function () {
            
                var optionSelected = this.selectedIndex; 
                var b_idr = this.id;
                if (b_idr === 'bld_sel_num')
                    {
                        return;
                     };
                
                var objnum = b_idr.split('_')[1].trim();
                b_obj = roads[objnum];
                if (b_obj['o_type']==3 )
                    {return}
//                console.log(b_idr+' on '+this.style.color);
                var b_color = this.options[optionSelected].style.color;
                var b_value = this.options[optionSelected].value;
//                console.log('set color '+b_color+' val='+b_value);
                this.style.color= b_color;
                var b_idr = this.id;
                
                b_obj.map_object_type = b_value;
                obj = b_obj.leaflet_obj;
                obj.setStyle({fillOpacity:0.20,color:this.style.color});


//                debugger;
                
//                console.log(b_idr+' off '+(toString(obj))+' '+this.style.color);
                
                

            });
        };
        function enable_editing(mode){
            for (a in roads) {
                var obj=roads[a].leaflet_obj;
                if ( mode ) {
                        obj.enableEdit();}
                    else {
                        obj.disableEdit();
                    }

            }

        }
        function beginEditObject(this_el){
                //enable_editing(false);
                el_id=this_el.substr(6);
                document.getElementById('edtext_'+el_id).readOnly = false;
                document.getElementById('edshort_'+el_id).readOnly = false;
                document.getElementById('bld_'+el_id).disabled = false;
                document.getElementById('del_'+el_id).disabled = false;
                obj=roads[el_id].leaflet_obj;
                console.log(el_id+'='+obj);
                obj.enableEdit();
                $('##objname').val(roads[el_id].obj_name);
                //$('##edit_controls').show();
        }
        function saveObject(this_el){
                var el;
                el_id=this_el.substr(6);
                obj=roads[el_id].leaflet_obj;
                    
                obj.disableEdit();
//                $('##edit_controls').show();
                {
                    rt = roads[el_id] ;
                    var this_leaf =rt.leaflet_obj
                    if ( ( rt['o_type'] == 1) | ( rt['o_type'] == 2)) { 
                        var a = this_leaf._latlngs;
//                        var a = this_leaf.editing.latlngs[0];
                        var bb = rt['leaflet_obj'].getLatLngs();
                        if (bb.length==1) {a = bb[0]} else {a=bb};
                        var new_l=[];
                         console.log('a='+(typeof a)+' '+a);
                            for (i in a){
                                console.log('I='+(typeof i)+' '+i+' A='+(typeof a[i])+' '+a[i] );
                                var b = a[i];
                                var t = a[i];
                                var t1 = t['lat'];
                                var t2 = t['lng'];
                                new_l.push([t1,t2]);

                            }
                    }
                    if ( rt['o_type'] == 3)  { 
                        //var a = this_leaf._latlng;
                        var new_l = [];
                        var latlng = rt['leaflet_obj'].getLatLng()
                            {
                                var t1 = latlng['lat'];
                                var t2 = latlng['lng'];
                                new_l.push(t1);
                                new_l.push(t2);

                            }
                    }
                    if ( rt['o_type'] == 4)  { 
                        //var a = this_leaf._latlng;
                        var new_l = [];
                        var latlng = rt['leaflet_obj'].getLatLng()
                            {
                                var t1 = latlng['lat'];
                                var t2 = latlng['lng'];
                                new_l.push(t1);
                                new_l.push(t2);
                                new_l.push(rt['leaflet_obj'].getRadius());

                            }
                    }

                    var coord = JSON.stringify(new_l);
                    console.log(coord);
                    console.log('ID= '+this_leaf._leaflet_id);
                    if ( coord.indexOf("null") >= 0 ){
                        debugger;
                        aaa();
                    }
                    if ( coord.length <20 ){
                        debugger;
                        alert('Ошибка поиска объекта');
                        aaa();
                    }
                   var el_tooltip = $('##edshort_'+el_id).val(); 
                   var el_name = $('##edtext_'+el_id).val();

                document.getElementById('edtext_'+el_id).readOnly = true;
                document.getElementById('edshort_'+el_id).readOnly = true;
                document.getElementById('bld_'+el_id).disabled = true;
                document.getElementById('del_'+el_id).disabled = true;


                     AjaxCall('popupCont', 'c=maps/save_map_object&op=upd&id='+el_id.replace('T','')+'&map_object_type='+rt.map_object_type+'&o_type='+rt['o_type']+'&coord='+coord+'&tooltip='+el_tooltip+'&objname='+el_name, true);  
                    console.log('c=maps/save_map_object&o_type='+rt['o_type']+'&coord='+coord+'&objname='+el_name);

//                     AjaxCall('popupCont', 'c=maps/maps/maps_lhep&op=upd&zoom=='+mymap.zoom'&center='+JSON.stringify([mymap.getCenter().lat,mymap.getCenter().lng]), true);  

                }





        }

        function deleteMapObject(id){
                enable_editing(false);
                
                id = id.replace('T','').replace('del_','');
                AjaxCall('popupCont', 'c=maps/save_map_object&op=del&id='+id, true);  

        }

        function add_object(el,obj){
            
            var road = roads[el];
            var lr=L.layerGroup();
            var rname  =road['obj_name'];
            var tooltip = road['tooltip'];    
//                if (road.o_type =4){
//                    return;
//                };
                console.log('ADD OBJECT '+el+'='+' '+JSON.stringify(road));
            var latlngs = JSON.parse(road['points']);
            var obj_desc = map_object_types[road.map_object_type];
            if(typeof obj_desc == "undefined"){
                debugger;
            }
            var obj_color=obj_desc.val2;
                debugger;
            var polyline ='--';
            if (road['o_type'] == 1) {
                polyline = L.polyline(
                    latlngs
                , { color: '##'+obj_color, weight:4}).addTo(mymap);
                    polyline.setText(rname, {repeat: false,center:true,
                                      offset: 10,
                                      attributes: {'zIndex': 999,'font-weight': 'italic',
                                                   'font-size': '12'}});


            };
            if (road['o_type'] == 2) {
                polyline = L.polygon(
                        latlngs
                    , {fillOpacity:0.1,color:'##'+ obj_color, weight:4}).addTo(mymap);
                if (tooltip.trim().length>0){
                    console.log('tooltip '+tooltip.trim().length+' '+tooltip.trim());
                    polyline.bindTooltip(tooltip,
                       {permanent: true, direction:"center", className: 'lhep_obj_tooltip'}
                    ).openTooltip();
                }    
            }
            if (road['o_type'] == 3) {
                let size_x = +road['size_x'];
                let size_y = +road['size_y'];


                polyline = L.marker(latlngs, {icon: obj_desc['icon']}).addTo(mymap);
                if (size_x * size_x>0){
                    let icon = polyline.options.icon;
                    icon.options.iconSize = [size_x, size_y];
                    icon.options.iconAnchor = [parseInt(size_x/2), size_y];

                    polyline.setIcon(icon);
                }
            }
            if (road['o_type'] == 4) {
                let size_x = +road['size_x'];
                let size_y = +road['size_y'];
                let radius = latlngs.pop();
                polyline = L.circle(latlngs, {radius: radius}).addTo(mymap);
                    polyline.bindTooltip(tooltip,
                       {permanent: true, direction:"center", className: 'lhep_obj_tooltip'}
                    ).openTooltip()

            }



            polyline.bindPopup(rname).on;
            
            road['_leaflet_id'] = polyline._leaflet_id;
            road['leaflet_obj'] = polyline;
//            console.log('1Create line ID= '+polyline._leaflet_id);
//            polyline.on('edit', function() {
//                return 0;
//                
//                    
//            });
            tbl = '--';
            if (road['o_type']==1) { tbl = tbl_roads} 
            if (road['o_type']==2) { tbl = tbl_bld} 
            if (road['o_type']==3) { tbl = tbl_markers} 
            if (road['o_type']==4) { tbl = tbl_bld} 
            console.log(road['o_type'] + ' ~~~~~~~~~~~~~tbl '+tbl );
            if (tbl == '--') return;
            var row=tbl.insertRow( -1);
            var c1 = row.insertCell();
            c1.innerHTML  = '<input class=map_save_btn id=edbtn_'+el+' type=button value="..." onclick="'+
                ' if (this.value==\'save\')  {this.value=\'...\';saveObject(this.id); }   else {editing_id=this.id; beginEditObject(this.id);this.value=\'save\';}                 '+
            '">';
            var c1 = row.insertCell();
            if ((road['o_type']==1 ) | (road['o_type']==2)) {
            c1.innerHTML  = selbtype.replace('sel_num',el);
            }
            if (road['o_type']==3  ) {
            c1.innerHTML  = selmtype.replace('sel_num',el);
            }
            if (road['o_type']==4  ) {
            c1.innerHTML  = selbtype.replace('sel_num',el);
            }

            
            c2 = document.getElementById('bld_'+el.trim());
            var optionSelected = c2.selectedIndex; 
            c2.value = road.map_object_type;
            
            var c1 = row.insertCell();
            c1.innerHTML = '<input type="checkbox" idobj='+el+' id=blink'+el+ '>';
            var c1 = row.insertCell()
            c1.innerHTML = '<input readonly id=edtext_'+el+' type=text value="-----" >';
            $('##edtext_'+el).val(rname);

            var c1 = row.insertCell()
            c1.innerHTML = '<input readonly id=edshort_'+el+' type=text value="-----" >';
            $('##edshort_'+el).val(tooltip);
 

            var c1 = row.insertCell();
            c1.innerHTML  = '<input disabled id=del_'+el+' type=button value="Del" onclick="'+
                ' editing_id=this.id; deleteMapObject(editing_id);document.theForm.c.value=\'maps/maps_lhep.cfg\'; AjaxCall(\'content_table\',\'\', true, \'theForm\');   '+
            '">';
            layerObj.addLayer(polyline);

            polyline.on(
                 'click',
                 function(e) {
                   L.DomEvent.stopPropagation(e);
                 });
        }
//==============================
        var tbl_bld= $('##table_bld')[0];
        var tbl_roads= $('##table_roads')[0];
        var tbl_markers= $('##table_markers')[0];

        var editing_id = '--';
        var selbtype ='#selbtype#';
        var selmtype ='#selmtype#';
        var roads = #roads#;
        console.log(2,'============JS ROADS <br> '+JSON.stringify(roads));
//        var map_marker_types = #map_marker_types#;
//        console.log('map_object_types =  '+JSON.stringify(map_object_types));
        var overlays = {};

        var ovrls = [{},{},{}];
        mymap.createPane('jinr_objects');
        mymap.getPane('jinr_objects').style.zIndex = 2;        
        var layerObj = L.layerGroup([]);
        layerObj.addTo(mymap);    // Adding layer group to map
        for (el in roads) {
            if (el.length==0)   break;
            console.log('===================== el = '+el);
            var road = roads[el];
//            console.log(el+' = '+JSON.stringify(road));
            add_object(el, road);

        }
        layerObj.setZIndex(1)
        
        redraw_poly();
        

//        L.control.layers({},ovrls[1]).addTo(mymap);
//        L.control.layers({},ovrls[2]).addTo(mymap);
    </script>
    
[end]





[init poly]
[end]
[init resize]
  <script>
    document.onresize = function () {
        var w = screen.width;
        var h = screen.height;
        var dv = document.getElementById('mapid');
        console.log('mapid='+dv)
        dv.style.width = w*0.8+"px";
        dv.style.height = h*0.8+"px";
    }
</script>

[end]
style="background-image:url(male.png);"
[get b_types]
    select  concat(' <option value="', trim(parm_name), '"  style=" color:' ,p.val2,'"',
     '>' , TRIM(p.val1), '</option> ') as btypes
    from params p
    WHERE p.parm_type = 'map_object_type'
    and not p.parm_name  like 'UL_%' ??!utility_lines
    order BY p.parm_name;

    select  concat(' <option value="', trim(parm_name), '"  style=" background:url("images/',trim(p.val2),')"',
     '>' , TRIM(p.val1),'<img src="images/trans_min_1.png"/>',
     '</option> ') as mtypes
    from params p
    WHERE p.parm_type = 'map_marker_type'
    and not p.parm_name like 'UL_%' ??!utility_lines
    order BY p.parm_name;

[end]
[report]
<style>
.leaflet-popup-tip-container {
    display: none;
} 
.leaflet-tooltip-top:before,
.leaflet-tooltip-bottom:before,
.leaflet-tooltip-left:before,
.leaflet-tooltip-right:before {
 
    }
.lhep_obj_tooltip {
    position: absolute;
    pointer-events: none;
    background: transparent;
    text-shadow: 1px 1px 2px black, 0 0 1em red; /* Параметры тени */
    color: white; /* Белый цвет текста */
    font-size: 1em; /* Размер надписи */
  border: none
}
.leaflet-tooltip-left.myCSSClass::before {
  border-left-color: cyan;
}
.leaflet-tooltip-right.myCSSClass::before {
  border-right-color: cyan;
}

</style>
    $GET_DATA [get b_types]
    $LOG2 b_types = #btypes# <br>
    $LOG2 m_types = #mtypes# <br>
    $SET_PARAMETERS selbtype=<select disabled id=bld_sel_num class=bld_desc  onchange="redraw_poly()">  #btypes#  </select>
    $SET_PARAMETERS selmtype=<select disabled id=bld_sel_num class=marker_desc  onchange="redraw_marker(this)">  #mtypes#  </select>
    $LOG2 selmtype = #selmtype# <br>
    
    $LOG2 maps ========================<br>
<style>

.blink {
    animation: blink 2s infinite; /* Параметры анимации */
   }
   @keyframes blink {
    from { opacity: 0.51; /* Непрозрачный текст */ }
    to { opacity: 0; /* Прозрачный текст */ }
   }}
</style>

    
              <input  type=button value="off"  onclick="
                        layerTopo.remove();
                      " 
                >

              <input  type=button value="on"  onclick="
                        layerTopo.addTo(mymap);
                      " 
                >




              <input  type=button value="Новая линия"  onclick="
                    var latCenter=mymap.getCenter();
                    console.log('center '+JSON.stringify(latCenter))
                    var coord = [ [ latCenter.lat+0.0003,latCenter.lng ], [ latCenter.lat, latCenter.lng+0.0003] ];
                    console.log(JSON.stringify(coord))
                    newMapObject('!!!!НОВАЯ ЛИНИЯ',1,'b_roads', JSON.stringify(coord));
                    document.theForm.c.value='maps/maps_lhep.cfg';
                    AjaxCall('content_table','', true, 'theForm');   

                      " 
                >
              <input  type=button value="Новое здание "  onclick="
                    var latCenter=mymap.getCenter();
                    console.log('center '+JSON.stringify(latCenter))
                    var coord = [[ latCenter.lat,latCenter.lng ], [ latCenter.lat+0.0003,latCenter.lng ], [ latCenter.lat, latCenter.lng+0.0003] ];
                    console.log(JSON.stringify(coord))

                    newMapObject('!!!!НОВОЕ ЗДАНИЕ',2,'b_admin', JSON.stringify(coord));
                    document.theForm.c.value='maps/maps_lhep.cfg';
                    AjaxCall('content_table','', true, 'theForm');   

                      " 
                >
              <input  type=button value="Новый круг "  onclick="
                    newMapObject('!!!!НОВЫЙ КРУГ',4,'b_admin', '[56.75823695642427,37.21160531044007,20]');
                    document.theForm.c.value='maps/maps_lhep.cfg';
                    AjaxCall('content_table','', true, 'theForm');   

                      " 
                >


              <input  type=button value="Новый маркер "  onclick="
                      var latCenter = mymap.getCenter();
                        var coord = [
                          [latCenter.lat, latCenter.lng],
                          [latCenter.lat, latCenter.lng + 0.003],
                        ];


                    newMapObject('!!!!НОВЫЙ МАРКЕР',3,'m_marker', coord);
                    document.theForm.c.value='maps/maps_lhep.cfg';
                    AjaxCall('content_table','', true, 'theForm');   

                      " 
                >
                <i id=zoomval>Zoom </i>
                <i id=coord>Coord </i>



<br>

          </b>
<div id=edit_controls style="display:none">
        </input>
    
        <input type=text id=coord value='' size=200 disabled  ><br>
        <b id=objlbl    >Наименование</b> 
        <input type=text id=objname value='' size=100   >
        <input type=button id=ClearBTN value='Очистить'   onClick=" 
            oldcoord=$('##coord').val('');
        ">
        <input type=button id=SaveBTN_a value='Сохранить'    onclick="
          console.log(editing_id);
          roads[editing_id].obj_name=$('##objname').val();
                    saveAll();
                    document.theForm.c.value='maps/maps_lhep.cfg';
                    AjaxCall('content_table','', true, 'theForm');   

        "
        >
</div>
    <div>
        <div id="mapid" style="width: 70%; height: 90%;float:left"></div>
        <div id="listid" style="width:30%; height:90%; overflow:auto;">
        <div class="treeHTML">Объекты
            <div>Аллеи
              <details style="font-size: 150%;"><summary></summary>
                <table id=table_roads border=2   >
                </table>
              </details>
            </div>
            <div>Корпуса
              <details open style="font-size: 150%;"><summary></summary>
                <table id=table_bld border=2   >
                </table>

              </details>
            <div>Markers
              <details open style="font-size: 150%;"><summary></summary>
                <table id=table_markers border=2   >
                </table>

              </details>

            </div>
        </div>

         <table id=1table_roads_view border=1>
         </table>
        </div>
    </div> 
    $GET_DATA [get map object types]
    $SET_PARAMETERS map_object_types={#map_object_types#}
    $LOG2 map_opbect_types #map_object_types# <br>
    
    $INCLUDE [js func]
    
//    $INCLUDE [init resize]
    $INCLUDE [init new osmmap]
    $INCLUDE [init icon]
    $INCLUDE [init roads]
    $INCLUDE [blink proc]



  

    

<script>
    function onMapClick(e) {
        navigator.clipboard.writeText(e.latlng.lat+','+e.latlng.lng);
           $('##coord').html('Coord=['+e.latlng.lat+','+e.latlng.lng+']');
    }
    $('##zoomval').html('Zoom='+mymap.getZoom());

    mymap.on('click', onMapClick);
    var popup = L.popup();
    
//    L.marker([56.7581634406245,37.211272716522224], {icon: gateIcon}).bindPopup("Проходная").addTo(mymap);



    </script>

[end]


[init icon]
<script>
    var map_object_types = #map_object_types#;
    var LeafIcon = L.Icon.extend({
        options: {
            iconSize:     [30, 30],
            iconAnchor:   [15, 30],
            popupAnchor:  [-3, -36]
        }
    });
    for (i in map_object_types){
        var a = map_object_types[i];
        console.log('map_object_type='+i+' = '+JSON.stringify(a));
        var icon= new LeafIcon({iconUrl: 'images/'+a['val3']});
        size_x=+a['size_x'];
        size_y=+a['size_y'];

        if ((size_x*size_y)>0){
                    icon.options.iconSize = [size_x, size_y];
                    icon.options.iconAnchor = [parseInt(size_x/2), size_y];
            } 

        map_object_types[i]['icon']=icon;
        
    }
    var LeafIcon = L.Icon.extend({
        options: {
            ashadowUrl: 'leaf-shadow.png',
            iconSize:     [0, 0],
            shadowSize:   [1, 1],
            iconAnchor:   [20, 43],
            shadowAnchor: [4, 62],
            popupAnchor:  [-3, -36]
        }
    });
    var mapIcons = {}

    var greenIcon = new LeafIcon({iconUrl: 'images/leaf-green.png'}),
        redIcon = new LeafIcon({iconUrl: 'images/leaf-red.png'}),
        orangeIcon = new LeafIcon({iconUrl: 'images/leaf-orange.png'}),
        gateIcon = new LeafIcon({iconUrl: 'images/JINR.png'});
    var mapIcons = {"greenIcon":greenIcon,"redIcon":redIcon}


var conf = [{ "topleft" : [56.733635762,37.182473482],
   "topright" : [56.733842637, 37.186540378],
   "bottomleft" : [56.731400428, 37.182849959],
   "image" : "4-B-V.jpg"},
{"topleft" : [56.735871094,37.182096943],
 "topright" : [56.736077991, 37.186164076],
 "bottomleft" : [56.733635762, 37.182473482],
 "image" : "4-B-A.jpg"},
{"topleft" : [56.736077991, 37.186164076],
 "topright" : [56.736284747, 37.190231257],
 "bottomleft" : [56.733842637, 37.186540378],
 "image" : "4-B-B.jpg"},
{"topleft" : [56.733842637, 37.186540378],
 "topright" : [56.734049388,37.190607319],
 "bottomleft" : [56.731607289, 37.186916616],
 "image" : "4-B-G.jpg"},
{"topleft" : [56.733635762, 37.182473482],
 "topright" : [56.745226170, 37.188726576],
 "bottomleft" : [56.742784015, 37.185034910],
 "image" : "No (32-Á-á)"},
{"topleft" : [56.745226170, 37.188726576],
 "topright" : [56.745432855, 37.192794760],
 "bottomleft" : [56.742990819, 37.189102808],
 "image" : "33-A-A.jpg"},
{"topleft" : [56.745432855, 37.192794760],
 "topright" : [56.745639399, 37.196862990],
 "bottomleft" : [56.743197483, 37.193170769],
 "image" : "33-A-B.jpg"},
{"topleft" : [56.742784015, 37.185034910],
 "topright" : [56.742990819,37.189102808],
 "bottomleft" : [56.740548676, 37.185411351],
 "image" : "32-B-G.jpg"},
{"topleft" : [56.742990819, 37.189102808],
 "topright" : [56.743197483, 37.193170769],
 "bottomleft" : [56.740755467, 37.189479010],
 "image" : "33-A-V.jpg"},
{"topleft" : [56.743197483, 37.193170769],
 "topright" : [56.743404022, 37.197238760],
 "bottomleft" : [56.740962117, 37.193546715],
 "image" : "33-A-G.jpg"},
{"topleft" : [56.743404022, 37.197238760],
 "topright" : ['?', '?'],
 "bottomleft" : [56.741168643, 37.197614467],
 "image" : "No (33-B-V)"},
{"topleft" : [56.740341752, 37.181343739],
 "topright" : [56.740548676, 37.185411351],
 "bottomleft" : [56.738106424, 37.181720356],
 "image" : "32-G-A.jpg"},
{"topleft" : [56.740548676, 37.185411351],
 "topright" : [56.740755467, 37.189479010],
 "bottomleft" : [56.738313335, 37.185787745],
 "image" : "32-G-B.jpg"},
{"topleft" : [56.740755467, 37.189479010],
 "topright" : [56.740962117, 37.193546715],
 "bottomleft" : [56.738520104, 37.189855165],
 "image" : "33-V-A.jpg"},
{"topleft" : [56.740962117, 37.193546715],
 "topright" : [56.741168643, 37.197614467],
 "bottomleft" : [56.738726749, 37.193922631],
 "image" : "33-V-V.jpg"},
{"topleft" : [56.737899381, 37.177653030],
 "topright" : [56.738106424, 37.181720356],
 "bottomleft" : [56.735664064, 37.178029855],
 "image" : "No (32-Â-ã)"},
{"topleft" : [56.738106424, 37.181720356],
 "topright" : [56.738313335, 37.185787745],
 "bottomleft" : [56.735871094, 37.182096943],
 "image" : "32-G-V.jpg"},
{"topleft" : [56.738313335, 37.185787745],
 "topright" : [56.738520104, 37.189855165],
 "bottomleft" : [56.736077991, 37.186164076],
 "image" : "32-G-G.jpg"},
{"topleft" : [56.738520104, 37.189855165],
 "topright" : [56.738726749, 37.193922631],
 "bottomleft" : [56.736284747, 37.190231257],
 "image" : "33-V-V.jpg"},
{"topleft" : [56.738726749, 37.193922631],
 "topright" : [56.738933262, 37.197990144],
 "bottomleft" : [56.736491379, 37.194298501],
 "image" : "33-V-G.jpg"},
{"topleft" : [56.735664064, 37.178029855],
 "topright" : [56.735871094, 37.182096943],
 "bottomleft" : [56.733428745, 37.178406618],
 "image" : "4-A-B.jpg"},
{"topleft" : [56.735871094, 37.182096943],
 "topright" : [56.736077991, 37.186164076],
 "bottomleft" : [56.733635762, 37.182473482],
 "image" : "4-B-A.jpg"},
{"topleft" : [56.736077991, 37.186164076],
 "topright" : [56.736284747, 37.190231257],
 "bottomleft" : [56.733842637, 37.186540378],
 "image" : "4-B-B.jpg"},
{"topleft" : [56.736284747, 37.190231257],
 "topright" : [56.736491379, 37.194298501],
 "bottomleft" : [56.734049388, 37.190607319],
 "image" : "5-A-A.jpg"},
{"topleft" : [56.731193424, 37.178783350],
 "topright" : [56.731400428, 37.182849959],
 "bottomleft" : [56.728958101, 37.179160035],
 "image" : "No (4-Â-á)"},
{"topleft" : [56.731400428, 37.182849959],
 "topright" : [56.731607289, 37.186916616],
 "bottomleft" : [56.729165082, 37.183226406],
 "image" : "No (4-Ã-à)"},
{"topleft" : [56.731607289, 37.186916616],
 "topright" : [56.731814028, 37.190983335],
 "bottomleft" : [56.729371940, 37.187292823],
 "image" : "No (4-Ã-á)"},

 {"topleft" : [56.762318215, 37.214581569],
 "topright" : [56.762524056, 37.218651770],
 "bottomleft" : [56.760082778, 37.214956468],
 "image" : "21-B-G.jpg"},
 {"topleft" : [56.760082778, 37.214956468],
 "topright" : [56.760288615, 37.219026413],
 "bottomleft" : [56.757847348, 37.215331321],
 "image" : "21-G-B.jpg"},
 {"topleft" : [56.757847348, 37.215331321],
 "topright" : [56.758053171, 37.219401027],
 "bottomleft" : [56.755611916, 37.215706111],
 "image" : "21-G-G.jpg"},
 {"topleft" : [56.762524056, 37.218651770],
 "topright" : [56.762729773, 37.222722001],
 "bottomleft" : [56.760288615, 37.219026413],
 "image" : "22-A-V.jpg"},
 {"topleft" : [56.760288615, 37.219026413],
 "topright" : [56.760494319, 37.223096405],
 "bottomleft" : [56.758053171, 37.219401027],
 "image" : "22-V-A.jpg"},

// {"topleft" : [56.760494319, 37.223096405],
// "topright" : [, ],
// "bottomleft" : [56.758258862, 37.223470779],
// "image" : "22-V-B.jpg"}
];
    var config = conf;
 console.log( 'var layerTopo = L.layerGroup([])');
mymap.createPane('topoPane');
mymap.getPane('topoPane').style.zIndex = 50;

var ovrs = [];
$LOG2 map_topo = #map_topo# #utility_lines# <br>
makeOverlay(config,ovrs);  ??map_topo

        function makeOverlay(conf_data,ovrs){
         console.log('makeOverlay'); 
            let deltaX=0.00002;
            let deltaY=0.00010;
            for (let i = 0; i < conf_data.length; i++){
                   console.log('makeOverlay '+conf_data[i].image); 

                if (conf_data[i].image.indexOf("No (") == -1){
                    var topleft = L.latLng(conf_data[i].topleft[0]+deltaX,conf_data[i].topleft[1]+deltaY),
                        topright = L.latLng(conf_data[i].topright[0]+deltaX, conf_data[i].topright[1]+deltaY),
                        bottomleft = L.latLng(conf_data[i].bottomleft[0]+deltaX, conf_data[i].bottomleft[1]+deltaY);
                    var imageUrl = "img/" + conf_data[i].image;
                    let lo = L.imageOverlay.rotated(imageUrl, topleft, topright, bottomleft,{opacity:0.6});
                    ovrs.push(lo);
                }
            }
        }
        var layerTopo = L.layerGroup(ovrs);
//        layerTopo.addTo(mymap)

console.log('adde to map '); 
        // Adding layer group to map


</script>

[end]

