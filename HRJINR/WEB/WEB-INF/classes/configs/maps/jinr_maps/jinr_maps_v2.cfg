


[comments]
[end]

[description]
[end]
[parameters]
    LOG=ON
    $LOG2 LAB_ID #LAB_ID#
    init_coord=56.7431944658852,37.197022437976564 ??LAB_ID=600000
    init_coord=56.75851581075622,37.21783696637258  ??LAB_ID=100000

    init_coord=56.74756142300095,37.199616213816114
    init_Ycoord=56.74240648238345,37.19204033649988 ??LAB_ID=600000
    init_Ycoord=56.75859, 37.218719
    $LOG2 LAB_ID #LAB_ID# #init_Ycoord#
    init_zoom=14
    max_zoom=20
[end]

[get b_types]
    select  concat(' <option value="', trim(parm_name), '"  style=" color:' ,p.val2,'"',
     '>' , TRIM(p.val1), '</option> ') as btypes
    from params p
    WHERE p.parm_type = 'map_object_type'
    and not p.parm_name  like 'UL_%' 
    order BY p.parm_name;

    select  concat(' <option value="', trim(parm_name), '"  style=" background:url("images/',trim(p.val2),')"',
     '>' , TRIM(p.val1),'<img src="images/trans_min_1.png"/>',
     '</option> ') as mtypes
    from params p
    WHERE p.parm_type = 'map_marker_type'
    and not p.parm_name like 'UL_%' 
    order BY p.parm_name;

[end]





[init local osmmap]
<script>
    osmUrl = 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
   osmUrl = 'https://lt-svr230.jinr.ru/tile/{z}/{x}/{y}.png',
      osmAttribution = 'Map data <a target="_blank" href="http://www.JINR.RU">jinr.ru	</a>' +
        ' contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/"></a>',
      osmLayer = new L.TileLayer(osmUrl, {
          maxZoom: #max_zoom#+3,
	  maxNativeZoom: #max_zoom#,
          attribution: osmAttribution
        }),
      baseMaps = {"OpenStreetMap": osmLayer},
      layersControl = new L.Control.Layers(baseMaps);
var esri = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
maxZoom: 20,
maxNativeZoom: 18,
attribution: '',
});
      mymap = new L.Map('mapid_view', {
          center: new L.LatLng(#init_coord#),
          zoom: #init_zoom#,
          layers: [osmLayer]
        });

var layers = L.control.layers({
'Map': osmLayer,
'Satellite': esri,
}, null, {
collapsed: false
}).addTo(mymap);


      var ctrl = L.control.scale({position:'topleft',metric:true}).addTo(mymap);
      popup = new L.Popup();
        mymap.on('zoom', function() {
            processZoom(mymap.getZoom());

        });

</script>
[end]

[report]
  $INCLUDE dat/common.dat[head] ??   

    $INCLUDE maps/jinr_maps/var2[main]
[end]



[report old]
<style>
    $INCLUDE maps/kap_css[main]
</style>
  $LOG2 LAB_ID #LAB_ID# #init_coord# #init_zoom# in_frame #in_frame# <br>


<style>
    .lhep_obj_popup1 {
        transform: none !important;
        position: absolute;
        top: 60px !important;
        left: 20px !important;
    }
/* css to customize Leaflet default styles  */

.leaflet-popup-content-wrapper {
     background: #e0e0e0;
    color: #234c5e;
    margin:10;
    padding:10;

}

.leaflet-popup-content-wrapper .leaflet-popup-content {
     background: #e0e0e0;
        color: #234c5e;
    margin:10;
    padding:10;
}

.leaflet-popup-tip-container {
}
.popupCustom .leaflet-popup-tip,
.popupCustom .leaflet-popup-content-wrapper {
    background: #e0e0e0;
    color: #234c5e;
}
</style>
<style>
.treeHTML {
  line-height: normal;
}
.treeHTML details {
  display: block;
}
.treeHTML div {
  position: relative;
  margin: 0 0 0 .5em;
  padding: 0 0 0 1.2em;
}
.treeHTML div:not(:last-child) { /* необязательно */
  border-left: 1px solid #ccc;
}
.treeHTML div:before { /* необязательно */
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 1.1em;
  height: .5em;
  border-bottom: 1px solid #ccc;
}
.treeHTML div:last-child:before { /* необязательно */
  border-left: 1px solid #ccc;
}
.treeHTML summary { /* стилями можно задать любую форму, например, тот же плюс. Я специально не стала усложнять, чтобы можно было проще разобраться в коде */
  position: absolute;
  top: 0;
  left: 0;
  cursor: pointer;
}
.treeHTML details[open] summary { /* убрать рамку при фокусе */
  outline: none;
}
</style>
<style>
.leaflet-popup-tip-container {
    display: none;
} 
.leaflet-tooltip-top:before,
.leaflet-tooltip-bottom:before,
.leaflet-tooltip-left:before,
.leaflet-tooltip-right:before {
 
    }
.lhep_obj_tooltip {
    position: absolute;
    pointer-events: none;
    background: none /* transparent*/;
    text-shadow: 2px 2px 2px black, 0 0 1em red; /* Параметры тени */
    color: white; /* Белый цвет текста */
    font-size: 1em; /* Размер надписи */
    border: none;
}
.leaflet-tooltip-left.myCSSClass::before {
  border-left-color: cyan;
}
.leaflet-tooltip-right.myCSSClass::before {
  border-right-color: cyan;
}

</style>

    $GET_DATA [get b_types]

    $LOG2 b_types = #btypes# <br>
    $LOG2 m_types = #mtypes# <br>
    $SET_PARAMETERS selbtype=<select disabled id=bld_sel_num class=bld_desc  onchange="redraw_poly()">  #btypes#  </select>
    $SET_PARAMETERS selmtype=<select disabled id=bld_sel_num class=marker_desc  onchange="redraw_marker(this)">  #mtypes#  </select>
    $LOG2 selmtype = #selmtype# <br>
    $LOG2 maps ========================<br>
    $GET_DATA [type tables]
    $LOG2 maps ========================<br>
    $LOG2 type_tables #type_tables#
    $LOG2 maps ========================<br>
    $INCLUDE [search func]

    <div>
        <div id="mapid_view" style="width: 80%; height: 100%;float:left"></div>
        <div id="listid_view" style="width:20%; height:90%; overflow:auto;">
    <label for="topo_slider">Topographic map opacity</label><br>  ??map_topo
    <input type="range" id="topo_slider" name="topo_slider" min="0" max="100" value="60" step="1" onInput="console.log(this.value)"><br>??map_topo

<script>
var i = document.getElementById('topo_slider');

  i.addEventListener('input', function () {
      console.log(this.value);
      for (i in ovrs) {
        console.log(i);
        ovrs[i].setOpacity(this.value/100);
      }
    }, false);
</script>


              <input  type=button value="Topomap off"  onclick="layerTopo.remove();" > ??map_topo

              <input  type=button value="Topomap on"  onclick="layerTopo.addTo(mymap);"> ??map_topo

                <div class=searchbox>
                <h3>
                    Поиск сотрудников
                </h3>    
		<br>
                    <input id=srcfio type=text >
                    <div id=srcres>
                        <table id=srctbl>
                        </table>
                    </div>

                    
                </div>
                <div class=searchbox>
                <h3>
                    Поиск зданий
                </h3>    
<br>
                    <input id=srcbld type=text >
                    <div id=src_bld_res>
                        <table id=src_bld_tbl>
                        </table>
                    </div>

                    
                </div>


            <div class="treeHTML" style1="position:absolute;top:120;left:10;z-index: 999;"><h3>Объекты</h3><h4>
                #type_tables#
            </h4>
            </div>
            
        </div>
    </div> 
    $GET_DATA maps/maps_lhep[get map object types]

    $SET_PARAMETERS map_object_types={#map_object_types#}
    $LOG2 map_opbect_types #map_object_types# <br>
    
    $INCLUDE [js func]
    $INCLUDE maps/maps_lhep[init resize] ??!in_frame=Y
    $INCLUDE [init local osmmap] 
    $INCLUDE maps/maps_lhep[init icon] 
    $INCLUDE [init roads]
    $INCLUDE [blink proc]
    $GET_DATA [get multilang support]
    
    <script>
	var mpdiv = document.getElementById('mapid_view');
	mpdiv.style.width = "80%";
        processZoom(mymap.getZoom())
    </script>
$JS{
        var trans = '['+prm('trans')+']';
        setPrm('trans',trans);
$JS}
<script>
    var trans = #trans#;
    function trans_lng(lang){
    console.log("LANGUAGE "+lang+' '+lang.toUpperCase());

        if (lang.toUpperCase() == 'RU'){
            return;
        }
        if (lang.toUpperCase() == 'EN'){

        let lngElements = document.getElementsByTagName("lng");
        console.log('lngElements   '+lngElements);
        for (let i = 0; i < lngElements.length; i++){
            console.log('lng   '+lngElements[i].innerHTML);
    //        if (lngElements[i].innerHTML.length>14){continue;}
            for (j in trans){
                console.log('lng   '+lngElements[i].innerHTML+' '+trans[j][1].toUpperCase().trim());
                if (trans[j][1].toUpperCase().trim() == lngElements[i].innerHTML.toUpperCase().trim()){
                    lngElements[i].innerHTML = trans[j][0];
                    break;
                }
            }
        }
        }

    }

    trans_lng("#lang#")
</script>

[end]
[get multilang support]
    select concat('["',REPLACE(REPLACE(en, '\r', ''), '\n', ''),'","',REPLACE(REPLACE(ru, '\r', ''), '\n', ''),'"],') as trans from lang;
[end]
[get time tables]
select concat('["',NAME, '","',
REPLACE(
REPLACE(
REPLACE(
REPLACE(time_table, '\r', ''), '\n', '')
,'"','''')
,';','  ')
,'"],') as timetables  from time_tables
[end]
[blink proc]
<script>
    function checkType(inputEl){
        let idobj = inputEl.attributes.idobj;
         console.log(idobj.nodeValue);
        //let showList = document.getElementByClass('show_'+idobj.nodeValue);
        $('.'+'show_'+idobj.nodeValue).prop('checked', inputEl.checked);
    }
        var blinked = false;
        function procBlink(){
            //return;
            blinked = !blinked;

            for (cbid in roads){
                let obj =  roads[cbid];
                if (obj['o_type']==3) {
                    
                    if (!blinked){
                        obj.leaflet_obj.setOpacity(1);

                        continue;
                    };
                    let obj_blinked = $('##blink'+cbid).prop('checked');
                    if (!obj_blinked)  continue;
                    obj.leaflet_obj.setOpacity(0);
                    continue;
                }
                if (obj['o_type']==1 && ( obj.map_object_type.indexOf('UL_')>=0 | road.map_object_type.indexOf('l_tr')>=0 ) ) {
                    let obj_blinked = $('##blink'+cbid).prop('checked');
                    if (!obj_blinked)  {
                        obj.leaflet_obj.remove()
                    } else {    
                    obj.leaflet_obj.addTo(mymap);
                    }
                    continue;
                }


                if (!blinked){
                    obj.leaflet_obj.setStyle({stroke:true,color:obj['o_color']});
                    continue;
                };
                let obj_blinked = $('##blink'+cbid).prop('checked');
                if (!obj_blinked)  continue;
                obj.leaflet_obj.setStyle({stroke:false,color:'##00FFFF'});
            }
                setTimeout(procBlink,400);

        }
        setTimeout(procBlink,200);
</script>
[end]

  


[type tables]
select CONCAT("<div 
      style=\"color:",val2,"\" 
      ><LNG>",val1, 
      "<input type=checkbox idobj=", parm_name," onclick='checkType(this);' >",
       "</LNG><details  style=\"font-size: 150%\"><summary></summary><table id=", parm_name, 
        " border=2   > </table> </details></div>") type_tables 
          from params 
   where sort >0 
  and not parm_name like 'UL_%' 

  ORDER BY parm_name, val2, sort;
[end]



[js func]
 <script>
    var doSubmit=function(){return};
$("#srcfio").on("keyup", function(event) {
    var i = event.keyCode;
    if ( i===13 ) {
        let stbl= $('##srctbl')[0];
        //debugger;
        if (typeof stbl  == "undefined" ) return;
        let row=stbl.rows[1]
        if (typeof row  == "undefined" )return;

        let theclick = new CustomEvent("click");
        row.dispatchEvent(theclick) ;
        row.click();
    } else
    {    fillSearch()
    }
});

  function fillBuildSearch(){
    redmarker.remove();
    let stbl= $('##src_bld_tbl')[0];
    $('##src_bld_res').html('');
    let srcbld = $('##srcbld').val();
    if (srcbld.trim().length<1) {
        return
    };
    //console.log('src='+srcfio);
    
    AjaxCall('src_bld_res', 'c=maps/get_building_list&srcbld='+srcbld, true);  
  }



$("#srcbld").on("keyup", function(event) {
    var i = event.keyCode;
    if ( i===13 ) {
        let stbl= $('##src_bld_tbl')[0];
        //debugger;
        if (typeof stbl  == "undefined" ) return;
        let row=stbl.rows[1]
        if (typeof row  == "undefined" )return;

        let theclick = new CustomEvent("click");
        row.dispatchEvent(theclick) ;
        row.click();
    } else
    {    
        fillBuildSearch()
    }
});



       function centerObj(b_id){
        //console.log
            mymap.setZoom(18);
            obj=roads[b_id+'T'];
            let center='';     
            if (obj.o_type == 3){
                center = obj.leaflet_obj.getLatLng();
            } else {
                center = obj.leaflet_obj.getCenter();
            }
            console.log(b_id+' centerObj '+obj.o_type +' '+JSON.stringify(center));
            redmarker.setLatLng(center).addTo(mymap);
            mymap.setView(center,18,{paddingTopLeft:[200,200]});
            mymap.setView(center,18,{paddingTopLeft:[100,100]});

            
//           $('##blink'+b_id+'T').prop('checked',true);
//            setTimeout(stopBlink,10000,'blink'+b_id+'T');
//           setTimeout(center2,400,center);
       }
       function stopBlink(blink_id){
        $('##'+blink_id).prop('checked',false);
       }
       function center2(center){
          mymap.panTo(center);
       }



        function centerMap(el){
            if ( obj.map_object_type.indexOf('UL_')<0 & obj.map_object_type.indexOf('l_tr')<0 )
            { mymap.setZoom(16);}
            id=el.id.replace('blink','');
            obj=roads[id];
            let center='';     
            if ((3==obj.o_type)|(4==obj.o_type) ){
                
                center = obj.leaflet_obj.getLatLng();
            } else {
            if ( obj.map_object_type.indexOf('UL_')<0 & obj.map_object_type.indexOf('l_tr')<0 ) {

                center = obj.leaflet_obj.getCenter();}
            }
            mymap.panTo(center);
            console.log(this+' '+el+' '+id+' '+obj+' center='+JSON.stringify(center));
        }
        var lastZoom;
        var Zoom_tooltipThreshold     = 17;
        var Zoom_objectThreshold     = 1;
        var Zoom_signThreshold     = 15;
        function processZoom(zoom){
            $('##zoomval').html('Zoom='+mymap.getZoom());
            console.log(zoom+' process mapZoom='+mymap.getZoom());
            for (a in roads) {
                var obj=roads[a];
                var lobj=obj['leaflet_obj'];
                //console.log('zoom='+zoom)
                if ( ( ( obj['o_type']==1) | ( obj['o_type']==3  )   ) ){
                   if (obj.map_object_type.indexOf('UL_')<0 & obj.map_object_type.indexOf('l_tr')<0) {
                    console.log(' OBJ = '+obj.obj_name);
                    if (zoom<Zoom_signThreshold)
                     {   
                        lobj.remove();
//                        console.log('remove '+obj.obj_name);
                         } else 
                     {   
                        lobj.addTo(mymap);
//                      console.log('add '+obj.obj_name);
                      }
                   }   else {continue};
                } 

                if ( ( obj['o_type']==2 ) | ( obj['o_type']==4  ) ){
                   if (zoom<Zoom_objectThreshold)
                    {   lobj.remove();
                        } else 
                    {   lobj.addTo(mymap)}
                } 


            if (mymap.getZoom() < Zoom_tooltipThreshold) {
                $(".lhep_obj_tooltip").css("display","none")
            } else { 
                $(".lhep_obj_tooltip").css("display","block")
            }

                lastZoom = zoom;


            }
            
        }
    
    </script>
[end]

[search func]
<script>
  function fillSearch(){
    redmarker.remove();
    let stbl= $('##srctbl')[0];
    $('##srcres').html('');
    srcfio = $('##srcfio').val();
    if (srcfio.trim().length<2) {
        return
    };
    //console.log('src='+srcfio);
    
    AjaxCall('srcres', 'c=getsotrlist&srcfio='+srcfio, true);  
  }
</script>
[end]
    $JS{ 
        var roads = prm('roads');
        roads = roads.replace(/[^\x20-\x7E]/gmi, "");
        setPrm('roads',roads);

[init roads]   
    $GET_DATA maps/maps_lhep[get roads]
    $SET_PARAMETERS roads={#roads#}
    $GET_DATA [get time tables]
    $LOG2 timetables=#timetables# <br>
    $SET_PARAMETERS timetables=[#timetables#]
    $LOG2 timetables2=#timetables# <br>


    $BREAK ??!roads

    <script>
      

        mymap.on('popupopen', function(e) {
         var px = mymap.project(e.target._popup._latlng); // find the pixel location on the map where the popup anchor is
        px.y -= e.target._popup._container.clientHeight/2; // find the height of the popup container, divide by 2, subtract from the Y axis of marker location
        mymap.panTo(mymap.unproject(px),{animate: true}); // pan to new center
    });



        
            function newMapObject(obj_name,o_type,map_object_type, coord){
                    AjaxCall('popupCont', 'c=maps/save_map_object&op=new&id=new&map_object_type='+map_object_type+'&o_type='+o_type+'&coord='+coord+'&objname='+obj_name, true);  
            };
        function redraw_marker(sel){
            var obj_id = sel.id.substring(4);
            obj = roads[obj_id];
            var optionSelected = sel.selectedIndex; 
            var b_value = sel.options[optionSelected].value;
            obj['map_object_type'] = b_value;
            map_object_types[b_value]['icon']
            obj.leaflet_obj.setIcon(map_object_types[b_value]['icon']);
            
        }

        function add_object(el,obj){
            var road = roads[el];
            var lr=L.layerGroup();
            var rname  =road['obj_name'];
            var tooltip = road['tooltip'];    
            
//            console.log('el='+el+' road name'+rname);
            var latlngs = JSON.parse(road['points']);
            //debugger;
            var obj_desc = map_object_types[road.map_object_type];
            //console.log('Add el='+el+' begin el'+JSON.stringify(road)+' obj_type='+road.map_object_type+' color='+obj_desc.val2);
            if(typeof obj_desc == "undefined"){
                //debugger;
            }
            var obj_color=obj_desc.val2;
            road['o_color'] = '##'+obj_color;
            var polyline ='--';
            if (road['o_type'] == 1) {
                polyline = L.polyline(latlngs, {color: '##'+obj_color, weight:4});
                polyline.setText(road['tooltip'], {repeat: false,center:true,
                                      offset: 10,
                                      attributes: {'font-weight': 'italic',
                                                   'font-size': '12'}});
                console.log(road.map_object_type + '===' + road.map_object_type.indexOf('UL_'))
                
                if  (road.map_object_type.indexOf('UL_')<0 & road.map_object_type.indexOf('l_tr')<0) {
                        polyline.addTo(mymap);    
                    } 
                else {
                    console.log(' bint pop up '+road['descr'])
                    for (i in timetables){
                        if (road.obj_name.trim() == timetables[i][0].trim()){
                            polyline.bindPopup('<table>' + timetables[i][1] + '</table>'  ,{autoPanPaddingTopLeft:[50,50], className: 'lhep_obj_popup'}).on;
                            break;
                        }
                    }
                  
                }

            };
            if (road['o_type'] == 2) {
                polyline = L.polygon(
                        latlngs
                    , {fillOpacity:0.51,color:'##'+ obj_color, weight:2}).addTo(mymap);
//                    polyline.bindTooltip(road['tooltip'],
//                       {permanent: true, direction:"center", className: 'lhep_obj_tooltip'}
//                    ).openTooltip()
            }
            if (road['o_type'] == 3) {
                let size_x = +road['size_x'];
                let size_y = +road['size_y'];


                polyline = L.marker(latlngs, {icon: obj_desc['icon']}).addTo(mymap);
                

                if (size_x * size_x>0){
                    let icon = polyline.options.icon;
                    icon.options.iconSize = [size_x, size_y];
                    icon.options.iconAnchor = [parseInt(size_x/2), size_y];

                    polyline.setIcon(icon);
                }
            }
            if (road['o_type'] == 4) {
                let size_x = +road['size_x'];
                let size_y = +road['size_y'];
                let radius = latlngs.pop();
                polyline = L.circle(latlngs, {fillOpacity:0.51,color:'##'+ obj_color,radius: radius}).addTo(mymap);

            }


            if (road['show_tt'] == 0){
//                    polyline.bindTooltip(road['tooltip'],
//                       {permanent: true, direction:"center", className: 'lhep_obj_tooltip'}
//                    ).openTooltip()
            }

 
            if (road['descr'].trim().length>0){
                polyline.bindPopup(road['descr'],{autoPanPaddingTopLeft:[50,50], className: 'lhep_obj_popup'}).on;
            }
            if (road.map_object_type.indexOf('b_LRB')>-1){
                let descr = '<div class="LABBLOCK_PHOTO"> <img src="images/labs/LRB_lab.jpg" width=300> </div>'+
                        '<h3>Лаборатория радиационной биологии</h3>'+
                        '<p>Основные направления исследований, проводимых сотрудниками Лаборатории радиационной биологии (ЛРБ): радиационная генетика и радиобиология; радиационная физиология и нейрохимия; математическое моделирование биофизических систем; астробиология; физика защиты от излучений и радиационные исследования на ядерно-физических установках Института.</p>'+
                    '<p> <a href="http://lrb.jinr.ru/index.php/ru/" target="_blank">Сайт лаборатории</a> </p>';
                polyline.bindPopup(descr,{autoPanPaddingTopLeft:[50,50], className: 'lhep_obj_popup'}).on;
            }


            if (road.map_object_type.indexOf('b_FLNP')>-1){
                let descr = '<img src="images/labs/FLNP_lab.jpg" width=300>'+
                        '<h3>Лаборатория нейтронной физики им. И.М.Франка</h3>'+
                        '<p>В Лаборатории нейтронной физики (ЛНФ) развивается комплексная амбициозная научная программа по исследованию нейтрона как элементарной частицы, а также по его применению в области ядерной физики, физики конденсированных сред и в ряде современных прикладных научных исследований.</p>'+
                    '<p> <a href="http://flnph.jinr.ru" target="_blank">Сайт лаборатории</a> </p>';
                polyline.bindPopup(descr,{autoPanPaddingTopLeft:[50,50], className: 'lhep_obj_popup'}).on;
            }



            if (road.map_object_type.indexOf('b_FLNR')>-1){
                let descr = '<img src="images/labs/FLNR_lab.jpg" width=300>' +
                            '<h3>Лаборатория ядерных реакций им. Г.Н.Флерова</h3>'+
                            '<p>Научная программа Лаборатории ядерных реакций (ЛЯР) включает в себя эксперименты по синтезу и исследованию'+
                            ' ядерно-физических и химических свойств новых сверхтяжелых элементов, исследованию реакций слияния-деления и '+
                            'многонуклонных передач при столкновении тяжелых ионов; изучению свойств ядер на границе нуклонной стабильности '+
                            'и механизмов ядерных реакций с ускоренными радиоактивными ядрами; исследованию взаимодействия тяжелых ионов с различными '+
                            'материалами (полимеры, полупроводники, электронные компоненты космической техники и т.д.).</p>' +
                              '<p> <a href="http://flerovlab.jinr.ru/" target="_blank">Сайт лаборатории</a> </p>';

                polyline.bindPopup(descr,{autoPanPaddingTopLeft:[50,50], className: 'lhep_obj_popup'}).on;
            }

            if (road.map_object_type.indexOf('b_MLIT')>-1){
                let descr = '<img src="images/labs/MLIT_lab.jpg" width=300><h3>Лаборатория информационных технологий им. М.Г.Мещерякова</h3>'+
                '<p>Основные направления деятельности Лаборатории информационных технологий (ЛИТ) связаны с обеспечением сетевыми, вычислительными и информационными ресурсами,'+
                'а также с математической поддержкой широкого спектра исследований, проводимых в ОИЯИ в области физики высоких энергий, ядерной физики, физики конденсированных'+
                'сред и т. д.</p> <p> <a href="https://lit.jinr.ru" target="_blank">Сайт лаборатории</a> </p>';

                polyline.bindPopup(descr,{autoPanPaddingTopLeft:[50,50], className: 'lhep_obj_popup'}).on;
            }


   

            road['_leaflet_id'] = polyline._leaflet_id;
            road['leaflet_obj'] = polyline;
            tbl = $('##'+road['map_object_type'])[0];

            if (road['map_object_type']=='m_cluster'){
                tbl = $('##b_NICA')[0];
            }


            //console.log('##'+road['map_object_type']+' '+tbl);
            if(typeof tbl == "undefined") return;
            
            var row=tbl.insertRow( -1);
            var c1 = row.insertCell();
            showname = '';
            
            if (road['o_type'] ==1 ){
                showname = road['obj_name'];
            }
            if (road['o_type'] ==2 ){
                showname = road['tooltip'];
            }
            if (road['o_type'] ==4 ){
                showname = road['tooltip'];
            }
            if (road['o_type'] ==3 ){
                showname = road['tooltip'];
                iconUrl = polyline.options.icon.options.iconUrl;
//                if (road['map_object_type']=='m_transport')
                {
                    showname = '<img src="'+iconUrl+'" width="10" height="15">'+showname;
                }
                
            }
            c1.innerHTML = '<label><input type="checkbox"  class=show_' + road.map_object_type + '  idobj=' + el + ' id=blink' + el + ' onclick="centerMap(this)">' + showname + '</input></label>';

            polyline.on(
                 'click',
                 function(e) {
                   L.DomEvent.stopPropagation(e);
                 });
        }
//==============================
        var tbl_bld= $('##table_bld_view')[0];
        var tbl_roads= $('##table_roads_view')[0];
        var tbl_markers= $('##table_markers_view')[0];

        var editing_id = '--';
        var selbtype ='#selbtype#';
        var selmtype ='#selmtype#';
        
        var roads = #roads#;
        var timetables = #timetables#;
        console.log(2,'============timetables <br> '+JSON.stringify(timetables));
        var overlays = {};

        var ovrls = [{},{},{}];

        for (el in roads) {
            if (el.length==0)   break;
            //console.log('===================== el = '+el);
            var road = roads[el];
//            console.log(el+' = '+JSON.stringify(road));
            add_object(el, road);

        }
        var redmarker =  L.marker([#init_coord#], {icon: map_object_types['m_redmark']['icon']});
                

        

    </script>
    
[end]


