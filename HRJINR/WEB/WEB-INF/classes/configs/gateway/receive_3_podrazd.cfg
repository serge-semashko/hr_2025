gateway/receive_3_podrazd.cfg

[comments]
descr=S: Прием из шлюза подразделения
input=Command - команда, ObjectType - тип объекта === 3, object - объект в JSON + распарзенные параметры из JSON
output=занесение / пометка удаленным / снятие пометки в таблице struktura
parents=gateway/receive.cfg
childs=admin/infos/jinr_setDivParents
author=Куняев
[end]

[description]
    <ol>
        <li>Проверка наличия параметров Код, Наименование, установка значения РодительКод=0, если его нет.</li>
        <li>Проверка наличия записи с id=Код, получение PID существующей записи </li>
        <li>Для команды PutObject:
            <ul>
            <li>Проверка наличия родительского подразделения</li>
            <li>Обновление существующей записи или добавление новой</li>
            <li>Вызов admin/infos/jinr_setDivParents для простановки полей "уровень", "полный путь" и "код"</li>
            <li>Возврат в gateway/receive.cfg REC_ID=Код</li>
            </ul>
        </li>
        <li>Для команды DeleteObject:
            <ul>
                <li>Проверка наличия дочерних подразделений. Если есть не удаленные - выставление ошибки</li>
                <li>Установка флага is_deleted</li>
            </ul>
        </li>
        <li>Для команды UnDeleteObject:
            <ul>
            <li>Если подразделения нет - выставление ошибки</li>
            <li>Проверка наличия родительского подразделения. Если нет - выставление ошибки</li>
            <li>Снятие флага is_deleted</li>
            </ul>
        </li>
    </ol>
[end]

[parameters]
request_name=S:Прием подразделения
LOG=ON
[end]


[report]
    $LOG <hr><b>===>>> receive_3_podrazd.cfg</b><br>
    $LOG3 object=#Object#;<br> 
    $SET_PARAMETERS ERR_CODE=0; ERROR=; 
    $SET_PARAMETERS ERROR=Отсутствует Код; ??!Код
    $SET_PARAMETERS ERROR=Отсутствует Наименование; ??!Наименование
    $SET_PARAMETERS РодительКод=0; ??!РодительКод

    $GET_DATA [check existing record] ??!ERROR

    $INCLUDE [PutObject] ??Command=PutObject&!ERROR
    $INCLUDE [DeleteObject] ??Command=DeleteObject
    $INCLUDE [UnDeleteObject] ??Command=UnDeleteObject
[end]

    $GET_DATA [check parent] ??
    $SET_PARAMETERS ERROR=Ошибка: нет родительского подразделения (код: #РодительКод#); ??!PARENT_EXISTS ??
    $LOG3 <b>РодительКод: Новый #РодительКод# => Старый #OLD_PID#</b>;<br>  ??

[PutObject]  ****** Добавление / обновление записи
    $SET_PARAMETERS PARENT_EXISTS=Y         
    $GET_DATA [create record] ??!ERROR&!REC_EXISTS
    $SET_PARAMETERS REC_ID=#Код#; ??!REC_ID
    $GET_DATA [update record] ??!ERROR&REC_EXISTS
    $SET_PARAMETERS ResultCode=3; Result=#ERROR#; ??ERROR
[end]
    $CALL_SERVICE c=gateway/jinr_setDivParents; ??!ERROR ??



[DeleteObject]   ****** Пометка на удаление
    $GET_DATA [check children]  ??REC_EXISTS
    $SET_PARAMETERS ERROR=Ошибка: есть #NUM_CHILDREN# дочерних подразделений; ??NUM_CHILDREN>0
    $GET_DATA [mark deleted]  ??!NUM_CHILDREN>0
    $SET_PARAMETERS ResultCode=3; Result=#ERROR#; ??ERROR
[end]

    $GET_DATA [check parent]  ??!ERROR 
    $SET_PARAMETERS ERROR=Ошибка: нет родительского подразделения (код: #РодительКод#); ??!ERROR&!PARENT_EXISTS 

[UnDeleteObject]   ****** Снятие пометки на удаление
    $SET_PARAMETERS ERROR=Ошибка: подразделение не найдено (код: #Код#); ??!REC_EXISTS
    $GET_DATA [unmark deleted]  ??PARENT_EXISTS
    $SET_PARAMETERS ResultCode=3; Result=#ERROR#; ??ERROR
[end]

============================================================================
============================================================================

[check existing record]  ****** Поиск существующей записи
    select 'Y' as REC_EXISTS, id as REC_ID, pid as "OLD_PID" from struktura 
    where ID=#Код#
[end]

============================== PutObject ===================================

[check parent]   ****** Проверка наличия родительского подразделения
$LOG3 !!!22222222222
    select 'Y' as "PARENT_EXISTS"
    from struktura 
    where ID=#РодительКод# and is_deleted=0
[end]

[create record]  ****** Добавление записи
   $LOG3 !!!22222222222
    insert into struktura (ID, pid, short_code, name, short_name, changed)
    values(#Код#, #РодительКод#, left('#Код#', 3), '#Наименование#', '#Наименование#', now());
[end]
 

[update record]   ****** Обновление записи
    update struktura set pid=#РодительКод#, name='#Наименование#', is_deleted=0, changed=now() where ID=#Код#;
[end]


============================= DeleteObject ==================================

[check children]  ****** Проверка наличия неудаленных дочерних подразд.
    select count(id) as NUM_CHILDREN
    from struktura 
    where PID=#Код# and is_deleted=0
[end]

[mark deleted]  ******* Пометка на удаление
    update struktura set is_deleted=1, changed=now() where ID=#Код#;
[end]


============================= UnDeleteObject ==================================
[unmark deleted]  ******* Снятие пометки на удаление
    update struktura set is_deleted=0, changed=now() where ID=#Код#;
[end]
